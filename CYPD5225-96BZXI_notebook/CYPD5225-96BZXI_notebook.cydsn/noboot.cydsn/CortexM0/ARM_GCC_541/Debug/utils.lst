ARM GAS  e:\temp\ccI9ZFAz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"utils.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.mem_calculate_byte_checksum,"ax",%progbits
  20              		.align	2
  21              		.global	mem_calculate_byte_checksum
  22              		.code	16
  23              		.thumb_func
  24              		.type	mem_calculate_byte_checksum, %function
  25              	mem_calculate_byte_checksum:
  26              	.LFB0:
  27              		.file 1 "..\\src\\system\\utils.c"
   1:..\src\system/utils.c **** /**
   2:..\src\system/utils.c ****  * @file utils.c
   3:..\src\system/utils.c ****  *
   4:..\src\system/utils.c ****  * @brief @{General utility functions for the CCGx firmware stack.@}
   5:..\src\system/utils.c ****  */
   6:..\src\system/utils.c **** 
   7:..\src\system/utils.c **** /*
   8:..\src\system/utils.c ****  * Copyright (2014-2018), Cypress Semiconductor Corporation or a subsidiary of
   9:..\src\system/utils.c ****  * Cypress Semiconductor Corporation. All rights reserved.
  10:..\src\system/utils.c ****  *
  11:..\src\system/utils.c ****  * This software, including source code, documentation and related materials
  12:..\src\system/utils.c ****  * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  13:..\src\system/utils.c ****  * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  14:..\src\system/utils.c ****  * protection (United States and foreign), United States copyright laws and
  15:..\src\system/utils.c ****  * international treaty provisions. Therefore, you may use this Software only
  16:..\src\system/utils.c ****  * as provided in the license agreement accompanying the software package from
  17:..\src\system/utils.c ****  * which you obtained this Software (“EULA”).
  18:..\src\system/utils.c ****  *
  19:..\src\system/utils.c ****  * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  20:..\src\system/utils.c ****  * non-transferable license to copy, modify, and compile the Software source
  21:..\src\system/utils.c ****  * code solely for use in connection with Cypress’s integrated circuit
  22:..\src\system/utils.c ****  * products. Any reproduction, modification, translation, compilation, or
  23:..\src\system/utils.c ****  * representation of this Software except as specified above is prohibited
  24:..\src\system/utils.c ****  * without the express written permission of Cypress. Disclaimer: THIS SOFTWARE
  25:..\src\system/utils.c ****  * IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  26:..\src\system/utils.c ****  * INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED WARRANTIES OF
  27:..\src\system/utils.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress reserves the
  28:..\src\system/utils.c ****  * right to make changes to the Software without notice. Cypress does not
  29:..\src\system/utils.c ****  * assume any liability arising out of the application or use of the Software
  30:..\src\system/utils.c ****  * or any product or circuit described in the Software. Cypress does not
ARM GAS  e:\temp\ccI9ZFAz.s 			page 2


  31:..\src\system/utils.c ****  * authorize its products for use in any products where a malfunction or
  32:..\src\system/utils.c ****  * failure of the Cypress product may reasonably be expected to result in
  33:..\src\system/utils.c ****  * significant property damage, injury or death (“High Risk Product”). By
  34:..\src\system/utils.c ****  * including Cypress’s product in a High Risk Product, the manufacturer of such
  35:..\src\system/utils.c ****  * system or application assumes all risk of such use and in doing so agrees to
  36:..\src\system/utils.c ****  * indemnify Cypress against all liability.
  37:..\src\system/utils.c ****  */
  38:..\src\system/utils.c **** 
  39:..\src\system/utils.c **** #include "stddef.h"
  40:..\src\system/utils.c **** #include "utils.h"
  41:..\src\system/utils.c **** 
  42:..\src\system/utils.c **** /* The constant used for CRC-16 calculation. */
  43:..\src\system/utils.c **** #define CRC16_XOR_VALUE       (0xA001u)
  44:..\src\system/utils.c **** 
  45:..\src\system/utils.c **** uint8_t mem_calculate_byte_checksum(uint8_t *ptr, uint32_t size)
  46:..\src\system/utils.c **** {
  28              		.loc 1 46 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LVL1:
  47:..\src\system/utils.c ****     uint8_t checksum = 0;
  48:..\src\system/utils.c ****     uint32_t index;
  49:..\src\system/utils.c **** 
  50:..\src\system/utils.c ****     if ((ptr == NULL) || (size == 0))
  38              		.loc 1 50 0
  39 0002 0028     		cmp	r0, #0
  40 0004 0DD0     		beq	.L5
  41              		.loc 1 50 0 is_stmt 0 discriminator 1
  42 0006 0029     		cmp	r1, #0
  43 0008 0DD0     		beq	.L6
  44 000a 0022     		movs	r2, #0
  45 000c 0023     		movs	r3, #0
  46 000e 03E0     		b	.L3
  47              	.LVL2:
  48              	.L4:
  51:..\src\system/utils.c ****     {
  52:..\src\system/utils.c ****         return checksum;
  53:..\src\system/utils.c ****     }
  54:..\src\system/utils.c **** 
  55:..\src\system/utils.c ****     /* Calculate the binary sum of all the data. */
  56:..\src\system/utils.c ****     for (index = 0; index < size; index++)
  57:..\src\system/utils.c ****     {
  58:..\src\system/utils.c ****         checksum += ptr[index];
  49              		.loc 1 58 0 is_stmt 1 discriminator 3
  50 0010 845C     		ldrb	r4, [r0, r2]
  51 0012 1B19     		adds	r3, r3, r4
  52              	.LVL3:
  53 0014 DBB2     		uxtb	r3, r3
  54              	.LVL4:
  56:..\src\system/utils.c ****     {
  55              		.loc 1 56 0 discriminator 3
ARM GAS  e:\temp\ccI9ZFAz.s 			page 3


  56 0016 0132     		adds	r2, r2, #1
  57              	.LVL5:
  58              	.L3:
  56:..\src\system/utils.c ****     {
  59              		.loc 1 56 0 is_stmt 0 discriminator 1
  60 0018 8A42     		cmp	r2, r1
  61 001a F9D3     		bcc	.L4
  59:..\src\system/utils.c ****     }
  60:..\src\system/utils.c **** 
  61:..\src\system/utils.c ****     /* Return the 2's complement of the binary sum. */
  62:..\src\system/utils.c ****     return ((uint8_t)(1u) + (uint8_t)(~checksum));
  62              		.loc 1 62 0 is_stmt 1
  63 001c 5842     		rsbs	r0, r3, #0
  64              	.LVL6:
  65 001e C0B2     		uxtb	r0, r0
  66 0020 02E0     		b	.L2
  67              	.LVL7:
  68              	.L5:
  52:..\src\system/utils.c ****     }
  69              		.loc 1 52 0
  70 0022 0020     		movs	r0, #0
  71              	.LVL8:
  72 0024 00E0     		b	.L2
  73              	.LVL9:
  74              	.L6:
  75 0026 0020     		movs	r0, #0
  76              	.LVL10:
  77              	.L2:
  63:..\src\system/utils.c **** }
  78              		.loc 1 63 0
  79              		@ sp needed
  80 0028 10BD     		pop	{r4, pc}
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	mem_calculate_byte_checksum, .-mem_calculate_byte_checksum
  84 002a C046     		.section	.text.mem_calculate_word_checksum,"ax",%progbits
  85              		.align	2
  86              		.global	mem_calculate_word_checksum
  87              		.code	16
  88              		.thumb_func
  89              		.type	mem_calculate_word_checksum, %function
  90              	mem_calculate_word_checksum:
  91              	.LFB1:
  64:..\src\system/utils.c **** 
  65:..\src\system/utils.c **** uint16_t mem_calculate_word_checksum(uint16_t *ptr, uint32_t size)
  66:..\src\system/utils.c **** {
  92              		.loc 1 66 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 0, uses_anonymous_args = 0
  96              	.LVL11:
  97 0000 10B5     		push	{r4, lr}
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 4, -8
 100              		.cfi_offset 14, -4
 101              	.LVL12:
  67:..\src\system/utils.c ****     uint16_t checksum = 0;
ARM GAS  e:\temp\ccI9ZFAz.s 			page 4


  68:..\src\system/utils.c ****     uint32_t index;
  69:..\src\system/utils.c **** 
  70:..\src\system/utils.c ****     if ((ptr == NULL) || (size == 0))
 102              		.loc 1 70 0
 103 0002 0028     		cmp	r0, #0
 104 0004 0ED0     		beq	.L11
 105              		.loc 1 70 0 is_stmt 0 discriminator 1
 106 0006 0029     		cmp	r1, #0
 107 0008 0ED0     		beq	.L12
 108 000a 0022     		movs	r2, #0
 109 000c 0023     		movs	r3, #0
 110 000e 04E0     		b	.L9
 111              	.LVL13:
 112              	.L10:
  71:..\src\system/utils.c ****     {
  72:..\src\system/utils.c ****         return checksum;
  73:..\src\system/utils.c ****     }
  74:..\src\system/utils.c **** 
  75:..\src\system/utils.c ****     /* Calculate the binary sum of all the data. */
  76:..\src\system/utils.c ****     for (index = 0; index < size; index++)
  77:..\src\system/utils.c ****     {
  78:..\src\system/utils.c ****         checksum += ptr[index];
 113              		.loc 1 78 0 is_stmt 1 discriminator 3
 114 0010 5400     		lsls	r4, r2, #1
 115 0012 245A     		ldrh	r4, [r4, r0]
 116 0014 1B19     		adds	r3, r3, r4
 117              	.LVL14:
 118 0016 9BB2     		uxth	r3, r3
 119              	.LVL15:
  76:..\src\system/utils.c ****     {
 120              		.loc 1 76 0 discriminator 3
 121 0018 0132     		adds	r2, r2, #1
 122              	.LVL16:
 123              	.L9:
  76:..\src\system/utils.c ****     {
 124              		.loc 1 76 0 is_stmt 0 discriminator 1
 125 001a 8A42     		cmp	r2, r1
 126 001c F8D3     		bcc	.L10
  79:..\src\system/utils.c ****     }
  80:..\src\system/utils.c **** 
  81:..\src\system/utils.c ****     /* Return the 2's complement of the binary sum. */
  82:..\src\system/utils.c ****     return ((uint16_t)(1u) + (uint16_t)(~checksum));
 127              		.loc 1 82 0 is_stmt 1
 128 001e 5842     		rsbs	r0, r3, #0
 129              	.LVL17:
 130 0020 80B2     		uxth	r0, r0
 131 0022 02E0     		b	.L8
 132              	.LVL18:
 133              	.L11:
  72:..\src\system/utils.c ****     }
 134              		.loc 1 72 0
 135 0024 0020     		movs	r0, #0
 136              	.LVL19:
 137 0026 00E0     		b	.L8
 138              	.LVL20:
 139              	.L12:
 140 0028 0020     		movs	r0, #0
ARM GAS  e:\temp\ccI9ZFAz.s 			page 5


 141              	.LVL21:
 142              	.L8:
  83:..\src\system/utils.c **** }
 143              		.loc 1 83 0
 144              		@ sp needed
 145 002a 10BD     		pop	{r4, pc}
 146              		.cfi_endproc
 147              	.LFE1:
 148              		.size	mem_calculate_word_checksum, .-mem_calculate_word_checksum
 149              		.section	.text.mem_calculate_dword_checksum,"ax",%progbits
 150              		.align	2
 151              		.global	mem_calculate_dword_checksum
 152              		.code	16
 153              		.thumb_func
 154              		.type	mem_calculate_dword_checksum, %function
 155              	mem_calculate_dword_checksum:
 156              	.LFB2:
  84:..\src\system/utils.c **** 
  85:..\src\system/utils.c **** uint32_t mem_calculate_dword_checksum(uint32_t *ptr, uint32_t size)
  86:..\src\system/utils.c **** {
 157              		.loc 1 86 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              	.LVL22:
 162 0000 10B5     		push	{r4, lr}
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 4, -8
 165              		.cfi_offset 14, -4
 166              	.LVL23:
  87:..\src\system/utils.c ****     uint32_t index;
  88:..\src\system/utils.c ****     uint32_t checksum = 0;
  89:..\src\system/utils.c **** 
  90:..\src\system/utils.c ****     if ((ptr == NULL) || (size == 0))
 167              		.loc 1 90 0
 168 0002 0028     		cmp	r0, #0
 169 0004 0CD0     		beq	.L17
 170              		.loc 1 90 0 is_stmt 0 discriminator 1
 171 0006 0029     		cmp	r1, #0
 172 0008 0CD0     		beq	.L18
 173 000a 0022     		movs	r2, #0
 174 000c 0023     		movs	r3, #0
 175 000e 03E0     		b	.L15
 176              	.LVL24:
 177              	.L16:
  91:..\src\system/utils.c ****     {
  92:..\src\system/utils.c ****         return checksum;
  93:..\src\system/utils.c ****     }
  94:..\src\system/utils.c **** 
  95:..\src\system/utils.c ****     /* Calculate the binary sum of all the data. */
  96:..\src\system/utils.c ****     for (index = 0; index < size; index++)
  97:..\src\system/utils.c ****     {
  98:..\src\system/utils.c ****         checksum += ptr[index];
 178              		.loc 1 98 0 is_stmt 1 discriminator 3
 179 0010 9C00     		lsls	r4, r3, #2
 180 0012 2458     		ldr	r4, [r4, r0]
 181 0014 1219     		adds	r2, r2, r4
ARM GAS  e:\temp\ccI9ZFAz.s 			page 6


 182              	.LVL25:
  96:..\src\system/utils.c ****     {
 183              		.loc 1 96 0 discriminator 3
 184 0016 0133     		adds	r3, r3, #1
 185              	.LVL26:
 186              	.L15:
  96:..\src\system/utils.c ****     {
 187              		.loc 1 96 0 is_stmt 0 discriminator 1
 188 0018 8B42     		cmp	r3, r1
 189 001a F9D3     		bcc	.L16
  99:..\src\system/utils.c ****     }
 100:..\src\system/utils.c **** 
 101:..\src\system/utils.c ****     /* Return the 2's complement of the binary sum. */
 102:..\src\system/utils.c ****     return ((uint32_t)(1u) + (uint32_t)(~checksum));
 190              		.loc 1 102 0 is_stmt 1
 191 001c 5042     		rsbs	r0, r2, #0
 192              	.LVL27:
 193 001e 02E0     		b	.L14
 194              	.LVL28:
 195              	.L17:
  92:..\src\system/utils.c ****     }
 196              		.loc 1 92 0
 197 0020 0020     		movs	r0, #0
 198              	.LVL29:
 199 0022 00E0     		b	.L14
 200              	.LVL30:
 201              	.L18:
 202 0024 0020     		movs	r0, #0
 203              	.LVL31:
 204              	.L14:
 103:..\src\system/utils.c **** }
 205              		.loc 1 103 0
 206              		@ sp needed
 207 0026 10BD     		pop	{r4, pc}
 208              		.cfi_endproc
 209              	.LFE2:
 210              		.size	mem_calculate_dword_checksum, .-mem_calculate_dword_checksum
 211              		.section	.text.crc16,"ax",%progbits
 212              		.align	2
 213              		.global	crc16
 214              		.code	16
 215              		.thumb_func
 216              		.type	crc16, %function
 217              	crc16:
 218              	.LFB3:
 104:..\src\system/utils.c **** 
 105:..\src\system/utils.c **** uint16_t crc16(uint16_t crc, uint8_t data)
 106:..\src\system/utils.c **** {
 219              		.loc 1 106 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224              	.LVL32:
 107:..\src\system/utils.c ****     int i = 8;
 108:..\src\system/utils.c **** 
 109:..\src\system/utils.c ****     crc ^= data;
ARM GAS  e:\temp\ccI9ZFAz.s 			page 7


 225              		.loc 1 109 0
 226 0000 4840     		eors	r0, r1
 227              	.LVL33:
 107:..\src\system/utils.c ****     int i = 8;
 228              		.loc 1 107 0
 229 0002 0823     		movs	r3, #8
 230              	.LVL34:
 231              	.L22:
 110:..\src\system/utils.c ****     do
 111:..\src\system/utils.c ****     {
 112:..\src\system/utils.c ****         if (crc & 1) 
 232              		.loc 1 112 0
 233 0004 C207     		lsls	r2, r0, #31
 234 0006 04D5     		bpl	.L20
 113:..\src\system/utils.c ****         {
 114:..\src\system/utils.c ****             crc = (crc >> 1) ^ CRC16_XOR_VALUE;
 235              		.loc 1 114 0
 236 0008 4008     		lsrs	r0, r0, #1
 237              	.LVL35:
 238 000a 0449     		ldr	r1, .L23
 239 000c 4840     		eors	r0, r1
 240 000e 80B2     		uxth	r0, r0
 241              	.LVL36:
 242 0010 00E0     		b	.L21
 243              	.L20:
 115:..\src\system/utils.c ****         } 
 116:..\src\system/utils.c ****         else 
 117:..\src\system/utils.c ****         {
 118:..\src\system/utils.c ****             crc = (crc >> 1);
 244              		.loc 1 118 0
 245 0012 4008     		lsrs	r0, r0, #1
 246              	.LVL37:
 247              	.L21:
 119:..\src\system/utils.c ****         }
 120:..\src\system/utils.c ****     } while(--i);
 248              		.loc 1 120 0
 249 0014 013B     		subs	r3, r3, #1
 250              	.LVL38:
 251 0016 002B     		cmp	r3, #0
 252 0018 F4D1     		bne	.L22
 121:..\src\system/utils.c ****     
 122:..\src\system/utils.c ****     return crc;
 123:..\src\system/utils.c **** }
 253              		.loc 1 123 0
 254              		@ sp needed
 255 001a 7047     		bx	lr
 256              	.L24:
 257              		.align	2
 258              	.L23:
 259 001c 01A0FFFF 		.word	-24575
 260              		.cfi_endproc
 261              	.LFE3:
 262              		.size	crc16, .-crc16
 263              		.section	.text.mem_copy_word,"ax",%progbits
 264              		.align	2
 265              		.global	mem_copy_word
 266              		.code	16
ARM GAS  e:\temp\ccI9ZFAz.s 			page 8


 267              		.thumb_func
 268              		.type	mem_copy_word, %function
 269              	mem_copy_word:
 270              	.LFB4:
 124:..\src\system/utils.c **** 
 125:..\src\system/utils.c **** void mem_copy_word(uint32_t* dest, const uint32_t* source, uint32_t size)
 126:..\src\system/utils.c **** {
 271              		.loc 1 126 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL39:
 276 0000 30B5     		push	{r4, r5, lr}
 277              		.cfi_def_cfa_offset 12
 278              		.cfi_offset 4, -12
 279              		.cfi_offset 5, -8
 280              		.cfi_offset 14, -4
 281              	.LVL40:
 127:..\src\system/utils.c ****     uint32_t i;
 128:..\src\system/utils.c ****     for(i = 0 ; i < size; i++)
 282              		.loc 1 128 0
 283 0002 0023     		movs	r3, #0
 284 0004 03E0     		b	.L26
 285              	.LVL41:
 286              	.L27:
 129:..\src\system/utils.c ****     {
 130:..\src\system/utils.c ****         dest[i] = source[i];
 287              		.loc 1 130 0 discriminator 3
 288 0006 9C00     		lsls	r4, r3, #2
 289 0008 0D59     		ldr	r5, [r1, r4]
 290 000a 0551     		str	r5, [r0, r4]
 128:..\src\system/utils.c ****     {
 291              		.loc 1 128 0 discriminator 3
 292 000c 0133     		adds	r3, r3, #1
 293              	.LVL42:
 294              	.L26:
 128:..\src\system/utils.c ****     {
 295              		.loc 1 128 0 is_stmt 0 discriminator 1
 296 000e 9342     		cmp	r3, r2
 297 0010 F9D3     		bcc	.L27
 131:..\src\system/utils.c ****     }
 132:..\src\system/utils.c **** }
 298              		.loc 1 132 0 is_stmt 1
 299              		@ sp needed
 300 0012 30BD     		pop	{r4, r5, pc}
 301              		.cfi_endproc
 302              	.LFE4:
 303              		.size	mem_copy_word, .-mem_copy_word
 304              		.text
 305              	.Letext0:
 306              		.file 2 "e:\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\inc
 307              		.file 3 "e:\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\inc
 308              		.section	.debug_info,"",%progbits
 309              	.Ldebug_info0:
 310 0000 59020000 		.4byte	0x259
 311 0004 0400     		.2byte	0x4
 312 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  e:\temp\ccI9ZFAz.s 			page 9


 313 000a 04       		.byte	0x4
 314 000b 01       		.uleb128 0x1
 315 000c 0A000000 		.4byte	.LASF26
 316 0010 0C       		.byte	0xc
 317 0011 F1000000 		.4byte	.LASF27
 318 0015 C7010000 		.4byte	.LASF28
 319 0019 00000000 		.4byte	.Ldebug_ranges0+0
 320 001d 00000000 		.4byte	0
 321 0021 00000000 		.4byte	.Ldebug_line0
 322 0025 02       		.uleb128 0x2
 323 0026 04       		.byte	0x4
 324 0027 05       		.byte	0x5
 325 0028 696E7400 		.ascii	"int\000"
 326 002c 03       		.uleb128 0x3
 327 002d 04       		.byte	0x4
 328 002e 07       		.byte	0x7
 329 002f 71010000 		.4byte	.LASF0
 330 0033 03       		.uleb128 0x3
 331 0034 08       		.byte	0x8
 332 0035 05       		.byte	0x5
 333 0036 B9010000 		.4byte	.LASF1
 334 003a 03       		.uleb128 0x3
 335 003b 08       		.byte	0x8
 336 003c 04       		.byte	0x4
 337 003d 78020000 		.4byte	.LASF2
 338 0041 03       		.uleb128 0x3
 339 0042 01       		.byte	0x1
 340 0043 06       		.byte	0x6
 341 0044 84020000 		.4byte	.LASF3
 342 0048 04       		.uleb128 0x4
 343 0049 00000000 		.4byte	.LASF6
 344 004d 02       		.byte	0x2
 345 004e 1D       		.byte	0x1d
 346 004f 53000000 		.4byte	0x53
 347 0053 03       		.uleb128 0x3
 348 0054 01       		.byte	0x1
 349 0055 08       		.byte	0x8
 350 0056 23010000 		.4byte	.LASF4
 351 005a 03       		.uleb128 0x3
 352 005b 02       		.byte	0x2
 353 005c 05       		.byte	0x5
 354 005d 4D020000 		.4byte	.LASF5
 355 0061 04       		.uleb128 0x4
 356 0062 56010000 		.4byte	.LASF7
 357 0066 02       		.byte	0x2
 358 0067 2B       		.byte	0x2b
 359 0068 6C000000 		.4byte	0x6c
 360 006c 03       		.uleb128 0x3
 361 006d 02       		.byte	0x2
 362 006e 07       		.byte	0x7
 363 006f 43010000 		.4byte	.LASF8
 364 0073 03       		.uleb128 0x3
 365 0074 04       		.byte	0x4
 366 0075 05       		.byte	0x5
 367 0076 6F020000 		.4byte	.LASF9
 368 007a 04       		.uleb128 0x4
 369 007b 66010000 		.4byte	.LASF10
ARM GAS  e:\temp\ccI9ZFAz.s 			page 10


 370 007f 02       		.byte	0x2
 371 0080 41       		.byte	0x41
 372 0081 85000000 		.4byte	0x85
 373 0085 03       		.uleb128 0x3
 374 0086 04       		.byte	0x4
 375 0087 07       		.byte	0x7
 376 0088 31010000 		.4byte	.LASF11
 377 008c 03       		.uleb128 0x3
 378 008d 08       		.byte	0x8
 379 008e 07       		.byte	0x7
 380 008f 7E010000 		.4byte	.LASF12
 381 0093 04       		.uleb128 0x4
 382 0094 95010000 		.4byte	.LASF13
 383 0098 03       		.byte	0x3
 384 0099 18       		.byte	0x18
 385 009a 48000000 		.4byte	0x48
 386 009e 04       		.uleb128 0x4
 387 009f 57020000 		.4byte	.LASF14
 388 00a3 03       		.byte	0x3
 389 00a4 24       		.byte	0x24
 390 00a5 61000000 		.4byte	0x61
 391 00a9 04       		.uleb128 0x4
 392 00aa 66020000 		.4byte	.LASF15
 393 00ae 03       		.byte	0x3
 394 00af 30       		.byte	0x30
 395 00b0 7A000000 		.4byte	0x7a
 396 00b4 05       		.uleb128 0x5
 397 00b5 9D010000 		.4byte	.LASF19
 398 00b9 01       		.byte	0x1
 399 00ba 2D       		.byte	0x2d
 400 00bb 93000000 		.4byte	0x93
 401 00bf 00000000 		.4byte	.LFB0
 402 00c3 2A000000 		.4byte	.LFE0-.LFB0
 403 00c7 01       		.uleb128 0x1
 404 00c8 9C       		.byte	0x9c
 405 00c9 08010000 		.4byte	0x108
 406 00cd 06       		.uleb128 0x6
 407 00ce 70747200 		.ascii	"ptr\000"
 408 00d2 01       		.byte	0x1
 409 00d3 2D       		.byte	0x2d
 410 00d4 08010000 		.4byte	0x108
 411 00d8 00000000 		.4byte	.LLST0
 412 00dc 07       		.uleb128 0x7
 413 00dd 97020000 		.4byte	.LASF16
 414 00e1 01       		.byte	0x1
 415 00e2 2D       		.byte	0x2d
 416 00e3 A9000000 		.4byte	0xa9
 417 00e7 01       		.uleb128 0x1
 418 00e8 51       		.byte	0x51
 419 00e9 08       		.uleb128 0x8
 420 00ea E8000000 		.4byte	.LASF17
 421 00ee 01       		.byte	0x1
 422 00ef 2F       		.byte	0x2f
 423 00f0 93000000 		.4byte	0x93
 424 00f4 53000000 		.4byte	.LLST1
 425 00f8 08       		.uleb128 0x8
 426 00f9 60020000 		.4byte	.LASF18
ARM GAS  e:\temp\ccI9ZFAz.s 			page 11


 427 00fd 01       		.byte	0x1
 428 00fe 30       		.byte	0x30
 429 00ff A9000000 		.4byte	0xa9
 430 0103 89000000 		.4byte	.LLST2
 431 0107 00       		.byte	0
 432 0108 09       		.uleb128 0x9
 433 0109 04       		.byte	0x4
 434 010a 93000000 		.4byte	0x93
 435 010e 05       		.uleb128 0x5
 436 010f 07010000 		.4byte	.LASF20
 437 0113 01       		.byte	0x1
 438 0114 41       		.byte	0x41
 439 0115 9E000000 		.4byte	0x9e
 440 0119 00000000 		.4byte	.LFB1
 441 011d 2C000000 		.4byte	.LFE1-.LFB1
 442 0121 01       		.uleb128 0x1
 443 0122 9C       		.byte	0x9c
 444 0123 62010000 		.4byte	0x162
 445 0127 06       		.uleb128 0x6
 446 0128 70747200 		.ascii	"ptr\000"
 447 012c 01       		.byte	0x1
 448 012d 41       		.byte	0x41
 449 012e 62010000 		.4byte	0x162
 450 0132 9C000000 		.4byte	.LLST3
 451 0136 07       		.uleb128 0x7
 452 0137 97020000 		.4byte	.LASF16
 453 013b 01       		.byte	0x1
 454 013c 41       		.byte	0x41
 455 013d A9000000 		.4byte	0xa9
 456 0141 01       		.uleb128 0x1
 457 0142 51       		.byte	0x51
 458 0143 08       		.uleb128 0x8
 459 0144 E8000000 		.4byte	.LASF17
 460 0148 01       		.byte	0x1
 461 0149 43       		.byte	0x43
 462 014a 9E000000 		.4byte	0x9e
 463 014e EF000000 		.4byte	.LLST4
 464 0152 08       		.uleb128 0x8
 465 0153 60020000 		.4byte	.LASF18
 466 0157 01       		.byte	0x1
 467 0158 44       		.byte	0x44
 468 0159 A9000000 		.4byte	0xa9
 469 015d 25010000 		.4byte	.LLST5
 470 0161 00       		.byte	0
 471 0162 09       		.uleb128 0x9
 472 0163 04       		.byte	0x4
 473 0164 9E000000 		.4byte	0x9e
 474 0168 05       		.uleb128 0x5
 475 0169 C6000000 		.4byte	.LASF21
 476 016d 01       		.byte	0x1
 477 016e 55       		.byte	0x55
 478 016f A9000000 		.4byte	0xa9
 479 0173 00000000 		.4byte	.LFB2
 480 0177 28000000 		.4byte	.LFE2-.LFB2
 481 017b 01       		.uleb128 0x1
 482 017c 9C       		.byte	0x9c
 483 017d BC010000 		.4byte	0x1bc
ARM GAS  e:\temp\ccI9ZFAz.s 			page 12


 484 0181 06       		.uleb128 0x6
 485 0182 70747200 		.ascii	"ptr\000"
 486 0186 01       		.byte	0x1
 487 0187 55       		.byte	0x55
 488 0188 BC010000 		.4byte	0x1bc
 489 018c 38010000 		.4byte	.LLST6
 490 0190 07       		.uleb128 0x7
 491 0191 97020000 		.4byte	.LASF16
 492 0195 01       		.byte	0x1
 493 0196 55       		.byte	0x55
 494 0197 A9000000 		.4byte	0xa9
 495 019b 01       		.uleb128 0x1
 496 019c 51       		.byte	0x51
 497 019d 08       		.uleb128 0x8
 498 019e 60020000 		.4byte	.LASF18
 499 01a2 01       		.byte	0x1
 500 01a3 57       		.byte	0x57
 501 01a4 A9000000 		.4byte	0xa9
 502 01a8 8B010000 		.4byte	.LLST7
 503 01ac 08       		.uleb128 0x8
 504 01ad E8000000 		.4byte	.LASF17
 505 01b1 01       		.byte	0x1
 506 01b2 58       		.byte	0x58
 507 01b3 A9000000 		.4byte	0xa9
 508 01b7 9E010000 		.4byte	.LLST8
 509 01bb 00       		.byte	0
 510 01bc 09       		.uleb128 0x9
 511 01bd 04       		.byte	0x4
 512 01be A9000000 		.4byte	0xa9
 513 01c2 05       		.uleb128 0x5
 514 01c3 C0000000 		.4byte	.LASF22
 515 01c7 01       		.byte	0x1
 516 01c8 69       		.byte	0x69
 517 01c9 9E000000 		.4byte	0x9e
 518 01cd 00000000 		.4byte	.LFB3
 519 01d1 20000000 		.4byte	.LFE3-.LFB3
 520 01d5 01       		.uleb128 0x1
 521 01d6 9C       		.byte	0x9c
 522 01d7 07020000 		.4byte	0x207
 523 01db 06       		.uleb128 0x6
 524 01dc 63726300 		.ascii	"crc\000"
 525 01e0 01       		.byte	0x1
 526 01e1 69       		.byte	0x69
 527 01e2 9E000000 		.4byte	0x9e
 528 01e6 C9010000 		.4byte	.LLST9
 529 01ea 0A       		.uleb128 0xa
 530 01eb E3000000 		.4byte	.LASF23
 531 01ef 01       		.byte	0x1
 532 01f0 69       		.byte	0x69
 533 01f1 93000000 		.4byte	0x93
 534 01f5 F2010000 		.4byte	.LLST10
 535 01f9 0B       		.uleb128 0xb
 536 01fa 6900     		.ascii	"i\000"
 537 01fc 01       		.byte	0x1
 538 01fd 6B       		.byte	0x6b
 539 01fe 25000000 		.4byte	0x25
 540 0202 13020000 		.4byte	.LLST11
ARM GAS  e:\temp\ccI9ZFAz.s 			page 13


 541 0206 00       		.byte	0
 542 0207 0C       		.uleb128 0xc
 543 0208 3F020000 		.4byte	.LASF29
 544 020c 01       		.byte	0x1
 545 020d 7D       		.byte	0x7d
 546 020e 00000000 		.4byte	.LFB4
 547 0212 14000000 		.4byte	.LFE4-.LFB4
 548 0216 01       		.uleb128 0x1
 549 0217 9C       		.byte	0x9c
 550 0218 51020000 		.4byte	0x251
 551 021c 07       		.uleb128 0x7
 552 021d 61010000 		.4byte	.LASF24
 553 0221 01       		.byte	0x1
 554 0222 7D       		.byte	0x7d
 555 0223 BC010000 		.4byte	0x1bc
 556 0227 01       		.uleb128 0x1
 557 0228 50       		.byte	0x50
 558 0229 07       		.uleb128 0x7
 559 022a 90020000 		.4byte	.LASF25
 560 022e 01       		.byte	0x1
 561 022f 7D       		.byte	0x7d
 562 0230 51020000 		.4byte	0x251
 563 0234 01       		.uleb128 0x1
 564 0235 51       		.byte	0x51
 565 0236 07       		.uleb128 0x7
 566 0237 97020000 		.4byte	.LASF16
 567 023b 01       		.byte	0x1
 568 023c 7D       		.byte	0x7d
 569 023d A9000000 		.4byte	0xa9
 570 0241 01       		.uleb128 0x1
 571 0242 52       		.byte	0x52
 572 0243 0B       		.uleb128 0xb
 573 0244 6900     		.ascii	"i\000"
 574 0246 01       		.byte	0x1
 575 0247 7F       		.byte	0x7f
 576 0248 A9000000 		.4byte	0xa9
 577 024c 32020000 		.4byte	.LLST12
 578 0250 00       		.byte	0
 579 0251 09       		.uleb128 0x9
 580 0252 04       		.byte	0x4
 581 0253 57020000 		.4byte	0x257
 582 0257 0D       		.uleb128 0xd
 583 0258 A9000000 		.4byte	0xa9
 584 025c 00       		.byte	0
 585              		.section	.debug_abbrev,"",%progbits
 586              	.Ldebug_abbrev0:
 587 0000 01       		.uleb128 0x1
 588 0001 11       		.uleb128 0x11
 589 0002 01       		.byte	0x1
 590 0003 25       		.uleb128 0x25
 591 0004 0E       		.uleb128 0xe
 592 0005 13       		.uleb128 0x13
 593 0006 0B       		.uleb128 0xb
 594 0007 03       		.uleb128 0x3
 595 0008 0E       		.uleb128 0xe
 596 0009 1B       		.uleb128 0x1b
 597 000a 0E       		.uleb128 0xe
ARM GAS  e:\temp\ccI9ZFAz.s 			page 14


 598 000b 55       		.uleb128 0x55
 599 000c 17       		.uleb128 0x17
 600 000d 11       		.uleb128 0x11
 601 000e 01       		.uleb128 0x1
 602 000f 10       		.uleb128 0x10
 603 0010 17       		.uleb128 0x17
 604 0011 00       		.byte	0
 605 0012 00       		.byte	0
 606 0013 02       		.uleb128 0x2
 607 0014 24       		.uleb128 0x24
 608 0015 00       		.byte	0
 609 0016 0B       		.uleb128 0xb
 610 0017 0B       		.uleb128 0xb
 611 0018 3E       		.uleb128 0x3e
 612 0019 0B       		.uleb128 0xb
 613 001a 03       		.uleb128 0x3
 614 001b 08       		.uleb128 0x8
 615 001c 00       		.byte	0
 616 001d 00       		.byte	0
 617 001e 03       		.uleb128 0x3
 618 001f 24       		.uleb128 0x24
 619 0020 00       		.byte	0
 620 0021 0B       		.uleb128 0xb
 621 0022 0B       		.uleb128 0xb
 622 0023 3E       		.uleb128 0x3e
 623 0024 0B       		.uleb128 0xb
 624 0025 03       		.uleb128 0x3
 625 0026 0E       		.uleb128 0xe
 626 0027 00       		.byte	0
 627 0028 00       		.byte	0
 628 0029 04       		.uleb128 0x4
 629 002a 16       		.uleb128 0x16
 630 002b 00       		.byte	0
 631 002c 03       		.uleb128 0x3
 632 002d 0E       		.uleb128 0xe
 633 002e 3A       		.uleb128 0x3a
 634 002f 0B       		.uleb128 0xb
 635 0030 3B       		.uleb128 0x3b
 636 0031 0B       		.uleb128 0xb
 637 0032 49       		.uleb128 0x49
 638 0033 13       		.uleb128 0x13
 639 0034 00       		.byte	0
 640 0035 00       		.byte	0
 641 0036 05       		.uleb128 0x5
 642 0037 2E       		.uleb128 0x2e
 643 0038 01       		.byte	0x1
 644 0039 3F       		.uleb128 0x3f
 645 003a 19       		.uleb128 0x19
 646 003b 03       		.uleb128 0x3
 647 003c 0E       		.uleb128 0xe
 648 003d 3A       		.uleb128 0x3a
 649 003e 0B       		.uleb128 0xb
 650 003f 3B       		.uleb128 0x3b
 651 0040 0B       		.uleb128 0xb
 652 0041 27       		.uleb128 0x27
 653 0042 19       		.uleb128 0x19
 654 0043 49       		.uleb128 0x49
ARM GAS  e:\temp\ccI9ZFAz.s 			page 15


 655 0044 13       		.uleb128 0x13
 656 0045 11       		.uleb128 0x11
 657 0046 01       		.uleb128 0x1
 658 0047 12       		.uleb128 0x12
 659 0048 06       		.uleb128 0x6
 660 0049 40       		.uleb128 0x40
 661 004a 18       		.uleb128 0x18
 662 004b 9742     		.uleb128 0x2117
 663 004d 19       		.uleb128 0x19
 664 004e 01       		.uleb128 0x1
 665 004f 13       		.uleb128 0x13
 666 0050 00       		.byte	0
 667 0051 00       		.byte	0
 668 0052 06       		.uleb128 0x6
 669 0053 05       		.uleb128 0x5
 670 0054 00       		.byte	0
 671 0055 03       		.uleb128 0x3
 672 0056 08       		.uleb128 0x8
 673 0057 3A       		.uleb128 0x3a
 674 0058 0B       		.uleb128 0xb
 675 0059 3B       		.uleb128 0x3b
 676 005a 0B       		.uleb128 0xb
 677 005b 49       		.uleb128 0x49
 678 005c 13       		.uleb128 0x13
 679 005d 02       		.uleb128 0x2
 680 005e 17       		.uleb128 0x17
 681 005f 00       		.byte	0
 682 0060 00       		.byte	0
 683 0061 07       		.uleb128 0x7
 684 0062 05       		.uleb128 0x5
 685 0063 00       		.byte	0
 686 0064 03       		.uleb128 0x3
 687 0065 0E       		.uleb128 0xe
 688 0066 3A       		.uleb128 0x3a
 689 0067 0B       		.uleb128 0xb
 690 0068 3B       		.uleb128 0x3b
 691 0069 0B       		.uleb128 0xb
 692 006a 49       		.uleb128 0x49
 693 006b 13       		.uleb128 0x13
 694 006c 02       		.uleb128 0x2
 695 006d 18       		.uleb128 0x18
 696 006e 00       		.byte	0
 697 006f 00       		.byte	0
 698 0070 08       		.uleb128 0x8
 699 0071 34       		.uleb128 0x34
 700 0072 00       		.byte	0
 701 0073 03       		.uleb128 0x3
 702 0074 0E       		.uleb128 0xe
 703 0075 3A       		.uleb128 0x3a
 704 0076 0B       		.uleb128 0xb
 705 0077 3B       		.uleb128 0x3b
 706 0078 0B       		.uleb128 0xb
 707 0079 49       		.uleb128 0x49
 708 007a 13       		.uleb128 0x13
 709 007b 02       		.uleb128 0x2
 710 007c 17       		.uleb128 0x17
 711 007d 00       		.byte	0
ARM GAS  e:\temp\ccI9ZFAz.s 			page 16


 712 007e 00       		.byte	0
 713 007f 09       		.uleb128 0x9
 714 0080 0F       		.uleb128 0xf
 715 0081 00       		.byte	0
 716 0082 0B       		.uleb128 0xb
 717 0083 0B       		.uleb128 0xb
 718 0084 49       		.uleb128 0x49
 719 0085 13       		.uleb128 0x13
 720 0086 00       		.byte	0
 721 0087 00       		.byte	0
 722 0088 0A       		.uleb128 0xa
 723 0089 05       		.uleb128 0x5
 724 008a 00       		.byte	0
 725 008b 03       		.uleb128 0x3
 726 008c 0E       		.uleb128 0xe
 727 008d 3A       		.uleb128 0x3a
 728 008e 0B       		.uleb128 0xb
 729 008f 3B       		.uleb128 0x3b
 730 0090 0B       		.uleb128 0xb
 731 0091 49       		.uleb128 0x49
 732 0092 13       		.uleb128 0x13
 733 0093 02       		.uleb128 0x2
 734 0094 17       		.uleb128 0x17
 735 0095 00       		.byte	0
 736 0096 00       		.byte	0
 737 0097 0B       		.uleb128 0xb
 738 0098 34       		.uleb128 0x34
 739 0099 00       		.byte	0
 740 009a 03       		.uleb128 0x3
 741 009b 08       		.uleb128 0x8
 742 009c 3A       		.uleb128 0x3a
 743 009d 0B       		.uleb128 0xb
 744 009e 3B       		.uleb128 0x3b
 745 009f 0B       		.uleb128 0xb
 746 00a0 49       		.uleb128 0x49
 747 00a1 13       		.uleb128 0x13
 748 00a2 02       		.uleb128 0x2
 749 00a3 17       		.uleb128 0x17
 750 00a4 00       		.byte	0
 751 00a5 00       		.byte	0
 752 00a6 0C       		.uleb128 0xc
 753 00a7 2E       		.uleb128 0x2e
 754 00a8 01       		.byte	0x1
 755 00a9 3F       		.uleb128 0x3f
 756 00aa 19       		.uleb128 0x19
 757 00ab 03       		.uleb128 0x3
 758 00ac 0E       		.uleb128 0xe
 759 00ad 3A       		.uleb128 0x3a
 760 00ae 0B       		.uleb128 0xb
 761 00af 3B       		.uleb128 0x3b
 762 00b0 0B       		.uleb128 0xb
 763 00b1 27       		.uleb128 0x27
 764 00b2 19       		.uleb128 0x19
 765 00b3 11       		.uleb128 0x11
 766 00b4 01       		.uleb128 0x1
 767 00b5 12       		.uleb128 0x12
 768 00b6 06       		.uleb128 0x6
ARM GAS  e:\temp\ccI9ZFAz.s 			page 17


 769 00b7 40       		.uleb128 0x40
 770 00b8 18       		.uleb128 0x18
 771 00b9 9742     		.uleb128 0x2117
 772 00bb 19       		.uleb128 0x19
 773 00bc 01       		.uleb128 0x1
 774 00bd 13       		.uleb128 0x13
 775 00be 00       		.byte	0
 776 00bf 00       		.byte	0
 777 00c0 0D       		.uleb128 0xd
 778 00c1 26       		.uleb128 0x26
 779 00c2 00       		.byte	0
 780 00c3 49       		.uleb128 0x49
 781 00c4 13       		.uleb128 0x13
 782 00c5 00       		.byte	0
 783 00c6 00       		.byte	0
 784 00c7 00       		.byte	0
 785              		.section	.debug_loc,"",%progbits
 786              	.Ldebug_loc0:
 787              	.LLST0:
 788 0000 00000000 		.4byte	.LVL0
 789 0004 1E000000 		.4byte	.LVL6
 790 0008 0100     		.2byte	0x1
 791 000a 50       		.byte	0x50
 792 000b 1E000000 		.4byte	.LVL6
 793 000f 22000000 		.4byte	.LVL7
 794 0013 0400     		.2byte	0x4
 795 0015 F3       		.byte	0xf3
 796 0016 01       		.uleb128 0x1
 797 0017 50       		.byte	0x50
 798 0018 9F       		.byte	0x9f
 799 0019 22000000 		.4byte	.LVL7
 800 001d 24000000 		.4byte	.LVL8
 801 0021 0100     		.2byte	0x1
 802 0023 50       		.byte	0x50
 803 0024 24000000 		.4byte	.LVL8
 804 0028 26000000 		.4byte	.LVL9
 805 002c 0400     		.2byte	0x4
 806 002e F3       		.byte	0xf3
 807 002f 01       		.uleb128 0x1
 808 0030 50       		.byte	0x50
 809 0031 9F       		.byte	0x9f
 810 0032 26000000 		.4byte	.LVL9
 811 0036 28000000 		.4byte	.LVL10
 812 003a 0100     		.2byte	0x1
 813 003c 50       		.byte	0x50
 814 003d 28000000 		.4byte	.LVL10
 815 0041 2A000000 		.4byte	.LFE0
 816 0045 0400     		.2byte	0x4
 817 0047 F3       		.byte	0xf3
 818 0048 01       		.uleb128 0x1
 819 0049 50       		.byte	0x50
 820 004a 9F       		.byte	0x9f
 821 004b 00000000 		.4byte	0
 822 004f 00000000 		.4byte	0
 823              	.LLST1:
 824 0053 02000000 		.4byte	.LVL1
 825 0057 10000000 		.4byte	.LVL2
ARM GAS  e:\temp\ccI9ZFAz.s 			page 18


 826 005b 0200     		.2byte	0x2
 827 005d 30       		.byte	0x30
 828 005e 9F       		.byte	0x9f
 829 005f 10000000 		.4byte	.LVL2
 830 0063 14000000 		.4byte	.LVL3
 831 0067 0100     		.2byte	0x1
 832 0069 53       		.byte	0x53
 833 006a 16000000 		.4byte	.LVL4
 834 006e 22000000 		.4byte	.LVL7
 835 0072 0100     		.2byte	0x1
 836 0074 53       		.byte	0x53
 837 0075 22000000 		.4byte	.LVL7
 838 0079 28000000 		.4byte	.LVL10
 839 007d 0200     		.2byte	0x2
 840 007f 30       		.byte	0x30
 841 0080 9F       		.byte	0x9f
 842 0081 00000000 		.4byte	0
 843 0085 00000000 		.4byte	0
 844              	.LLST2:
 845 0089 10000000 		.4byte	.LVL2
 846 008d 22000000 		.4byte	.LVL7
 847 0091 0100     		.2byte	0x1
 848 0093 52       		.byte	0x52
 849 0094 00000000 		.4byte	0
 850 0098 00000000 		.4byte	0
 851              	.LLST3:
 852 009c 00000000 		.4byte	.LVL11
 853 00a0 20000000 		.4byte	.LVL17
 854 00a4 0100     		.2byte	0x1
 855 00a6 50       		.byte	0x50
 856 00a7 20000000 		.4byte	.LVL17
 857 00ab 24000000 		.4byte	.LVL18
 858 00af 0400     		.2byte	0x4
 859 00b1 F3       		.byte	0xf3
 860 00b2 01       		.uleb128 0x1
 861 00b3 50       		.byte	0x50
 862 00b4 9F       		.byte	0x9f
 863 00b5 24000000 		.4byte	.LVL18
 864 00b9 26000000 		.4byte	.LVL19
 865 00bd 0100     		.2byte	0x1
 866 00bf 50       		.byte	0x50
 867 00c0 26000000 		.4byte	.LVL19
 868 00c4 28000000 		.4byte	.LVL20
 869 00c8 0400     		.2byte	0x4
 870 00ca F3       		.byte	0xf3
 871 00cb 01       		.uleb128 0x1
 872 00cc 50       		.byte	0x50
 873 00cd 9F       		.byte	0x9f
 874 00ce 28000000 		.4byte	.LVL20
 875 00d2 2A000000 		.4byte	.LVL21
 876 00d6 0100     		.2byte	0x1
 877 00d8 50       		.byte	0x50
 878 00d9 2A000000 		.4byte	.LVL21
 879 00dd 2C000000 		.4byte	.LFE1
 880 00e1 0400     		.2byte	0x4
 881 00e3 F3       		.byte	0xf3
 882 00e4 01       		.uleb128 0x1
ARM GAS  e:\temp\ccI9ZFAz.s 			page 19


 883 00e5 50       		.byte	0x50
 884 00e6 9F       		.byte	0x9f
 885 00e7 00000000 		.4byte	0
 886 00eb 00000000 		.4byte	0
 887              	.LLST4:
 888 00ef 02000000 		.4byte	.LVL12
 889 00f3 10000000 		.4byte	.LVL13
 890 00f7 0200     		.2byte	0x2
 891 00f9 30       		.byte	0x30
 892 00fa 9F       		.byte	0x9f
 893 00fb 10000000 		.4byte	.LVL13
 894 00ff 16000000 		.4byte	.LVL14
 895 0103 0100     		.2byte	0x1
 896 0105 53       		.byte	0x53
 897 0106 18000000 		.4byte	.LVL15
 898 010a 24000000 		.4byte	.LVL18
 899 010e 0100     		.2byte	0x1
 900 0110 53       		.byte	0x53
 901 0111 24000000 		.4byte	.LVL18
 902 0115 2A000000 		.4byte	.LVL21
 903 0119 0200     		.2byte	0x2
 904 011b 30       		.byte	0x30
 905 011c 9F       		.byte	0x9f
 906 011d 00000000 		.4byte	0
 907 0121 00000000 		.4byte	0
 908              	.LLST5:
 909 0125 10000000 		.4byte	.LVL13
 910 0129 24000000 		.4byte	.LVL18
 911 012d 0100     		.2byte	0x1
 912 012f 52       		.byte	0x52
 913 0130 00000000 		.4byte	0
 914 0134 00000000 		.4byte	0
 915              	.LLST6:
 916 0138 00000000 		.4byte	.LVL22
 917 013c 1E000000 		.4byte	.LVL27
 918 0140 0100     		.2byte	0x1
 919 0142 50       		.byte	0x50
 920 0143 1E000000 		.4byte	.LVL27
 921 0147 20000000 		.4byte	.LVL28
 922 014b 0400     		.2byte	0x4
 923 014d F3       		.byte	0xf3
 924 014e 01       		.uleb128 0x1
 925 014f 50       		.byte	0x50
 926 0150 9F       		.byte	0x9f
 927 0151 20000000 		.4byte	.LVL28
 928 0155 22000000 		.4byte	.LVL29
 929 0159 0100     		.2byte	0x1
 930 015b 50       		.byte	0x50
 931 015c 22000000 		.4byte	.LVL29
 932 0160 24000000 		.4byte	.LVL30
 933 0164 0400     		.2byte	0x4
 934 0166 F3       		.byte	0xf3
 935 0167 01       		.uleb128 0x1
 936 0168 50       		.byte	0x50
 937 0169 9F       		.byte	0x9f
 938 016a 24000000 		.4byte	.LVL30
 939 016e 26000000 		.4byte	.LVL31
ARM GAS  e:\temp\ccI9ZFAz.s 			page 20


 940 0172 0100     		.2byte	0x1
 941 0174 50       		.byte	0x50
 942 0175 26000000 		.4byte	.LVL31
 943 0179 28000000 		.4byte	.LFE2
 944 017d 0400     		.2byte	0x4
 945 017f F3       		.byte	0xf3
 946 0180 01       		.uleb128 0x1
 947 0181 50       		.byte	0x50
 948 0182 9F       		.byte	0x9f
 949 0183 00000000 		.4byte	0
 950 0187 00000000 		.4byte	0
 951              	.LLST7:
 952 018b 10000000 		.4byte	.LVL24
 953 018f 20000000 		.4byte	.LVL28
 954 0193 0100     		.2byte	0x1
 955 0195 53       		.byte	0x53
 956 0196 00000000 		.4byte	0
 957 019a 00000000 		.4byte	0
 958              	.LLST8:
 959 019e 02000000 		.4byte	.LVL23
 960 01a2 10000000 		.4byte	.LVL24
 961 01a6 0200     		.2byte	0x2
 962 01a8 30       		.byte	0x30
 963 01a9 9F       		.byte	0x9f
 964 01aa 10000000 		.4byte	.LVL24
 965 01ae 20000000 		.4byte	.LVL28
 966 01b2 0100     		.2byte	0x1
 967 01b4 52       		.byte	0x52
 968 01b5 20000000 		.4byte	.LVL28
 969 01b9 26000000 		.4byte	.LVL31
 970 01bd 0200     		.2byte	0x2
 971 01bf 30       		.byte	0x30
 972 01c0 9F       		.byte	0x9f
 973 01c1 00000000 		.4byte	0
 974 01c5 00000000 		.4byte	0
 975              	.LLST9:
 976 01c9 00000000 		.4byte	.LVL32
 977 01cd 02000000 		.4byte	.LVL33
 978 01d1 0100     		.2byte	0x1
 979 01d3 50       		.byte	0x50
 980 01d4 02000000 		.4byte	.LVL33
 981 01d8 0A000000 		.4byte	.LVL35
 982 01dc 0100     		.2byte	0x1
 983 01de 50       		.byte	0x50
 984 01df 10000000 		.4byte	.LVL36
 985 01e3 20000000 		.4byte	.LFE3
 986 01e7 0100     		.2byte	0x1
 987 01e9 50       		.byte	0x50
 988 01ea 00000000 		.4byte	0
 989 01ee 00000000 		.4byte	0
 990              	.LLST10:
 991 01f2 00000000 		.4byte	.LVL32
 992 01f6 04000000 		.4byte	.LVL34
 993 01fa 0100     		.2byte	0x1
 994 01fc 51       		.byte	0x51
 995 01fd 04000000 		.4byte	.LVL34
 996 0201 20000000 		.4byte	.LFE3
ARM GAS  e:\temp\ccI9ZFAz.s 			page 21


 997 0205 0400     		.2byte	0x4
 998 0207 F3       		.byte	0xf3
 999 0208 01       		.uleb128 0x1
 1000 0209 51       		.byte	0x51
 1001 020a 9F       		.byte	0x9f
 1002 020b 00000000 		.4byte	0
 1003 020f 00000000 		.4byte	0
 1004              	.LLST11:
 1005 0213 00000000 		.4byte	.LVL32
 1006 0217 04000000 		.4byte	.LVL34
 1007 021b 0200     		.2byte	0x2
 1008 021d 38       		.byte	0x38
 1009 021e 9F       		.byte	0x9f
 1010 021f 04000000 		.4byte	.LVL34
 1011 0223 20000000 		.4byte	.LFE3
 1012 0227 0100     		.2byte	0x1
 1013 0229 53       		.byte	0x53
 1014 022a 00000000 		.4byte	0
 1015 022e 00000000 		.4byte	0
 1016              	.LLST12:
 1017 0232 02000000 		.4byte	.LVL40
 1018 0236 06000000 		.4byte	.LVL41
 1019 023a 0200     		.2byte	0x2
 1020 023c 30       		.byte	0x30
 1021 023d 9F       		.byte	0x9f
 1022 023e 06000000 		.4byte	.LVL41
 1023 0242 14000000 		.4byte	.LFE4
 1024 0246 0100     		.2byte	0x1
 1025 0248 53       		.byte	0x53
 1026 0249 00000000 		.4byte	0
 1027 024d 00000000 		.4byte	0
 1028              		.section	.debug_aranges,"",%progbits
 1029 0000 3C000000 		.4byte	0x3c
 1030 0004 0200     		.2byte	0x2
 1031 0006 00000000 		.4byte	.Ldebug_info0
 1032 000a 04       		.byte	0x4
 1033 000b 00       		.byte	0
 1034 000c 0000     		.2byte	0
 1035 000e 0000     		.2byte	0
 1036 0010 00000000 		.4byte	.LFB0
 1037 0014 2A000000 		.4byte	.LFE0-.LFB0
 1038 0018 00000000 		.4byte	.LFB1
 1039 001c 2C000000 		.4byte	.LFE1-.LFB1
 1040 0020 00000000 		.4byte	.LFB2
 1041 0024 28000000 		.4byte	.LFE2-.LFB2
 1042 0028 00000000 		.4byte	.LFB3
 1043 002c 20000000 		.4byte	.LFE3-.LFB3
 1044 0030 00000000 		.4byte	.LFB4
 1045 0034 14000000 		.4byte	.LFE4-.LFB4
 1046 0038 00000000 		.4byte	0
 1047 003c 00000000 		.4byte	0
 1048              		.section	.debug_ranges,"",%progbits
 1049              	.Ldebug_ranges0:
 1050 0000 00000000 		.4byte	.LFB0
 1051 0004 2A000000 		.4byte	.LFE0
 1052 0008 00000000 		.4byte	.LFB1
 1053 000c 2C000000 		.4byte	.LFE1
ARM GAS  e:\temp\ccI9ZFAz.s 			page 22


 1054 0010 00000000 		.4byte	.LFB2
 1055 0014 28000000 		.4byte	.LFE2
 1056 0018 00000000 		.4byte	.LFB3
 1057 001c 20000000 		.4byte	.LFE3
 1058 0020 00000000 		.4byte	.LFB4
 1059 0024 14000000 		.4byte	.LFE4
 1060 0028 00000000 		.4byte	0
 1061 002c 00000000 		.4byte	0
 1062              		.section	.debug_line,"",%progbits
 1063              	.Ldebug_line0:
 1064 0000 D0010000 		.section	.debug_str,"MS",%progbits,1
 1064      02000101 
 1064      00000201 
 1064      FB0E0D00 
 1064      01010101 
 1065              	.LASF6:
 1066 0000 5F5F7569 		.ascii	"__uint8_t\000"
 1066      6E74385F 
 1066      7400
 1067              	.LASF26:
 1068 000a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1068      43313120 
 1068      352E342E 
 1068      31203230 
 1068      31363036 
 1069 003d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1069      20726576 
 1069      6973696F 
 1069      6E203233 
 1069      37373135 
 1070 0070 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects -finline-fu"
 1070      66756E63 
 1070      74696F6E 
 1070      2D736563 
 1070      74696F6E 
 1071 00a3 6E637469 		.ascii	"nctions -fno-strict-aliasing\000"
 1071      6F6E7320 
 1071      2D666E6F 
 1071      2D737472 
 1071      6963742D 
 1072              	.LASF22:
 1073 00c0 63726331 		.ascii	"crc16\000"
 1073      3600
 1074              	.LASF21:
 1075 00c6 6D656D5F 		.ascii	"mem_calculate_dword_checksum\000"
 1075      63616C63 
 1075      756C6174 
 1075      655F6477 
 1075      6F72645F 
 1076              	.LASF23:
 1077 00e3 64617461 		.ascii	"data\000"
 1077      00
 1078              	.LASF17:
 1079 00e8 63686563 		.ascii	"checksum\000"
 1079      6B73756D 
 1079      00
 1080              	.LASF27:
ARM GAS  e:\temp\ccI9ZFAz.s 			page 23


 1081 00f1 2E2E5C73 		.ascii	"..\\src\\system\\utils.c\000"
 1081      72635C73 
 1081      79737465 
 1081      6D5C7574 
 1081      696C732E 
 1082              	.LASF20:
 1083 0107 6D656D5F 		.ascii	"mem_calculate_word_checksum\000"
 1083      63616C63 
 1083      756C6174 
 1083      655F776F 
 1083      72645F63 
 1084              	.LASF4:
 1085 0123 756E7369 		.ascii	"unsigned char\000"
 1085      676E6564 
 1085      20636861 
 1085      7200
 1086              	.LASF11:
 1087 0131 6C6F6E67 		.ascii	"long unsigned int\000"
 1087      20756E73 
 1087      69676E65 
 1087      6420696E 
 1087      7400
 1088              	.LASF8:
 1089 0143 73686F72 		.ascii	"short unsigned int\000"
 1089      7420756E 
 1089      7369676E 
 1089      65642069 
 1089      6E7400
 1090              	.LASF7:
 1091 0156 5F5F7569 		.ascii	"__uint16_t\000"
 1091      6E743136 
 1091      5F7400
 1092              	.LASF24:
 1093 0161 64657374 		.ascii	"dest\000"
 1093      00
 1094              	.LASF10:
 1095 0166 5F5F7569 		.ascii	"__uint32_t\000"
 1095      6E743332 
 1095      5F7400
 1096              	.LASF0:
 1097 0171 756E7369 		.ascii	"unsigned int\000"
 1097      676E6564 
 1097      20696E74 
 1097      00
 1098              	.LASF12:
 1099 017e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1099      206C6F6E 
 1099      6720756E 
 1099      7369676E 
 1099      65642069 
 1100              	.LASF13:
 1101 0195 75696E74 		.ascii	"uint8_t\000"
 1101      385F7400 
 1102              	.LASF19:
 1103 019d 6D656D5F 		.ascii	"mem_calculate_byte_checksum\000"
 1103      63616C63 
 1103      756C6174 
ARM GAS  e:\temp\ccI9ZFAz.s 			page 24


 1103      655F6279 
 1103      74655F63 
 1104              	.LASF1:
 1105 01b9 6C6F6E67 		.ascii	"long long int\000"
 1105      206C6F6E 
 1105      6720696E 
 1105      7400
 1106              	.LASF28:
 1107 01c7 433A5C55 		.ascii	"C:\\Users\\Admin\\Desktop\\_FIRMWARE\\DBARLite\\CYP"
 1107      73657273 
 1107      5C41646D 
 1107      696E5C44 
 1107      65736B74 
 1108 01f4 44353232 		.ascii	"D5225\\CYPD5225-96BZXI_notebook\\CYPD5225-96BZXI_no"
 1108      355C4359 
 1108      50443532 
 1108      32352D39 
 1108      36425A58 
 1109 0225 7465626F 		.ascii	"tebook.cydsn\\noboot.cydsn\000"
 1109      6F6B2E63 
 1109      7964736E 
 1109      5C6E6F62 
 1109      6F6F742E 
 1110              	.LASF29:
 1111 023f 6D656D5F 		.ascii	"mem_copy_word\000"
 1111      636F7079 
 1111      5F776F72 
 1111      6400
 1112              	.LASF5:
 1113 024d 73686F72 		.ascii	"short int\000"
 1113      7420696E 
 1113      7400
 1114              	.LASF14:
 1115 0257 75696E74 		.ascii	"uint16_t\000"
 1115      31365F74 
 1115      00
 1116              	.LASF18:
 1117 0260 696E6465 		.ascii	"index\000"
 1117      7800
 1118              	.LASF15:
 1119 0266 75696E74 		.ascii	"uint32_t\000"
 1119      33325F74 
 1119      00
 1120              	.LASF9:
 1121 026f 6C6F6E67 		.ascii	"long int\000"
 1121      20696E74 
 1121      00
 1122              	.LASF2:
 1123 0278 6C6F6E67 		.ascii	"long double\000"
 1123      20646F75 
 1123      626C6500 
 1124              	.LASF3:
 1125 0284 7369676E 		.ascii	"signed char\000"
 1125      65642063 
 1125      68617200 
 1126              	.LASF25:
 1127 0290 736F7572 		.ascii	"source\000"
ARM GAS  e:\temp\ccI9ZFAz.s 			page 25


 1127      636500
 1128              	.LASF16:
 1129 0297 73697A65 		.ascii	"size\000"
 1129      00
 1130              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

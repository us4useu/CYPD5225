ARM GAS  e:\temp\ccrFbtw8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"timer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.wdt_calibrate,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	wdt_calibrate, %function
  24              	wdt_calibrate:
  25              	.LFB32:
  26              		.file 1 "..\\src\\system\\timer.c"
   1:..\src\system/timer.c **** /**
   2:..\src\system/timer.c ****  * @file timer.c
   3:..\src\system/timer.c ****  *
   4:..\src\system/timer.c ****  * @brief @{Soft timer source file.@}
   5:..\src\system/timer.c ****  */
   6:..\src\system/timer.c **** 
   7:..\src\system/timer.c **** /*
   8:..\src\system/timer.c ****  * Copyright (2014-2018), Cypress Semiconductor Corporation or a subsidiary of
   9:..\src\system/timer.c ****  * Cypress Semiconductor Corporation. All rights reserved.
  10:..\src\system/timer.c ****  *
  11:..\src\system/timer.c ****  * This software, including source code, documentation and related materials
  12:..\src\system/timer.c ****  * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  13:..\src\system/timer.c ****  * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  14:..\src\system/timer.c ****  * protection (United States and foreign), United States copyright laws and
  15:..\src\system/timer.c ****  * international treaty provisions. Therefore, you may use this Software only
  16:..\src\system/timer.c ****  * as provided in the license agreement accompanying the software package from
  17:..\src\system/timer.c ****  * which you obtained this Software (“EULA”).
  18:..\src\system/timer.c ****  *
  19:..\src\system/timer.c ****  * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  20:..\src\system/timer.c ****  * non-transferable license to copy, modify, and compile the Software source
  21:..\src\system/timer.c ****  * code solely for use in connection with Cypress’s integrated circuit
  22:..\src\system/timer.c ****  * products. Any reproduction, modification, translation, compilation, or
  23:..\src\system/timer.c ****  * representation of this Software except as specified above is prohibited
  24:..\src\system/timer.c ****  * without the express written permission of Cypress. Disclaimer: THIS SOFTWARE
  25:..\src\system/timer.c ****  * IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  26:..\src\system/timer.c ****  * INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED WARRANTIES OF
  27:..\src\system/timer.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress reserves the
  28:..\src\system/timer.c ****  * right to make changes to the Software without notice. Cypress does not
  29:..\src\system/timer.c ****  * assume any liability arising out of the application or use of the Software
  30:..\src\system/timer.c ****  * or any product or circuit described in the Software. Cypress does not
  31:..\src\system/timer.c ****  * authorize its products for use in any products where a malfunction or
ARM GAS  e:\temp\ccrFbtw8.s 			page 2


  32:..\src\system/timer.c ****  * failure of the Cypress product may reasonably be expected to result in
  33:..\src\system/timer.c ****  * significant property damage, injury or death (“High Risk Product”). By
  34:..\src\system/timer.c ****  * including Cypress’s product in a High Risk Product, the manufacturer of such
  35:..\src\system/timer.c ****  * system or application assumes all risk of such use and in doing so agrees to
  36:..\src\system/timer.c ****  * indemnify Cypress against all liability.
  37:..\src\system/timer.c ****  */
  38:..\src\system/timer.c **** 
  39:..\src\system/timer.c **** #include "config.h"
  40:..\src\system/timer.c **** #include "stdint.h"
  41:..\src\system/timer.c **** #include "stdbool.h"
  42:..\src\system/timer.c **** #include "ccgx_regs.h"
  43:..\src\system/timer.c **** #include "timer.h"
  44:..\src\system/timer.c **** 
  45:..\src\system/timer.c **** #include "CyLib.h"
  46:..\src\system/timer.c **** 
  47:..\src\system/timer.c **** /*********************** Configuration checks ********************************/
  48:..\src\system/timer.c **** 
  49:..\src\system/timer.c **** #if ((TIMER_TYPE != TIMER_TYPE_WDT) && \
  50:..\src\system/timer.c ****         (TIMER_TYPE != TIMER_TYPE_SYSTICK))
  51:..\src\system/timer.c **** #error "Invalid TIMER_TYPE option. Only TIMER_TYPE_WDT and TIMER_TYPE_SYSTICK supported."
  52:..\src\system/timer.c **** #endif /* (TIMER_TYPE) */
  53:..\src\system/timer.c **** 
  54:..\src\system/timer.c **** #if ((TIMER_TICKLESS_ENABLE != 0) && (TIMER_TYPE != TIMER_TYPE_WDT))
  55:..\src\system/timer.c **** #error "Tickless timer supported only for WDT based implementation."
  56:..\src\system/timer.c **** #endif /* ((TIMER_TICKLESS_ENABLE != 0) && (TIMER_TYPE != TIMER_TYPE_WDT)) */
  57:..\src\system/timer.c **** 
  58:..\src\system/timer.c **** /*****************************************************************************/
  59:..\src\system/timer.c **** 
  60:..\src\system/timer.c **** #if ((TIMER_TYPE == TIMER_TYPE_WDT))
  61:..\src\system/timer.c **** 
  62:..\src\system/timer.c **** /* WDT timer interrupt vector number */
  63:..\src\system/timer.c **** #define WDT_RESET_DISABLE_KEY           ((uint32_t)(0xACED8865u))
  64:..\src\system/timer.c **** #ifdef CCG2
  65:..\src\system/timer.c **** #define WDT_INTERRUPT_VECTOR_NUMBER     (5u)
  66:..\src\system/timer.c **** #elif (defined(CCG3)) || (defined(DMC))
  67:..\src\system/timer.c **** #define WDT_INTERRUPT_VECTOR_NUMBER     (7u)
  68:..\src\system/timer.c **** #elif (defined(CCG4))
  69:..\src\system/timer.c **** #define WDT_INTERRUPT_VECTOR_NUMBER     (8u)
  70:..\src\system/timer.c **** #elif (defined(CCG3PA))
  71:..\src\system/timer.c **** #define WDT_INTERRUPT_VECTOR_NUMBER     (6u)
  72:..\src\system/timer.c **** #elif (defined(CCG5))
  73:..\src\system/timer.c **** #define WDT_INTERRUPT_VECTOR_NUMBER     (9u)
  74:..\src\system/timer.c **** #elif (defined(CCG3PA2))
  75:..\src\system/timer.c **** #define WDT_INTERRUPT_VECTOR_NUMBER     (6u)
  76:..\src\system/timer.c **** #else /* Not supported */
  77:..\src\system/timer.c **** #error "Device not supported by the timer module."
  78:..\src\system/timer.c **** #endif /* Device check */
  79:..\src\system/timer.c **** 
  80:..\src\system/timer.c **** /*
  81:..\src\system/timer.c ****  * Maximum timeout value allowed. This value comprehends the maximum interrupt
  82:..\src\system/timer.c ****  * latencies so as not to overrun. Providing for a worst case number, 64 ticks
  83:..\src\system/timer.c ****  * is used.
  84:..\src\system/timer.c ****  */
  85:..\src\system/timer.c **** #define TIMER_HW_MAX_TIMEOUT            (0xFFC0u)
  86:..\src\system/timer.c **** 
  87:..\src\system/timer.c **** /*
  88:..\src\system/timer.c ****  * This time covers for the worst case interrupt latency
ARM GAS  e:\temp\ccrFbtw8.s 			page 3


  89:..\src\system/timer.c ****  * for the timer interrupt handler. Considering the worst
  90:..\src\system/timer.c ****  * case timing of 100us
  91:..\src\system/timer.c ****  */
  92:..\src\system/timer.c **** #define TIMER_OVERRUN_THRESHOLD         (5u)
  93:..\src\system/timer.c **** 
  94:..\src\system/timer.c **** /* Timer counter size in number of ticks. */
  95:..\src\system/timer.c **** #define TIMER_NUM_TICK_COUNTS           (0x10000u)
  96:..\src\system/timer.c **** 
  97:..\src\system/timer.c **** /* Multiplier for 1ms interval */
  98:..\src\system/timer.c **** static uint16_t gl_multiplier;
  99:..\src\system/timer.c **** 
 100:..\src\system/timer.c **** #endif /* ((TIMER_TYPE == TIMER_TYPE_WDT)) */
 101:..\src\system/timer.c **** 
 102:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE != 0)
 103:..\src\system/timer.c **** /* Tick time at timer start. */
 104:..\src\system/timer.c **** static uint16_t volatile gl_start_tick;
 105:..\src\system/timer.c **** /* Tick time from the start to match. */
 106:..\src\system/timer.c **** static uint16_t volatile gl_tick_time;
 107:..\src\system/timer.c **** /* Match register content. */
 108:..\src\system/timer.c **** static uint16_t volatile gl_match;
 109:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE != 0) */
 110:..\src\system/timer.c **** 
 111:..\src\system/timer.c **** /* The HF_CLK frequency should match the actual hardware HF_CLK frequency. */
 112:..\src\system/timer.c **** #define HF_CLK_FREQENCY                 (CYDEV_BCLK__HFCLK__HZ)
 113:..\src\system/timer.c **** /* The HF counter theshold for 1ms timeout. Division is expected
 114:..\src\system/timer.c ****  * to be optimized out by the compiler. */
 115:..\src\system/timer.c **** #define HF_1MS_COUNT_VALUE              (HF_CLK_FREQENCY / 1000)
 116:..\src\system/timer.c **** /* The SYS_CLK frequency should match the actual hardware SYS_CLK frequency. */
 117:..\src\system/timer.c **** #define SYSCLK_FREQUENCY                (CYDEV_BCLK__SYSCLK__HZ)
 118:..\src\system/timer.c **** /* The SYS_CLK counter theshold for 1ms timeout. Division is expected
 119:..\src\system/timer.c ****  * to be optimized out by the compiler. */
 120:..\src\system/timer.c **** #define SYSCLK_1MS_COUNT_VALUE          (SYSCLK_FREQUENCY / 1000)
 121:..\src\system/timer.c **** /* SYS_TICK enable bit. */
 122:..\src\system/timer.c **** #define CM0_SYSTICK_CSR_ENABLE          (1)
 123:..\src\system/timer.c **** /* SYS_TICK interrupt enable. */
 124:..\src\system/timer.c **** #define CM0_SYSTICK_CSR_TICKINT         (1 << 1)
 125:..\src\system/timer.c **** /* SYS_TICK clock source selection for SYS_CLK */
 126:..\src\system/timer.c **** #define CM0_SYSTICK_CSR_CLKSOURCE       (1 << 2)
 127:..\src\system/timer.c **** /* SYS_TICK COUNTFLAG indicator */
 128:..\src\system/timer.c **** #define CM0_SYSTICK_CSR_COUNTFLAG       (1 << 16)
 129:..\src\system/timer.c **** 
 130:..\src\system/timer.c **** /* Handle for software timers. */
 131:..\src\system/timer.c **** static ccg_timer_t volatile gl_timer_handle[TIMER_NUM_INSTANCES][TIMER_NUM_TIMERS];
 132:..\src\system/timer.c **** 
 133:..\src\system/timer.c **** /* Number of active timers. */
 134:..\src\system/timer.c **** static uint8_t volatile gl_num_active[TIMER_NUM_INSTANCES];
 135:..\src\system/timer.c **** static uint8_t volatile gl_total_active;
 136:..\src\system/timer.c **** 
 137:..\src\system/timer.c **** /* Flag indicating whether invoked from timer callback. */
 138:..\src\system/timer.c **** static bool volatile gl_is_callback;
 139:..\src\system/timer.c **** 
 140:..\src\system/timer.c **** /* Forward declaration for the internal interrupt handler. */
 141:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 142:..\src\system/timer.c **** static void wdt_interrupt_handler(void);
 143:..\src\system/timer.c **** #else /* (TIMER_TYPE == TIMER_TYPE_SYSTICK) */
 144:..\src\system/timer.c **** static void systick_interrupt_handler(void);
 145:..\src\system/timer.c **** #endif /* (TIMER_TYPE) */
ARM GAS  e:\temp\ccrFbtw8.s 			page 4


 146:..\src\system/timer.c **** 
 147:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 148:..\src\system/timer.c **** static void wdt_calibrate(void)
 149:..\src\system/timer.c **** {
  27              		.loc 1 149 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
 150:..\src\system/timer.c ****     uint32_t start_count, end_count;
 151:..\src\system/timer.c ****     /* Ensure that the timer is disabled. */
 152:..\src\system/timer.c ****     CM0->syst_csr = 0;
  35              		.loc 1 152 0
  36 0002 184B     		ldr	r3, .L5
  37 0004 0022     		movs	r2, #0
  38 0006 1849     		ldr	r1, .L5+4
  39 0008 5A50     		str	r2, [r3, r1]
 153:..\src\system/timer.c ****     /* Clear the counter. */
 154:..\src\system/timer.c ****     CM0->syst_cvr = 0;
  40              		.loc 1 154 0
  41 000a 1849     		ldr	r1, .L5+8
  42 000c 5A50     		str	r2, [r3, r1]
 155:..\src\system/timer.c ****     /* Load 1ms timeout. */
 156:..\src\system/timer.c ****     CM0->syst_rvr = (SYSCLK_1MS_COUNT_VALUE - 1);
  43              		.loc 1 156 0
  44 000e 1849     		ldr	r1, .L5+12
  45 0010 184A     		ldr	r2, .L5+16
  46 0012 9950     		str	r1, [r3, r2]
 157:..\src\system/timer.c **** 
 158:..\src\system/timer.c ****     /* Wait for the WDT counter to change once so that we ensure the
 159:..\src\system/timer.c ****      * full calibration time. */
 160:..\src\system/timer.c ****     start_count = (SRSSLT->wdt_counter & WDT_COUNTER_COUNTER_MASK);
  47              		.loc 1 160 0
  48 0014 184B     		ldr	r3, .L5+20
  49 0016 DA6B     		ldr	r2, [r3, #60]
  50 0018 1204     		lsls	r2, r2, #16
  51 001a 120C     		lsrs	r2, r2, #16
  52              	.LVL0:
  53              	.L2:
 161:..\src\system/timer.c ****     while (start_count == (SRSSLT->wdt_counter & WDT_COUNTER_COUNTER_MASK));
  54              		.loc 1 161 0 discriminator 1
  55 001c 164B     		ldr	r3, .L5+20
  56 001e DB6B     		ldr	r3, [r3, #60]
  57 0020 1B04     		lsls	r3, r3, #16
  58 0022 1B0C     		lsrs	r3, r3, #16
  59 0024 9A42     		cmp	r2, r3
  60 0026 F9D0     		beq	.L2
 162:..\src\system/timer.c ****     /* Now note the WDT count value. */
 163:..\src\system/timer.c ****     start_count = (SRSSLT->wdt_counter & WDT_COUNTER_COUNTER_MASK);
  61              		.loc 1 163 0
  62 0028 134B     		ldr	r3, .L5+20
  63 002a D86B     		ldr	r0, [r3, #60]
  64 002c 0104     		lsls	r1, r0, #16
  65 002e 090C     		lsrs	r1, r1, #16
ARM GAS  e:\temp\ccrFbtw8.s 			page 5


  66              	.LVL1:
 164:..\src\system/timer.c **** 
 165:..\src\system/timer.c ****     CM0->syst_csr = (CM0_SYSTICK_CSR_ENABLE | CM0_SYSTICK_CSR_CLKSOURCE);
  67              		.loc 1 165 0
  68 0030 0524     		movs	r4, #5
  69 0032 0D4B     		ldr	r3, .L5+4
  70 0034 0B4A     		ldr	r2, .L5
  71 0036 D450     		str	r4, [r2, r3]
  72              	.L3:
 166:..\src\system/timer.c ****     while ((CM0->syst_csr & CM0_SYSTICK_CSR_COUNTFLAG) == 0);
  73              		.loc 1 166 0 discriminator 1
  74 0038 0B4B     		ldr	r3, .L5+4
  75 003a 0A4A     		ldr	r2, .L5
  76 003c D358     		ldr	r3, [r2, r3]
  77 003e DB03     		lsls	r3, r3, #15
  78 0040 FAD5     		bpl	.L3
 167:..\src\system/timer.c **** 
 168:..\src\system/timer.c ****     end_count = (SRSSLT->wdt_counter & WDT_COUNTER_COUNTER_MASK);
  79              		.loc 1 168 0
  80 0042 0D4B     		ldr	r3, .L5+20
  81 0044 DB6B     		ldr	r3, [r3, #60]
  82 0046 1B04     		lsls	r3, r3, #16
  83 0048 1B0C     		lsrs	r3, r3, #16
  84              	.LVL2:
 169:..\src\system/timer.c **** 
 170:..\src\system/timer.c ****     /* Now calculate the actual calibration value. */
 171:..\src\system/timer.c ****     if (start_count > end_count)
  85              		.loc 1 171 0
  86 004a 9942     		cmp	r1, r3
  87 004c 02D9     		bls	.L4
 172:..\src\system/timer.c ****     {
 173:..\src\system/timer.c ****         /* The counter had rolled over. */
 174:..\src\system/timer.c ****         end_count |= 0x10000;
  88              		.loc 1 174 0
  89 004e 8022     		movs	r2, #128
  90 0050 5202     		lsls	r2, r2, #9
  91 0052 1343     		orrs	r3, r2
  92              	.LVL3:
  93              	.L4:
 175:..\src\system/timer.c ****     }
 176:..\src\system/timer.c ****     /* Store the value for reload. */
 177:..\src\system/timer.c ****     gl_multiplier = end_count - start_count;
  94              		.loc 1 177 0
  95 0054 1B1A     		subs	r3, r3, r0
  96              	.LVL4:
  97 0056 094A     		ldr	r2, .L5+24
  98 0058 1380     		strh	r3, [r2]
 178:..\src\system/timer.c **** 
 179:..\src\system/timer.c ****     CM0->syst_csr = 0;
  99              		.loc 1 179 0
 100 005a 0021     		movs	r1, #0
 101              	.LVL5:
 102 005c 024B     		ldr	r3, .L5+4
 103 005e 014A     		ldr	r2, .L5
 104 0060 D150     		str	r1, [r2, r3]
 180:..\src\system/timer.c **** }
 105              		.loc 1 180 0
ARM GAS  e:\temp\ccrFbtw8.s 			page 6


 106              		@ sp needed
 107 0062 10BD     		pop	{r4, pc}
 108              	.L6:
 109              		.align	2
 110              	.L5:
 111 0064 001000E0 		.word	-536866816
 112 0068 10D00000 		.word	53264
 113 006c 18D00000 		.word	53272
 114 0070 BF5D0000 		.word	23999
 115 0074 14D00000 		.word	53268
 116 0078 00000340 		.word	1073938432
 117 007c 00000000 		.word	.LANCHOR0
 118              		.cfi_endproc
 119              	.LFE32:
 120              		.size	wdt_calibrate, .-wdt_calibrate
 121              		.section	.text.hw_timer_get_count,"ax",%progbits
 122              		.align	2
 123              		.code	16
 124              		.thumb_func
 125              		.type	hw_timer_get_count, %function
 126              	hw_timer_get_count:
 127              	.LFB36:
 181:..\src\system/timer.c **** #endif /* (TIMER_TYPE == TIMER_TYPE_WDT) */
 182:..\src\system/timer.c **** 
 183:..\src\system/timer.c **** /*
 184:..\src\system/timer.c ****  * The function initializes the hardware timer. It should be noted that
 185:..\src\system/timer.c ****  * the timer does not functioning at this point.
 186:..\src\system/timer.c ****  */
 187:..\src\system/timer.c **** static void hw_timer_init(void)
 188:..\src\system/timer.c **** {
 189:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 190:..\src\system/timer.c **** 
 191:..\src\system/timer.c ****     /* Disable the WDT timer interrupts. */
 192:..\src\system/timer.c ****     CyIntDisable (WDT_INTERRUPT_VECTOR_NUMBER);
 193:..\src\system/timer.c **** 
 194:..\src\system/timer.c ****     /* Disable WDT reset generation */
 195:..\src\system/timer.c ****     SRSSLT->wdt_disable_key = WDT_RESET_DISABLE_KEY;
 196:..\src\system/timer.c ****     /* Forward the interrupt to the CPU */
 197:..\src\system/timer.c ****     SRSSLT->srss_intr_mask |= SRSS_INTR_MASK_WDT_MATCH;
 198:..\src\system/timer.c ****     /* Start ILO */
 199:..\src\system/timer.c ****     SRSSLT->clk_ilo_config |= CLK_ILO_CONFIG_ENABLE;
 200:..\src\system/timer.c ****     /* Enable the watchdog timer interrupt */
 201:..\src\system/timer.c ****     SRSSLT->srss_intr = SRSS_INTR_WDT_MATCH;
 202:..\src\system/timer.c **** 
 203:..\src\system/timer.c ****     /* Timer interrupt handling */
 204:..\src\system/timer.c ****     (void)CyIntSetVector (WDT_INTERRUPT_VECTOR_NUMBER,
 205:..\src\system/timer.c ****             &wdt_interrupt_handler);
 206:..\src\system/timer.c **** 
 207:..\src\system/timer.c ****     /* Calibrate the WDT timer. */
 208:..\src\system/timer.c ****     wdt_calibrate ();
 209:..\src\system/timer.c **** 
 210:..\src\system/timer.c **** #else /* (TIMER_TYPE == TIMER_TYPE_SYSTICK) */
 211:..\src\system/timer.c **** 
 212:..\src\system/timer.c ****     /* Disable the timer. */
 213:..\src\system/timer.c ****     CM0->syst_csr = 0;
 214:..\src\system/timer.c ****     CM0->syst_rvr = (SYSCLK_1MS_COUNT_VALUE - 1);
 215:..\src\system/timer.c ****     /* Register interrupt handler. */
ARM GAS  e:\temp\ccrFbtw8.s 			page 7


 216:..\src\system/timer.c ****     CyIntSetSysVector(CY_INT_SYSTICK_IRQN, systick_interrupt_handler);
 217:..\src\system/timer.c **** 
 218:..\src\system/timer.c **** #endif /* (TIMER_TYPE) */
 219:..\src\system/timer.c **** }
 220:..\src\system/timer.c **** 
 221:..\src\system/timer.c **** /*
 222:..\src\system/timer.c ****  * The function starts the hardware timer. The timer is expected to start
 223:..\src\system/timer.c ****  * interrupt at configured time.
 224:..\src\system/timer.c ****  */
 225:..\src\system/timer.c **** static void hw_timer_start(void)
 226:..\src\system/timer.c **** {
 227:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 228:..\src\system/timer.c **** 
 229:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE == 0)
 230:..\src\system/timer.c ****     /* Load the timer match register. */
 231:..\src\system/timer.c ****     SRSSLT->wdt_match = (uint16_t)((SRSSLT->wdt_counter & WDT_COUNTER_COUNTER_MASK)
 232:..\src\system/timer.c ****             + gl_multiplier);
 233:..\src\system/timer.c ****     /* Need to wait for atleast 3 LF cycles before the register write completes. */
 234:..\src\system/timer.c ****     CyDelayUs (100);
 235:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE == 0) */
 236:..\src\system/timer.c **** 
 237:..\src\system/timer.c ****     /* Enable the WDT interrupt. */
 238:..\src\system/timer.c ****     CyIntEnable (WDT_INTERRUPT_VECTOR_NUMBER);
 239:..\src\system/timer.c **** 
 240:..\src\system/timer.c **** #else /* (TIMER_TYPE == TIMER_TYPE_SYSTICK) */
 241:..\src\system/timer.c **** 
 242:..\src\system/timer.c ****     /* Clear the counter */
 243:..\src\system/timer.c ****     CM0->syst_cvr = 0;
 244:..\src\system/timer.c ****     /* Start the timer and enable the interrupt. */
 245:..\src\system/timer.c ****     CM0->syst_csr = (CM0_SYSTICK_CSR_ENABLE | CM0_SYSTICK_CSR_CLKSOURCE |
 246:..\src\system/timer.c ****             CM0_SYSTICK_CSR_TICKINT);
 247:..\src\system/timer.c **** 
 248:..\src\system/timer.c **** #endif /* (TIMER_TYPE) */
 249:..\src\system/timer.c **** }
 250:..\src\system/timer.c **** 
 251:..\src\system/timer.c **** /*
 252:..\src\system/timer.c ****  * The function stops the hardware timer. The timer is expected to
 253:..\src\system/timer.c ****  * disable interrupts when stopped.
 254:..\src\system/timer.c ****  */
 255:..\src\system/timer.c **** static void hw_timer_stop(void)
 256:..\src\system/timer.c **** {
 257:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 258:..\src\system/timer.c ****     /* Disable the WDT interrupt */
 259:..\src\system/timer.c ****     CyIntDisable (WDT_INTERRUPT_VECTOR_NUMBER);
 260:..\src\system/timer.c **** #else /* (TIMER_TYPE == TIMER_TYPE_SYSTICK) */
 261:..\src\system/timer.c ****     /* Disable the SYSTICK interrupt. */
 262:..\src\system/timer.c ****     CM0->syst_csr = 0;
 263:..\src\system/timer.c **** #endif /* (TIMER_TYPE) */
 264:..\src\system/timer.c **** }
 265:..\src\system/timer.c **** 
 266:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE != 0)
 267:..\src\system/timer.c **** /* The function retrieves the current hardware count reading. */
 268:..\src\system/timer.c **** static uint16_t hw_timer_get_count(void)
 269:..\src\system/timer.c **** {
 128              		.loc 1 269 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
ARM GAS  e:\temp\ccrFbtw8.s 			page 8


 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 270:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 271:..\src\system/timer.c ****     return (uint16_t)(SRSSLT->wdt_counter & WDT_COUNTER_COUNTER_MASK);
 133              		.loc 1 271 0
 134 0000 014B     		ldr	r3, .L8
 135 0002 D86B     		ldr	r0, [r3, #60]
 136 0004 80B2     		uxth	r0, r0
 272:..\src\system/timer.c **** #else /* (TIMER_TYPE == TIMER_TYPE_SYSTICK) */
 273:..\src\system/timer.c ****     /* TODO needs implementation. */
 274:..\src\system/timer.c ****     return 0;
 275:..\src\system/timer.c **** #endif /* (TIMER_TYPE) */
 276:..\src\system/timer.c **** }
 137              		.loc 1 276 0
 138              		@ sp needed
 139 0006 7047     		bx	lr
 140              	.L9:
 141              		.align	2
 142              	.L8:
 143 0008 00000340 		.word	1073938432
 144              		.cfi_endproc
 145              	.LFE36:
 146              		.size	hw_timer_get_count, .-hw_timer_get_count
 147              		.section	.text.hw_timer_get_tick_interval,"ax",%progbits
 148              		.align	2
 149              		.code	16
 150              		.thumb_func
 151              		.type	hw_timer_get_tick_interval, %function
 152              	hw_timer_get_tick_interval:
 153              	.LFB38:
 277:..\src\system/timer.c **** 
 278:..\src\system/timer.c **** /* The function loads the hardware period for interrupt. */
 279:..\src\system/timer.c **** static void hw_timer_load_period(uint16_t period)
 280:..\src\system/timer.c **** {
 281:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 282:..\src\system/timer.c ****     if ((SRSSLT->wdt_match & WDT_MATCH_MATCH_MASK) != gl_match)
 283:..\src\system/timer.c ****     {
 284:..\src\system/timer.c ****         CyDelayUs (100);
 285:..\src\system/timer.c ****     }
 286:..\src\system/timer.c ****     SRSSLT->wdt_match = period;
 287:..\src\system/timer.c ****     gl_match = period;
 288:..\src\system/timer.c **** #else /* (TIMER_TYPE == TIMER_TYPE_SYSTICK) */
 289:..\src\system/timer.c ****     /* TODO needs implementation. */
 290:..\src\system/timer.c **** #endif /* (TIMER_TYPE) */
 291:..\src\system/timer.c **** }
 292:..\src\system/timer.c **** 
 293:..\src\system/timer.c **** static uint16_t hw_timer_get_tick_interval(uint16_t start, uint16_t current)
 294:..\src\system/timer.c **** {
 154              		.loc 1 294 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              	.LVL6:
 295:..\src\system/timer.c ****     uint32_t interval;
 296:..\src\system/timer.c **** 
 297:..\src\system/timer.c ****     if (start < current)
ARM GAS  e:\temp\ccrFbtw8.s 			page 9


 160              		.loc 1 297 0
 161 0000 8842     		cmp	r0, r1
 162 0002 01D2     		bcs	.L11
 298:..\src\system/timer.c ****     {
 299:..\src\system/timer.c ****         interval = (current - start);
 163              		.loc 1 299 0
 164 0004 091A     		subs	r1, r1, r0
 165              	.LVL7:
 166 0006 04E0     		b	.L12
 167              	.LVL8:
 168              	.L11:
 300:..\src\system/timer.c ****     }
 301:..\src\system/timer.c ****     else
 302:..\src\system/timer.c ****     {
 303:..\src\system/timer.c ****         interval = (TIMER_NUM_TICK_COUNTS - start) + current;
 169              		.loc 1 303 0
 170 0008 091A     		subs	r1, r1, r0
 171              	.LVL9:
 172 000a 8023     		movs	r3, #128
 173 000c 5B02     		lsls	r3, r3, #9
 174 000e 9C46     		mov	ip, r3
 175 0010 6144     		add	r1, r1, ip
 176              	.LVL10:
 177              	.L12:
 304:..\src\system/timer.c ****     }
 305:..\src\system/timer.c **** 
 306:..\src\system/timer.c ****     return (uint16_t)interval;
 178              		.loc 1 306 0
 179 0012 88B2     		uxth	r0, r1
 180              	.LVL11:
 307:..\src\system/timer.c **** }
 181              		.loc 1 307 0
 182              		@ sp needed
 183 0014 7047     		bx	lr
 184              		.cfi_endproc
 185              	.LFE38:
 186              		.size	hw_timer_get_tick_interval, .-hw_timer_get_tick_interval
 187 0016 C046     		.section	.text.timer_get_index,"ax",%progbits
 188              		.align	2
 189              		.code	16
 190              		.thumb_func
 191              		.type	timer_get_index, %function
 192              	timer_get_index:
 193              	.LFB40:
 308:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE == 0) */
 309:..\src\system/timer.c **** 
 310:..\src\system/timer.c **** void timer_init(void)
 311:..\src\system/timer.c **** {
 312:..\src\system/timer.c ****     uint8_t i, j;
 313:..\src\system/timer.c **** 
 314:..\src\system/timer.c ****     /* Invalidate all timers. */
 315:..\src\system/timer.c ****     for (i = 0; i < TIMER_NUM_INSTANCES; i++)
 316:..\src\system/timer.c ****     {
 317:..\src\system/timer.c ****         for (j = 0; j < TIMER_NUM_TIMERS; j++)
 318:..\src\system/timer.c ****         {
 319:..\src\system/timer.c ****             gl_timer_handle[i][j].id = TIMER_INVALID_ID;
 320:..\src\system/timer.c ****         }
ARM GAS  e:\temp\ccrFbtw8.s 			page 10


 321:..\src\system/timer.c **** 
 322:..\src\system/timer.c ****         gl_num_active[i] = 0;
 323:..\src\system/timer.c ****     }
 324:..\src\system/timer.c **** 
 325:..\src\system/timer.c ****     gl_total_active = 0;
 326:..\src\system/timer.c **** 
 327:..\src\system/timer.c ****     /* Initialize the hardware timer. */
 328:..\src\system/timer.c ****     hw_timer_init();
 329:..\src\system/timer.c **** }
 330:..\src\system/timer.c **** 
 331:..\src\system/timer.c **** /* Internal function to scan the instances to identify the allocated timer. */
 332:..\src\system/timer.c **** static uint8_t timer_get_index(uint8_t instance, timer_id_t id)
 333:..\src\system/timer.c **** {
 194              		.loc 1 333 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL12:
 199 0000 30B5     		push	{r4, r5, lr}
 200              		.cfi_def_cfa_offset 12
 201              		.cfi_offset 4, -12
 202              		.cfi_offset 5, -8
 203              		.cfi_offset 14, -4
 334:..\src\system/timer.c ****     uint8_t index;
 335:..\src\system/timer.c **** 
 336:..\src\system/timer.c ****     if (id == TIMER_INVALID_ID)
 204              		.loc 1 336 0
 205 0002 FF29     		cmp	r1, #255
 206 0004 14D0     		beq	.L17
 207 0006 0022     		movs	r2, #0
 208 0008 0EE0     		b	.L15
 209              	.LVL13:
 210              	.L16:
 337:..\src\system/timer.c ****     {
 338:..\src\system/timer.c ****         return TIMER_INVALID_INDEX;
 339:..\src\system/timer.c ****     }
 340:..\src\system/timer.c **** 
 341:..\src\system/timer.c ****     for (index = 0; index < TIMER_NUM_TIMERS; index++)
 342:..\src\system/timer.c ****     {
 343:..\src\system/timer.c ****         if (gl_timer_handle[instance][index].id == id)
 211              		.loc 1 343 0
 212 000a 5400     		lsls	r4, r2, #1
 213 000c A418     		adds	r4, r4, r2
 214 000e A500     		lsls	r5, r4, #2
 215 0010 BA23     		movs	r3, #186
 216 0012 5B00     		lsls	r3, r3, #1
 217 0014 4343     		muls	r3, r0
 218 0016 EB18     		adds	r3, r5, r3
 219 0018 074C     		ldr	r4, .L19
 220 001a E318     		adds	r3, r4, r3
 221 001c 9B7B     		ldrb	r3, [r3, #14]
 222 001e DBB2     		uxtb	r3, r3
 223 0020 9942     		cmp	r1, r3
 224 0022 07D0     		beq	.L18
 341:..\src\system/timer.c ****     {
 225              		.loc 1 341 0 discriminator 2
 226 0024 0132     		adds	r2, r2, #1
ARM GAS  e:\temp\ccrFbtw8.s 			page 11


 227              	.LVL14:
 228 0026 D2B2     		uxtb	r2, r2
 229              	.LVL15:
 230              	.L15:
 341:..\src\system/timer.c ****     {
 231              		.loc 1 341 0 is_stmt 0 discriminator 1
 232 0028 1E2A     		cmp	r2, #30
 233 002a EED9     		bls	.L16
 344:..\src\system/timer.c ****         {
 345:..\src\system/timer.c ****             return index;
 346:..\src\system/timer.c ****         }
 347:..\src\system/timer.c ****     }
 348:..\src\system/timer.c **** 
 349:..\src\system/timer.c ****     return TIMER_INVALID_INDEX;
 234              		.loc 1 349 0 is_stmt 1
 235 002c FF20     		movs	r0, #255
 236              	.LVL16:
 237 002e 02E0     		b	.L14
 238              	.LVL17:
 239              	.L17:
 338:..\src\system/timer.c ****     }
 240              		.loc 1 338 0
 241 0030 FF20     		movs	r0, #255
 242              	.LVL18:
 243 0032 00E0     		b	.L14
 244              	.LVL19:
 245              	.L18:
 345:..\src\system/timer.c ****         }
 246              		.loc 1 345 0
 247 0034 1000     		movs	r0, r2
 248              	.LVL20:
 249              	.L14:
 350:..\src\system/timer.c **** }
 250              		.loc 1 350 0
 251              		@ sp needed
 252 0036 30BD     		pop	{r4, r5, pc}
 253              	.L20:
 254              		.align	2
 255              	.L19:
 256 0038 00000000 		.word	.LANCHOR0
 257              		.cfi_endproc
 258              	.LFE40:
 259              		.size	timer_get_index, .-timer_get_index
 260              		.section	.text.hw_timer_stop,"ax",%progbits
 261              		.align	2
 262              		.code	16
 263              		.thumb_func
 264              		.type	hw_timer_stop, %function
 265              	hw_timer_stop:
 266              	.LFB35:
 256:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 267              		.loc 1 256 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
ARM GAS  e:\temp\ccrFbtw8.s 			page 12


 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 259:..\src\system/timer.c **** #else /* (TIMER_TYPE == TIMER_TYPE_SYSTICK) */
 275              		.loc 1 259 0
 276 0002 0920     		movs	r0, #9
 277 0004 FFF7FEFF 		bl	CyIntDisable
 278              	.LVL21:
 264:..\src\system/timer.c **** 
 279              		.loc 1 264 0
 280              		@ sp needed
 281 0008 10BD     		pop	{r4, pc}
 282              		.cfi_endproc
 283              	.LFE35:
 284              		.size	hw_timer_stop, .-hw_timer_stop
 285              		.section	.text.timer_stop_internal,"ax",%progbits
 286              		.align	2
 287              		.code	16
 288              		.thumb_func
 289              		.type	timer_stop_internal, %function
 290              	timer_stop_internal:
 291              	.LFB43:
 351:..\src\system/timer.c **** 
 352:..\src\system/timer.c **** bool timer_start(uint8_t instance, timer_id_t id, uint16_t period, timer_cb_t cb)
 353:..\src\system/timer.c **** {
 354:..\src\system/timer.c ****     int8_t i;
 355:..\src\system/timer.c ****     uint8_t state;
 356:..\src\system/timer.c ****     bool status = false;
 357:..\src\system/timer.c ****     uint8_t index = TIMER_INVALID_INDEX;
 358:..\src\system/timer.c **** 
 359:..\src\system/timer.c ****     if ((id == TIMER_INVALID_ID) || (period == 0))
 360:..\src\system/timer.c ****     {
 361:..\src\system/timer.c ****         return false;
 362:..\src\system/timer.c ****     }
 363:..\src\system/timer.c **** 
 364:..\src\system/timer.c ****     /* Enter critical section. */
 365:..\src\system/timer.c ****     state = CyEnterCriticalSection();
 366:..\src\system/timer.c **** 
 367:..\src\system/timer.c ****     /*
 368:..\src\system/timer.c ****      * Allocates a free instance. Two checks need to be done. First we need
 369:..\src\system/timer.c ****      * to identify if the ID is already active. If so, we should re-use the
 370:..\src\system/timer.c ****      * same ID. If the timer ID is not active, then we should look for a 
 371:..\src\system/timer.c ****      * free slot. Here we are combining the two loops to improve performance.
 372:..\src\system/timer.c ****      * So to make the allocation happen from zero up, the loop is run from
 373:..\src\system/timer.c ****      * the highest to lowest.
 374:..\src\system/timer.c ****      */
 375:..\src\system/timer.c ****     for (i = (TIMER_NUM_TIMERS - 1); i >= 0; i--)
 376:..\src\system/timer.c ****     {
 377:..\src\system/timer.c ****         /* Pick a free instance. */
 378:..\src\system/timer.c ****         if (gl_timer_handle[instance][i].id == TIMER_INVALID_ID)
 379:..\src\system/timer.c ****         {
 380:..\src\system/timer.c ****             index = i;
 381:..\src\system/timer.c ****         }
 382:..\src\system/timer.c **** 
 383:..\src\system/timer.c ****         /*
 384:..\src\system/timer.c ****          * Scan again if the same timer ID has been previously allocated.
 385:..\src\system/timer.c ****          * If so return the previously allocated instance.
 386:..\src\system/timer.c ****          */
ARM GAS  e:\temp\ccrFbtw8.s 			page 13


 387:..\src\system/timer.c ****         if (gl_timer_handle[instance][i].id == id)
 388:..\src\system/timer.c ****         {
 389:..\src\system/timer.c ****             index = i;
 390:..\src\system/timer.c ****             /*
 391:..\src\system/timer.c ****              * We are going to re-allocate an already running timer.
 392:..\src\system/timer.c ****              * This means that the previous instance is disabled.
 393:..\src\system/timer.c ****              */
 394:..\src\system/timer.c ****             gl_num_active[instance]--;
 395:..\src\system/timer.c ****             gl_total_active--;
 396:..\src\system/timer.c ****             break;
 397:..\src\system/timer.c ****         }
 398:..\src\system/timer.c ****     }
 399:..\src\system/timer.c **** 
 400:..\src\system/timer.c ****     if (index != TIMER_INVALID_INDEX)
 401:..\src\system/timer.c ****     {
 402:..\src\system/timer.c ****         gl_timer_handle[instance][index].period = period;
 403:..\src\system/timer.c ****         gl_timer_handle[instance][index].cb = cb;
 404:..\src\system/timer.c ****         gl_timer_handle[instance][index].id = id;
 405:..\src\system/timer.c **** 
 406:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE != 0)
 407:..\src\system/timer.c **** 
 408:..\src\system/timer.c ****         /* Multiply the required time with the multiplier. */
 409:..\src\system/timer.c ****         gl_timer_handle[instance][index].count = period * gl_multiplier;
 410:..\src\system/timer.c **** 
 411:..\src\system/timer.c ****         /*
 412:..\src\system/timer.c ****          * Only start or adjust timer if outside of the timer callback.
 413:..\src\system/timer.c ****          * When inside timer callback, the timer is already started and
 414:..\src\system/timer.c ****          * no adjustment is required.
 415:..\src\system/timer.c ****          */
 416:..\src\system/timer.c ****         if (gl_is_callback == false)
 417:..\src\system/timer.c ****         {
 418:..\src\system/timer.c ****             uint32_t count;
 419:..\src\system/timer.c ****             uint16_t cur_count;
 420:..\src\system/timer.c **** 
 421:..\src\system/timer.c ****             cur_count = hw_timer_get_count ();
 422:..\src\system/timer.c ****             /*
 423:..\src\system/timer.c ****              * If the timer is already running, then the count has
 424:..\src\system/timer.c ****              * to be adjusted to take care of partial update.
 425:..\src\system/timer.c ****              */
 426:..\src\system/timer.c ****             if (gl_total_active != 0)
 427:..\src\system/timer.c ****             {
 428:..\src\system/timer.c ****                 count = hw_timer_get_tick_interval (gl_start_tick,
 429:..\src\system/timer.c ****                         cur_count);
 430:..\src\system/timer.c ****                 gl_timer_handle[instance][index].count += count;
 431:..\src\system/timer.c **** 
 432:..\src\system/timer.c ****                 if (gl_timer_handle[instance][index].count < gl_tick_time)
 433:..\src\system/timer.c ****                 {
 434:..\src\system/timer.c ****                     /*
 435:..\src\system/timer.c ****                      * It is safe to load the timer here as we have
 436:..\src\system/timer.c ****                      * confirmed that the timer is not going to fire
 437:..\src\system/timer.c ****                      * immediately. Also we know for sure that the
 438:..\src\system/timer.c ****                      * count is less than the maximum value allowed.
 439:..\src\system/timer.c ****                      */
 440:..\src\system/timer.c ****                     gl_tick_time = gl_timer_handle[instance][index].count;
 441:..\src\system/timer.c ****                     hw_timer_load_period ((uint16_t) (gl_start_tick +
 442:..\src\system/timer.c ****                                 gl_tick_time));
 443:..\src\system/timer.c ****                 }
ARM GAS  e:\temp\ccrFbtw8.s 			page 14


 444:..\src\system/timer.c **** 
 445:..\src\system/timer.c ****             }
 446:..\src\system/timer.c ****             else
 447:..\src\system/timer.c ****             {
 448:..\src\system/timer.c ****                 /* Need to start the timer if not already running. */
 449:..\src\system/timer.c ****                 gl_start_tick = cur_count;
 450:..\src\system/timer.c ****                 count = gl_timer_handle[instance][index].count;
 451:..\src\system/timer.c ****                 if (count > TIMER_HW_MAX_TIMEOUT)
 452:..\src\system/timer.c ****                 {
 453:..\src\system/timer.c ****                     count = TIMER_HW_MAX_TIMEOUT;
 454:..\src\system/timer.c ****                 }
 455:..\src\system/timer.c ****                 gl_tick_time = count;
 456:..\src\system/timer.c ****                 hw_timer_load_period ((uint16_t) (count + cur_count));
 457:..\src\system/timer.c ****                 hw_timer_start ();
 458:..\src\system/timer.c ****             }
 459:..\src\system/timer.c ****         }
 460:..\src\system/timer.c **** 
 461:..\src\system/timer.c **** #else /* (TIMER_TICKLESS_ENABLE == 0) */
 462:..\src\system/timer.c **** 
 463:..\src\system/timer.c ****         gl_timer_handle[instance][index].count = period;
 464:..\src\system/timer.c ****         /*
 465:..\src\system/timer.c ****          * Turn on hardware timer if not running. Do this only
 466:..\src\system/timer.c ****          * if invoked outside of timer callback.
 467:..\src\system/timer.c ****          */
 468:..\src\system/timer.c ****         if ((gl_total_active == 0) && (gl_is_callback == false))
 469:..\src\system/timer.c ****         {
 470:..\src\system/timer.c ****             hw_timer_start ();
 471:..\src\system/timer.c ****         }
 472:..\src\system/timer.c **** 
 473:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE) */
 474:..\src\system/timer.c **** 
 475:..\src\system/timer.c ****         gl_num_active[instance]++;
 476:..\src\system/timer.c ****         gl_total_active++;
 477:..\src\system/timer.c ****         status = true;
 478:..\src\system/timer.c ****     }
 479:..\src\system/timer.c **** 
 480:..\src\system/timer.c ****     /* Exit critical section. */
 481:..\src\system/timer.c ****     CyExitCriticalSection(state);
 482:..\src\system/timer.c **** 
 483:..\src\system/timer.c ****     return status;
 484:..\src\system/timer.c **** }
 485:..\src\system/timer.c **** 
 486:..\src\system/timer.c **** bool timer_start_wocb(uint8_t instance, timer_id_t id, uint16_t period)
 487:..\src\system/timer.c **** {
 488:..\src\system/timer.c ****     return timer_start(instance, id, period, NULL);
 489:..\src\system/timer.c **** }    
 490:..\src\system/timer.c **** 
 491:..\src\system/timer.c **** /*
 492:..\src\system/timer.c ****  * The function should not be called other than from timer_stop functions.
 493:..\src\system/timer.c ****  * The function expects that the call is being made from inside a critical
 494:..\src\system/timer.c ****  * section and that the timer instance and the index into the timer handle
 495:..\src\system/timer.c ****  * is valid.
 496:..\src\system/timer.c ****  */
 497:..\src\system/timer.c **** static void timer_stop_internal(uint8_t instance, uint8_t index)
 498:..\src\system/timer.c **** {
 292              		.loc 1 498 0
 293              		.cfi_startproc
ARM GAS  e:\temp\ccrFbtw8.s 			page 15


 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              	.LVL22:
 297 0000 10B5     		push	{r4, lr}
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 4, -8
 300              		.cfi_offset 14, -4
 499:..\src\system/timer.c ****     /* Stop timer and deallocate it */
 500:..\src\system/timer.c ****     gl_timer_handle[instance][index].id = TIMER_INVALID_ID;
 301              		.loc 1 500 0
 302 0002 4B00     		lsls	r3, r1, #1
 303 0004 5918     		adds	r1, r3, r1
 304              	.LVL23:
 305 0006 8A00     		lsls	r2, r1, #2
 306 0008 BA23     		movs	r3, #186
 307 000a 5B00     		lsls	r3, r3, #1
 308 000c 4343     		muls	r3, r0
 309 000e D318     		adds	r3, r2, r3
 310 0010 0C4A     		ldr	r2, .L24
 311 0012 D318     		adds	r3, r2, r3
 312 0014 FF22     		movs	r2, #255
 313 0016 9A73     		strb	r2, [r3, #14]
 501:..\src\system/timer.c ****     gl_num_active[instance]--;
 314              		.loc 1 501 0
 315 0018 0B4A     		ldr	r2, .L24+4
 316 001a 6C21     		movs	r1, #108
 317 001c 1018     		adds	r0, r2, r0
 318              	.LVL24:
 319 001e 435C     		ldrb	r3, [r0, r1]
 320 0020 013B     		subs	r3, r3, #1
 321 0022 DBB2     		uxtb	r3, r3
 322 0024 4354     		strb	r3, [r0, r1]
 502:..\src\system/timer.c ****     gl_total_active--;
 323              		.loc 1 502 0
 324 0026 0231     		adds	r1, r1, #2
 325 0028 535C     		ldrb	r3, [r2, r1]
 326 002a 013B     		subs	r3, r3, #1
 327 002c DBB2     		uxtb	r3, r3
 328 002e 5354     		strb	r3, [r2, r1]
 503:..\src\system/timer.c **** 
 504:..\src\system/timer.c ****     /*
 505:..\src\system/timer.c ****      * Turn off hardware timer if no timer is active. Turn off should
 506:..\src\system/timer.c ****      * be done only if not being invoked from inside a timer callback.
 507:..\src\system/timer.c ****      * If this is from timer callback, the interrupt handler deals
 508:..\src\system/timer.c ****      * with this at the end of all timer checks.
 509:..\src\system/timer.c ****      */
 510:..\src\system/timer.c ****     if ((gl_total_active == 0) && (gl_is_callback == false))
 329              		.loc 1 510 0
 330 0030 535C     		ldrb	r3, [r2, r1]
 331 0032 002B     		cmp	r3, #0
 332 0034 05D1     		bne	.L22
 333              		.loc 1 510 0 is_stmt 0 discriminator 1
 334 0036 6F33     		adds	r3, r3, #111
 335 0038 D35C     		ldrb	r3, [r2, r3]
 336 003a 002B     		cmp	r3, #0
 337 003c 01D1     		bne	.L22
 511:..\src\system/timer.c ****     {
ARM GAS  e:\temp\ccrFbtw8.s 			page 16


 512:..\src\system/timer.c ****         hw_timer_stop();
 338              		.loc 1 512 0 is_stmt 1
 339 003e FFF7FEFF 		bl	hw_timer_stop
 340              	.LVL25:
 341              	.L22:
 513:..\src\system/timer.c ****     }
 514:..\src\system/timer.c **** }
 342              		.loc 1 514 0
 343              		@ sp needed
 344 0042 10BD     		pop	{r4, pc}
 345              	.L25:
 346              		.align	2
 347              	.L24:
 348 0044 00000000 		.word	.LANCHOR0
 349 0048 80020000 		.word	.LANCHOR1
 350              		.cfi_endproc
 351              	.LFE43:
 352              		.size	timer_stop_internal, .-timer_stop_internal
 353              		.section	.text.hw_timer_init,"ax",%progbits
 354              		.align	2
 355              		.code	16
 356              		.thumb_func
 357              		.type	hw_timer_init, %function
 358              	hw_timer_init:
 359              	.LFB33:
 188:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 360              		.loc 1 188 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 10B5     		push	{r4, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 4, -8
 367              		.cfi_offset 14, -4
 192:..\src\system/timer.c **** 
 368              		.loc 1 192 0
 369 0002 0920     		movs	r0, #9
 370 0004 FFF7FEFF 		bl	CyIntDisable
 371              	.LVL26:
 195:..\src\system/timer.c ****     /* Forward the interrupt to the CPU */
 372              		.loc 1 195 0
 373 0008 094B     		ldr	r3, .L27
 374 000a 0A4A     		ldr	r2, .L27+4
 375 000c 9A63     		str	r2, [r3, #56]
 197:..\src\system/timer.c ****     /* Start ILO */
 376              		.loc 1 197 0
 377 000e DA6C     		ldr	r2, [r3, #76]
 378 0010 0121     		movs	r1, #1
 379 0012 0A43     		orrs	r2, r1
 380 0014 DA64     		str	r2, [r3, #76]
 199:..\src\system/timer.c ****     /* Enable the watchdog timer interrupt */
 381              		.loc 1 199 0
 382 0016 DA6A     		ldr	r2, [r3, #44]
 383 0018 8020     		movs	r0, #128
 384 001a 0006     		lsls	r0, r0, #24
 385 001c 0243     		orrs	r2, r0
 386 001e DA62     		str	r2, [r3, #44]
ARM GAS  e:\temp\ccrFbtw8.s 			page 17


 201:..\src\system/timer.c **** 
 387              		.loc 1 201 0
 388 0020 5964     		str	r1, [r3, #68]
 204:..\src\system/timer.c ****             &wdt_interrupt_handler);
 389              		.loc 1 204 0
 390 0022 0549     		ldr	r1, .L27+8
 391 0024 0920     		movs	r0, #9
 392 0026 FFF7FEFF 		bl	CyIntSetVector
 393              	.LVL27:
 208:..\src\system/timer.c **** 
 394              		.loc 1 208 0
 395 002a FFF7FEFF 		bl	wdt_calibrate
 396              	.LVL28:
 219:..\src\system/timer.c **** 
 397              		.loc 1 219 0
 398              		@ sp needed
 399 002e 10BD     		pop	{r4, pc}
 400              	.L28:
 401              		.align	2
 402              	.L27:
 403 0030 00000340 		.word	1073938432
 404 0034 6588EDAC 		.word	-1393719195
 405 0038 00000000 		.word	wdt_interrupt_handler
 406              		.cfi_endproc
 407              	.LFE33:
 408              		.size	hw_timer_init, .-hw_timer_init
 409              		.section	.text.hw_timer_load_period,"ax",%progbits
 410              		.align	2
 411              		.code	16
 412              		.thumb_func
 413              		.type	hw_timer_load_period, %function
 414              	hw_timer_load_period:
 415              	.LFB37:
 280:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 416              		.loc 1 280 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              	.LVL29:
 421 0000 10B5     		push	{r4, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 4, -8
 424              		.cfi_offset 14, -4
 425 0002 0400     		movs	r4, r0
 282:..\src\system/timer.c ****     {
 426              		.loc 1 282 0
 427 0004 094B     		ldr	r3, .L31
 428 0006 1B6C     		ldr	r3, [r3, #64]
 429 0008 1B04     		lsls	r3, r3, #16
 430 000a 1B0C     		lsrs	r3, r3, #16
 431 000c 7022     		movs	r2, #112
 432 000e 0849     		ldr	r1, .L31+4
 433 0010 8A5A     		ldrh	r2, [r1, r2]
 434 0012 92B2     		uxth	r2, r2
 435 0014 9342     		cmp	r3, r2
 436 0016 02D0     		beq	.L30
 284:..\src\system/timer.c ****     }
ARM GAS  e:\temp\ccrFbtw8.s 			page 18


 437              		.loc 1 284 0
 438 0018 6420     		movs	r0, #100
 439              	.LVL30:
 440 001a FFF7FEFF 		bl	CyDelayUs
 441              	.LVL31:
 442              	.L30:
 286:..\src\system/timer.c ****     gl_match = period;
 443              		.loc 1 286 0
 444 001e 034B     		ldr	r3, .L31
 445 0020 1C64     		str	r4, [r3, #64]
 287:..\src\system/timer.c **** #else /* (TIMER_TYPE == TIMER_TYPE_SYSTICK) */
 446              		.loc 1 287 0
 447 0022 7023     		movs	r3, #112
 448 0024 024A     		ldr	r2, .L31+4
 449 0026 D452     		strh	r4, [r2, r3]
 291:..\src\system/timer.c **** 
 450              		.loc 1 291 0
 451              		@ sp needed
 452 0028 10BD     		pop	{r4, pc}
 453              	.L32:
 454 002a C046     		.align	2
 455              	.L31:
 456 002c 00000340 		.word	1073938432
 457 0030 80020000 		.word	.LANCHOR1
 458              		.cfi_endproc
 459              	.LFE37:
 460              		.size	hw_timer_load_period, .-hw_timer_load_period
 461              		.section	.text.timer_interrupt_handler,"ax",%progbits
 462              		.align	2
 463              		.code	16
 464              		.thumb_func
 465              		.type	timer_interrupt_handler, %function
 466              	timer_interrupt_handler:
 467              	.LFB52:
 515:..\src\system/timer.c **** 
 516:..\src\system/timer.c **** void timer_stop(uint8_t instance, timer_id_t id)
 517:..\src\system/timer.c **** {
 518:..\src\system/timer.c ****     uint8_t index, state;
 519:..\src\system/timer.c **** 
 520:..\src\system/timer.c ****     /* Enter critical section. */
 521:..\src\system/timer.c ****     state = CyEnterCriticalSection ();
 522:..\src\system/timer.c **** 
 523:..\src\system/timer.c ****     /* Get the timer index from the handle */
 524:..\src\system/timer.c ****     index = timer_get_index (instance, id);
 525:..\src\system/timer.c ****     if (index != TIMER_INVALID_INDEX)
 526:..\src\system/timer.c ****     {
 527:..\src\system/timer.c ****         timer_stop_internal(instance, index);
 528:..\src\system/timer.c ****     }
 529:..\src\system/timer.c **** 
 530:..\src\system/timer.c ****     /* Exit critical section. */
 531:..\src\system/timer.c ****     CyExitCriticalSection (state);
 532:..\src\system/timer.c **** }
 533:..\src\system/timer.c **** 
 534:..\src\system/timer.c **** void timer_stop_all(uint8_t instance)
 535:..\src\system/timer.c **** {
 536:..\src\system/timer.c ****     uint8_t index, state;
 537:..\src\system/timer.c **** 
ARM GAS  e:\temp\ccrFbtw8.s 			page 19


 538:..\src\system/timer.c ****     /* Enter critical section. */
 539:..\src\system/timer.c ****     state = CyEnterCriticalSection ();
 540:..\src\system/timer.c **** 
 541:..\src\system/timer.c ****     for (index = 0; index < TIMER_NUM_TIMERS; index++)
 542:..\src\system/timer.c ****     {
 543:..\src\system/timer.c ****         /* Stop the timer only for a valid id. */
 544:..\src\system/timer.c ****         if (gl_timer_handle[instance][index].id != TIMER_INVALID_ID)
 545:..\src\system/timer.c ****         {
 546:..\src\system/timer.c ****             timer_stop_internal(instance, index);
 547:..\src\system/timer.c ****         }
 548:..\src\system/timer.c ****     }
 549:..\src\system/timer.c **** 
 550:..\src\system/timer.c ****     /* Exit critical section. */
 551:..\src\system/timer.c ****     CyExitCriticalSection (state);
 552:..\src\system/timer.c **** }
 553:..\src\system/timer.c **** 
 554:..\src\system/timer.c **** void timer_stop_range(uint8_t instance, timer_id_t start, timer_id_t end)
 555:..\src\system/timer.c **** {
 556:..\src\system/timer.c ****     uint8_t index, state;
 557:..\src\system/timer.c **** 
 558:..\src\system/timer.c ****     /*
 559:..\src\system/timer.c ****      * We should not allow the stop call to happen if the range is invalid.
 560:..\src\system/timer.c ****      * Here we are assuming that the TIMER_INVALID_ID is the largest possible
 561:..\src\system/timer.c ****      * value for the ID. If not we would have to explicitly check for validity
 562:..\src\system/timer.c ****      * of start parameter as well.
 563:..\src\system/timer.c ****      */
 564:..\src\system/timer.c ****     if ((start >= end) || (end == TIMER_INVALID_ID))
 565:..\src\system/timer.c ****     {
 566:..\src\system/timer.c ****         return;
 567:..\src\system/timer.c ****     }
 568:..\src\system/timer.c **** 
 569:..\src\system/timer.c ****     /* Enter critical section. */
 570:..\src\system/timer.c ****     state = CyEnterCriticalSection ();
 571:..\src\system/timer.c **** 
 572:..\src\system/timer.c ****     for (index = 0; index < TIMER_NUM_TIMERS; index++)
 573:..\src\system/timer.c ****     {
 574:..\src\system/timer.c ****         timer_id_t id = gl_timer_handle[instance][index].id;
 575:..\src\system/timer.c ****         /* Stop the timer only for the specified ID range. */
 576:..\src\system/timer.c ****         if ((id >= start) && (id <= end))
 577:..\src\system/timer.c ****         {
 578:..\src\system/timer.c ****             timer_stop_internal(instance, index);
 579:..\src\system/timer.c ****         }
 580:..\src\system/timer.c ****     }
 581:..\src\system/timer.c **** 
 582:..\src\system/timer.c ****     /* Exit critical section. */
 583:..\src\system/timer.c ****     CyExitCriticalSection (state);
 584:..\src\system/timer.c **** }
 585:..\src\system/timer.c **** 
 586:..\src\system/timer.c **** bool timer_is_running(uint8_t instance, timer_id_t id)
 587:..\src\system/timer.c **** {
 588:..\src\system/timer.c ****     uint8_t index;
 589:..\src\system/timer.c **** 
 590:..\src\system/timer.c ****     index = timer_get_index (instance, id);
 591:..\src\system/timer.c ****     if (index != TIMER_INVALID_INDEX)
 592:..\src\system/timer.c ****     {
 593:..\src\system/timer.c ****         return true;
 594:..\src\system/timer.c ****     }
ARM GAS  e:\temp\ccrFbtw8.s 			page 20


 595:..\src\system/timer.c **** 
 596:..\src\system/timer.c ****     return false;
 597:..\src\system/timer.c **** }
 598:..\src\system/timer.c **** 
 599:..\src\system/timer.c **** uint8_t timer_num_active(uint8_t instance)
 600:..\src\system/timer.c **** {
 601:..\src\system/timer.c ****     return gl_num_active[instance];
 602:..\src\system/timer.c **** }
 603:..\src\system/timer.c **** 
 604:..\src\system/timer.c **** uint16_t timer_get_count(uint8_t instance, timer_id_t id)
 605:..\src\system/timer.c **** {
 606:..\src\system/timer.c ****     uint8_t index, state;
 607:..\src\system/timer.c ****     uint32_t count = 0;
 608:..\src\system/timer.c **** 
 609:..\src\system/timer.c ****     /* Enter critical section. */
 610:..\src\system/timer.c ****     state = CyEnterCriticalSection ();
 611:..\src\system/timer.c **** 
 612:..\src\system/timer.c ****     index = timer_get_index (instance, id);
 613:..\src\system/timer.c ****     if(index != TIMER_INVALID_INDEX)
 614:..\src\system/timer.c ****     {
 615:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE != 0)
 616:..\src\system/timer.c ****         uint32_t temp_count = gl_timer_handle[instance][index].count;
 617:..\src\system/timer.c **** 
 618:..\src\system/timer.c ****         count = hw_timer_get_tick_interval(gl_start_tick, hw_timer_get_count());
 619:..\src\system/timer.c ****         if (temp_count > count)
 620:..\src\system/timer.c ****         {
 621:..\src\system/timer.c ****             count = ((temp_count - count) / gl_multiplier);
 622:..\src\system/timer.c ****         }
 623:..\src\system/timer.c ****         else
 624:..\src\system/timer.c ****         {
 625:..\src\system/timer.c ****             count = 0;
 626:..\src\system/timer.c ****         }
 627:..\src\system/timer.c **** #else /* (TIMER_TICKLESS_ENABLE == 0) */
 628:..\src\system/timer.c ****         count = gl_timer_handle[instance][index].count;
 629:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE) */
 630:..\src\system/timer.c ****     }
 631:..\src\system/timer.c **** 
 632:..\src\system/timer.c ****     /* Exit critical section. */
 633:..\src\system/timer.c ****     CyExitCriticalSection (state);
 634:..\src\system/timer.c **** 
 635:..\src\system/timer.c ****     return count;
 636:..\src\system/timer.c **** }
 637:..\src\system/timer.c **** 
 638:..\src\system/timer.c **** uint16_t timer_get_multiplier(void)
 639:..\src\system/timer.c **** {
 640:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 641:..\src\system/timer.c ****     return(gl_multiplier);
 642:..\src\system/timer.c **** #else
 643:..\src\system/timer.c ****     /* Value is not known as we have not run calibration. Return a nominal value assuming LFCLK of 
 644:..\src\system/timer.c ****     return(25);
 645:..\src\system/timer.c **** #endif /* TIMER_TYPE */
 646:..\src\system/timer.c **** }
 647:..\src\system/timer.c **** 
 648:..\src\system/timer.c **** void timer_enter_sleep(void)
 649:..\src\system/timer.c **** {
 650:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 651:..\src\system/timer.c ****     if (gl_total_active != 0)
ARM GAS  e:\temp\ccrFbtw8.s 			page 21


 652:..\src\system/timer.c ****     {
 653:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE != 0)
 654:..\src\system/timer.c ****         if ((SRSSLT->wdt_match & WDT_MATCH_MATCH_MASK) != gl_match)
 655:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE != 0) */
 656:..\src\system/timer.c ****         {
 657:..\src\system/timer.c ****             /* To allow WDT registers to synchronize */
 658:..\src\system/timer.c ****             CyDelayUs(50);
 659:..\src\system/timer.c ****         }        
 660:..\src\system/timer.c ****     }
 661:..\src\system/timer.c **** #endif /* (TIMER_TYPE) */
 662:..\src\system/timer.c **** }
 663:..\src\system/timer.c **** 
 664:..\src\system/timer.c **** /*
 665:..\src\system/timer.c ****  * The timer ISR handler is generated whenever the timer expires. The
 666:..\src\system/timer.c ****  * ISR scans all running instances and decrements the count appropriately.
 667:..\src\system/timer.c ****  *
 668:..\src\system/timer.c ****  * Timer ISR is called every 1ms (or configured period for tickless). If there
 669:..\src\system/timer.c ****  * is any soft timer ON In the ISR all active timer instances are decremented
 670:..\src\system/timer.c ****  * and then checked for timeouts. In case of timeout the timer is stopped and
 671:..\src\system/timer.c ****  * de-allocated. In case, a timer needs to be re-started, it can be donefrom
 672:..\src\system/timer.c ****  * the callback. On timer expire events are also raised here for various modules.
 673:..\src\system/timer.c ****  */
 674:..\src\system/timer.c **** static void timer_interrupt_handler(void)
 675:..\src\system/timer.c **** {
 468              		.loc 1 675 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 473              		.cfi_def_cfa_offset 24
 474              		.cfi_offset 3, -24
 475              		.cfi_offset 4, -20
 476              		.cfi_offset 5, -16
 477              		.cfi_offset 6, -12
 478              		.cfi_offset 7, -8
 479              		.cfi_offset 14, -4
 480 0002 5F46     		mov	r7, fp
 481 0004 5646     		mov	r6, r10
 482 0006 4D46     		mov	r5, r9
 483 0008 4446     		mov	r4, r8
 484 000a F0B4     		push	{r4, r5, r6, r7}
 485              		.cfi_def_cfa_offset 40
 486              		.cfi_offset 8, -40
 487              		.cfi_offset 9, -36
 488              		.cfi_offset 10, -32
 489              		.cfi_offset 11, -28
 676:..\src\system/timer.c ****     uint8_t index, instance;
 677:..\src\system/timer.c ****     timer_id_t id;
 678:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE != 0)
 679:..\src\system/timer.c ****     uint16_t cur_count;
 680:..\src\system/timer.c ****     uint32_t interval, period;
 681:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE != 0) */
 682:..\src\system/timer.c **** 
 683:..\src\system/timer.c ****     /* Indicate being inside the interrupt handler. */
 684:..\src\system/timer.c ****     gl_is_callback = true;
 490              		.loc 1 684 0
 491 000c 0121     		movs	r1, #1
ARM GAS  e:\temp\ccrFbtw8.s 			page 22


 492 000e 6F23     		movs	r3, #111
 493 0010 6E4A     		ldr	r2, .L50
 494 0012 D154     		strb	r1, [r2, r3]
 495              	.L45:
 685:..\src\system/timer.c **** 
 686:..\src\system/timer.c ****     do
 687:..\src\system/timer.c ****     {
 688:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE != 0)
 689:..\src\system/timer.c ****         cur_count = hw_timer_get_count ();
 496              		.loc 1 689 0
 497 0014 FFF7FEFF 		bl	hw_timer_get_count
 498              	.LVL32:
 499 0018 0400     		movs	r4, r0
 500              	.LVL33:
 690:..\src\system/timer.c ****         interval = hw_timer_get_tick_interval (gl_start_tick, cur_count);
 501              		.loc 1 690 0
 502 001a 6C4F     		ldr	r7, .L50
 503 001c 7225     		movs	r5, #114
 504 001e 785B     		ldrh	r0, [r7, r5]
 505 0020 80B2     		uxth	r0, r0
 506 0022 2100     		movs	r1, r4
 507 0024 FFF7FEFF 		bl	hw_timer_get_tick_interval
 508              	.LVL34:
 509 0028 8246     		mov	r10, r0
 510              	.LVL35:
 691:..\src\system/timer.c **** 
 692:..\src\system/timer.c ****         gl_start_tick = cur_count;
 511              		.loc 1 692 0
 512 002a 7C53     		strh	r4, [r7, r5]
 513              	.LVL36:
 693:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE != 0) */
 694:..\src\system/timer.c **** 
 695:..\src\system/timer.c ****         for (instance = 0; instance < TIMER_NUM_INSTANCES; instance++)
 514              		.loc 1 695 0
 515 002c 0025     		movs	r5, #0
 516 002e 71E0     		b	.L34
 517              	.LVL37:
 518              	.L38:
 696:..\src\system/timer.c ****         {
 697:..\src\system/timer.c ****             /* Loop through all soft timers */
 698:..\src\system/timer.c ****             for (index = 0; index < TIMER_NUM_TIMERS; index++)
 699:..\src\system/timer.c ****             {
 700:..\src\system/timer.c ****                 id = gl_timer_handle[instance][index].id;
 519              		.loc 1 700 0
 520 0030 2800     		movs	r0, r5
 521 0032 2200     		movs	r2, r4
 522 0034 6100     		lsls	r1, r4, #1
 523 0036 0919     		adds	r1, r1, r4
 524 0038 8F00     		lsls	r7, r1, #2
 525 003a BA23     		movs	r3, #186
 526 003c 5B00     		lsls	r3, r3, #1
 527 003e 6B43     		muls	r3, r5
 528 0040 FB18     		adds	r3, r7, r3
 529 0042 6349     		ldr	r1, .L50+4
 530 0044 CB18     		adds	r3, r1, r3
 531 0046 997B     		ldrb	r1, [r3, #14]
 532 0048 C9B2     		uxtb	r1, r1
ARM GAS  e:\temp\ccrFbtw8.s 			page 23


 533              	.LVL38:
 701:..\src\system/timer.c ****                 if (id != TIMER_INVALID_ID)
 534              		.loc 1 701 0
 535 004a FF29     		cmp	r1, #255
 536 004c 5AD0     		beq	.L35
 702:..\src\system/timer.c ****                 {
 703:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE != 0)
 704:..\src\system/timer.c ****                     /* Decrement the counters. */
 705:..\src\system/timer.c ****                     if (gl_timer_handle[instance][index].count >
 537              		.loc 1 705 0
 538 004e 6700     		lsls	r7, r4, #1
 539 0050 3F19     		adds	r7, r7, r4
 540 0052 BB00     		lsls	r3, r7, #2
 541 0054 9C46     		mov	ip, r3
 542 0056 BA23     		movs	r3, #186
 543 0058 5B00     		lsls	r3, r3, #1
 544 005a 6B43     		muls	r3, r5
 545 005c 6344     		add	r3, r3, ip
 546 005e 5C4F     		ldr	r7, .L50+4
 547 0060 FB18     		adds	r3, r7, r3
 548 0062 5F68     		ldr	r7, [r3, #4]
 706:..\src\system/timer.c ****                             (interval + TIMER_OVERRUN_THRESHOLD))
 549              		.loc 1 706 0
 550 0064 5346     		mov	r3, r10
 551 0066 0533     		adds	r3, r3, #5
 705:..\src\system/timer.c ****                             (interval + TIMER_OVERRUN_THRESHOLD))
 552              		.loc 1 705 0
 553 0068 9F42     		cmp	r7, r3
 554 006a 0AD9     		bls	.L36
 707:..\src\system/timer.c ****                     {
 708:..\src\system/timer.c ****                         gl_timer_handle[instance][index].count -= interval;
 555              		.loc 1 708 0
 556 006c BA23     		movs	r3, #186
 557 006e 5B00     		lsls	r3, r3, #1
 558 0070 6B43     		muls	r3, r5
 559 0072 6344     		add	r3, r3, ip
 560 0074 564F     		ldr	r7, .L50+4
 561 0076 FB18     		adds	r3, r7, r3
 562 0078 5F68     		ldr	r7, [r3, #4]
 563 007a 5646     		mov	r6, r10
 564 007c BF1B     		subs	r7, r7, r6
 565 007e 5F60     		str	r7, [r3, #4]
 566 0080 0BE0     		b	.L37
 567              	.L36:
 709:..\src\system/timer.c ****                     }
 710:..\src\system/timer.c ****                     else
 711:..\src\system/timer.c ****                     {
 712:..\src\system/timer.c ****                         gl_timer_handle[instance][index].count = 0;
 568              		.loc 1 712 0
 569 0082 6700     		lsls	r7, r4, #1
 570 0084 3F19     		adds	r7, r7, r4
 571 0086 BB00     		lsls	r3, r7, #2
 572 0088 9C46     		mov	ip, r3
 573 008a BA23     		movs	r3, #186
 574 008c 5B00     		lsls	r3, r3, #1
 575 008e 6B43     		muls	r3, r5
 576 0090 6344     		add	r3, r3, ip
ARM GAS  e:\temp\ccrFbtw8.s 			page 24


 577 0092 4F4F     		ldr	r7, .L50+4
 578 0094 FB18     		adds	r3, r7, r3
 579 0096 0027     		movs	r7, #0
 580 0098 5F60     		str	r7, [r3, #4]
 581              	.L37:
 713:..\src\system/timer.c ****                     }
 714:..\src\system/timer.c **** #else /* (TIMER_TICKLESS_ENABLE == 0) */
 715:..\src\system/timer.c ****                     gl_timer_handle[instance][index].count--;
 716:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE) */
 717:..\src\system/timer.c ****                     if (gl_timer_handle[instance][index].count == 0)
 582              		.loc 1 717 0
 583 009a 5700     		lsls	r7, r2, #1
 584 009c BF18     		adds	r7, r7, r2
 585 009e BB00     		lsls	r3, r7, #2
 586 00a0 9C46     		mov	ip, r3
 587 00a2 BA23     		movs	r3, #186
 588 00a4 5B00     		lsls	r3, r3, #1
 589 00a6 4343     		muls	r3, r0
 590 00a8 6344     		add	r3, r3, ip
 591 00aa 494F     		ldr	r7, .L50+4
 592 00ac FB18     		adds	r3, r7, r3
 593 00ae 5B68     		ldr	r3, [r3, #4]
 594 00b0 002B     		cmp	r3, #0
 595 00b2 27D1     		bne	.L35
 718:..\src\system/timer.c ****                     {
 719:..\src\system/timer.c ****                         gl_timer_handle[instance][index].id = TIMER_INVALID_ID;
 596              		.loc 1 719 0
 597 00b4 BA23     		movs	r3, #186
 598 00b6 5B00     		lsls	r3, r3, #1
 599 00b8 4343     		muls	r3, r0
 600 00ba 6344     		add	r3, r3, ip
 601 00bc 444F     		ldr	r7, .L50+4
 602 00be BB46     		mov	fp, r7
 603 00c0 9B44     		add	fp, fp, r3
 604 00c2 FF27     		movs	r7, #255
 605 00c4 5B46     		mov	r3, fp
 606 00c6 9F73     		strb	r7, [r3, #14]
 720:..\src\system/timer.c ****                         gl_num_active[instance]--;
 607              		.loc 1 720 0
 608 00c8 404F     		ldr	r7, .L50
 609 00ca BC46     		mov	ip, r7
 610 00cc 6C27     		movs	r7, #108
 611 00ce B846     		mov	r8, r7
 612 00d0 8146     		mov	r9, r0
 613 00d2 E144     		add	r9, r9, ip
 614 00d4 4F46     		mov	r7, r9
 615 00d6 4346     		mov	r3, r8
 616 00d8 FF5C     		ldrb	r7, [r7, r3]
 617 00da 013F     		subs	r7, r7, #1
 618 00dc FFB2     		uxtb	r7, r7
 619 00de 4B46     		mov	r3, r9
 620 00e0 4646     		mov	r6, r8
 621 00e2 9F55     		strb	r7, [r3, r6]
 721:..\src\system/timer.c ****                         gl_total_active--;
 622              		.loc 1 721 0
 623 00e4 6E23     		movs	r3, #110
 624 00e6 9846     		mov	r8, r3
ARM GAS  e:\temp\ccrFbtw8.s 			page 25


 625 00e8 6346     		mov	r3, ip
 626 00ea 4646     		mov	r6, r8
 627 00ec 9F5D     		ldrb	r7, [r3, r6]
 628 00ee 013F     		subs	r7, r7, #1
 629 00f0 FFB2     		uxtb	r7, r7
 630 00f2 9F55     		strb	r7, [r3, r6]
 722:..\src\system/timer.c ****                         if (gl_timer_handle[instance][index].cb != NULL)
 631              		.loc 1 722 0
 632 00f4 5B46     		mov	r3, fp
 633 00f6 9B68     		ldr	r3, [r3, #8]
 634 00f8 002B     		cmp	r3, #0
 635 00fa 03D0     		beq	.L35
 723:..\src\system/timer.c ****                         {
 724:..\src\system/timer.c ****                             gl_timer_handle[instance][index].cb (instance, id);
 636              		.loc 1 724 0
 637 00fc 5846     		mov	r0, fp
 638 00fe 8368     		ldr	r3, [r0, #8]
 639 0100 2800     		movs	r0, r5
 640 0102 9847     		blx	r3
 641              	.LVL39:
 642              	.L35:
 698:..\src\system/timer.c ****             {
 643              		.loc 1 698 0 discriminator 2
 644 0104 0134     		adds	r4, r4, #1
 645              	.LVL40:
 646 0106 E4B2     		uxtb	r4, r4
 647              	.LVL41:
 648 0108 00E0     		b	.L39
 649              	.LVL42:
 650              	.L47:
 651 010a 0024     		movs	r4, #0
 652              	.L39:
 653              	.LVL43:
 698:..\src\system/timer.c ****             {
 654              		.loc 1 698 0 is_stmt 0 discriminator 1
 655 010c 1E2C     		cmp	r4, #30
 656 010e 8FD9     		bls	.L38
 695:..\src\system/timer.c ****         {
 657              		.loc 1 695 0 is_stmt 1 discriminator 2
 658 0110 0135     		adds	r5, r5, #1
 659              	.LVL44:
 660 0112 EDB2     		uxtb	r5, r5
 661              	.LVL45:
 662              	.L34:
 695:..\src\system/timer.c ****         {
 663              		.loc 1 695 0 is_stmt 0 discriminator 1
 664 0114 012D     		cmp	r5, #1
 665 0116 F8D9     		bls	.L47
 666              	.LVL46:
 725:..\src\system/timer.c ****                         }
 726:..\src\system/timer.c ****                     }
 727:..\src\system/timer.c ****                 }
 728:..\src\system/timer.c ****             }
 729:..\src\system/timer.c ****         }
 730:..\src\system/timer.c **** 
 731:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE != 0)
 732:..\src\system/timer.c ****         period = TIMER_HW_MAX_TIMEOUT;
ARM GAS  e:\temp\ccrFbtw8.s 			page 26


 733:..\src\system/timer.c ****         interval = 0;
 734:..\src\system/timer.c ****         if (gl_total_active != 0)
 667              		.loc 1 734 0 is_stmt 1
 668 0118 6E23     		movs	r3, #110
 669 011a 2C4A     		ldr	r2, .L50
 670 011c D35C     		ldrb	r3, [r2, r3]
 671 011e 002B     		cmp	r3, #0
 672 0120 28D1     		bne	.L48
 732:..\src\system/timer.c ****         interval = 0;
 673              		.loc 1 732 0
 674 0122 2C4C     		ldr	r4, .L50+8
 733:..\src\system/timer.c ****         if (gl_total_active != 0)
 675              		.loc 1 733 0
 676 0124 0020     		movs	r0, #0
 677 0126 33E0     		b	.L41
 678              	.LVL47:
 679              	.L43:
 735:..\src\system/timer.c ****         {
 736:..\src\system/timer.c ****             /* Now identify the next timer setting. */
 737:..\src\system/timer.c ****             for (instance = 0; instance < TIMER_NUM_INSTANCES; instance++)
 738:..\src\system/timer.c ****             {
 739:..\src\system/timer.c ****                 for (index = 0; index < TIMER_NUM_TIMERS; index++)
 740:..\src\system/timer.c ****                 {
 741:..\src\system/timer.c ****                     if (gl_timer_handle[instance][index].id != TIMER_INVALID_ID)
 680              		.loc 1 741 0
 681 0128 2800     		movs	r0, r5
 682 012a 5E00     		lsls	r6, r3, #1
 683 012c F618     		adds	r6, r6, r3
 684 012e B700     		lsls	r7, r6, #2
 685 0130 BA22     		movs	r2, #186
 686 0132 5200     		lsls	r2, r2, #1
 687 0134 6A43     		muls	r2, r5
 688 0136 BA18     		adds	r2, r7, r2
 689 0138 254E     		ldr	r6, .L50+4
 690 013a B218     		adds	r2, r6, r2
 691 013c 927B     		ldrb	r2, [r2, #14]
 692 013e D2B2     		uxtb	r2, r2
 693 0140 FF2A     		cmp	r2, #255
 694 0142 0ED0     		beq	.L42
 742:..\src\system/timer.c ****                     {
 743:..\src\system/timer.c ****                         if (gl_timer_handle[instance][index].count < period)
 695              		.loc 1 743 0
 696 0144 BA22     		movs	r2, #186
 697 0146 5200     		lsls	r2, r2, #1
 698 0148 6A43     		muls	r2, r5
 699 014a BA18     		adds	r2, r7, r2
 700 014c 204E     		ldr	r6, .L50+4
 701 014e B218     		adds	r2, r6, r2
 702 0150 5268     		ldr	r2, [r2, #4]
 703 0152 9442     		cmp	r4, r2
 704 0154 05D9     		bls	.L42
 744:..\src\system/timer.c ****                         {
 745:..\src\system/timer.c ****                             period = gl_timer_handle[instance][index].count;
 705              		.loc 1 745 0
 706 0156 BA22     		movs	r2, #186
 707 0158 5200     		lsls	r2, r2, #1
 708 015a 5043     		muls	r0, r2
ARM GAS  e:\temp\ccrFbtw8.s 			page 27


 709 015c 3818     		adds	r0, r7, r0
 710 015e 3018     		adds	r0, r6, r0
 711 0160 4468     		ldr	r4, [r0, #4]
 712              	.LVL48:
 713              	.L42:
 739:..\src\system/timer.c ****                 {
 714              		.loc 1 739 0 discriminator 2
 715 0162 0133     		adds	r3, r3, #1
 716              	.LVL49:
 717 0164 DBB2     		uxtb	r3, r3
 718              	.LVL50:
 719 0166 00E0     		b	.L44
 720              	.LVL51:
 721              	.L49:
 722 0168 0023     		movs	r3, #0
 723              	.L44:
 724              	.LVL52:
 739:..\src\system/timer.c ****                 {
 725              		.loc 1 739 0 is_stmt 0 discriminator 1
 726 016a 1E2B     		cmp	r3, #30
 727 016c DCD9     		bls	.L43
 737:..\src\system/timer.c ****             {
 728              		.loc 1 737 0 is_stmt 1 discriminator 2
 729 016e 0135     		adds	r5, r5, #1
 730              	.LVL53:
 731 0170 EDB2     		uxtb	r5, r5
 732              	.LVL54:
 733 0172 01E0     		b	.L40
 734              	.LVL55:
 735              	.L48:
 736 0174 174C     		ldr	r4, .L50+8
 737 0176 0025     		movs	r5, #0
 738              	.LVL56:
 739              	.L40:
 737:..\src\system/timer.c ****             {
 740              		.loc 1 737 0 is_stmt 0 discriminator 1
 741 0178 012D     		cmp	r5, #1
 742 017a F5D9     		bls	.L49
 746:..\src\system/timer.c ****                         }
 747:..\src\system/timer.c ****                     }
 748:..\src\system/timer.c ****                 }
 749:..\src\system/timer.c ****             }
 750:..\src\system/timer.c **** 
 751:..\src\system/timer.c ****             /*
 752:..\src\system/timer.c ****              * Since there is a remote possiblilty of us missing the timer
 753:..\src\system/timer.c ****              * window while in the callback, re-run to avoid. The design
 754:..\src\system/timer.c ****              * of the software should be to have only small callback
 755:..\src\system/timer.c ****              * handlers. There is a possibility that if the callbacks are
 756:..\src\system/timer.c ****              * large, firmware will not get any time to execute main task.
 757:..\src\system/timer.c ****              */
 758:..\src\system/timer.c ****             interval = hw_timer_get_tick_interval (gl_start_tick,
 743              		.loc 1 758 0 is_stmt 1
 744 017c 7223     		movs	r3, #114
 745 017e 134A     		ldr	r2, .L50
 746 0180 D55A     		ldrh	r5, [r2, r3]
 747              	.LVL57:
 748 0182 ADB2     		uxth	r5, r5
ARM GAS  e:\temp\ccrFbtw8.s 			page 28


 749 0184 FFF7FEFF 		bl	hw_timer_get_count
 750              	.LVL58:
 751 0188 0100     		movs	r1, r0
 752 018a 2800     		movs	r0, r5
 753 018c FFF7FEFF 		bl	hw_timer_get_tick_interval
 754              	.LVL59:
 755              	.L41:
 759:..\src\system/timer.c ****                     hw_timer_get_count());
 760:..\src\system/timer.c ****         }
 761:..\src\system/timer.c **** 
 762:..\src\system/timer.c ****     } while (period < (interval + TIMER_OVERRUN_THRESHOLD));
 756              		.loc 1 762 0
 757 0190 0530     		adds	r0, r0, #5
 758              	.LVL60:
 759 0192 8442     		cmp	r4, r0
 760 0194 00D2     		bcs	.LCB709
 761 0196 3DE7     		b	.L45	@long jump
 762              	.LCB709:
 763:..\src\system/timer.c **** 
 764:..\src\system/timer.c ****     /*
 765:..\src\system/timer.c ****      * Load the timer with the required period. The value is intentionally
 766:..\src\system/timer.c ****      * type-casted to 16 bit so that it takes care of wrap around.
 767:..\src\system/timer.c ****      */
 768:..\src\system/timer.c ****     gl_tick_time = period;
 763              		.loc 1 768 0
 764 0198 A4B2     		uxth	r4, r4
 765              	.LVL61:
 766 019a 0C4D     		ldr	r5, .L50
 767 019c 7423     		movs	r3, #116
 768 019e EC52     		strh	r4, [r5, r3]
 769:..\src\system/timer.c ****     hw_timer_load_period ((uint16_t)(period + gl_start_tick));
 769              		.loc 1 769 0
 770 01a0 023B     		subs	r3, r3, #2
 771 01a2 E85A     		ldrh	r0, [r5, r3]
 772              	.LVL62:
 773 01a4 0419     		adds	r4, r0, r4
 774 01a6 A0B2     		uxth	r0, r4
 775 01a8 FFF7FEFF 		bl	hw_timer_load_period
 776              	.LVL63:
 770:..\src\system/timer.c **** 
 771:..\src\system/timer.c **** #else /* (TIMER_TICKLESS_ENABLE == 0) */
 772:..\src\system/timer.c ****     } while (0);
 773:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE) */
 774:..\src\system/timer.c **** 
 775:..\src\system/timer.c ****     /* Indicate that we are done with the interrupt handler. */
 776:..\src\system/timer.c ****     gl_is_callback = false;
 777              		.loc 1 776 0
 778 01ac 0022     		movs	r2, #0
 779 01ae 6F23     		movs	r3, #111
 780 01b0 EA54     		strb	r2, [r5, r3]
 777:..\src\system/timer.c **** 
 778:..\src\system/timer.c ****     /* If no timer is runing turn off the hardware timer */
 779:..\src\system/timer.c ****     if(gl_total_active == 0)
 781              		.loc 1 779 0
 782 01b2 013B     		subs	r3, r3, #1
 783 01b4 EB5C     		ldrb	r3, [r5, r3]
 784 01b6 002B     		cmp	r3, #0
ARM GAS  e:\temp\ccrFbtw8.s 			page 29


 785 01b8 01D1     		bne	.L33
 780:..\src\system/timer.c ****     {
 781:..\src\system/timer.c ****         hw_timer_stop();
 786              		.loc 1 781 0
 787 01ba FFF7FEFF 		bl	hw_timer_stop
 788              	.LVL64:
 789              	.L33:
 782:..\src\system/timer.c ****     }
 783:..\src\system/timer.c **** }
 790              		.loc 1 783 0
 791              		@ sp needed
 792 01be 3CBC     		pop	{r2, r3, r4, r5}
 793 01c0 9046     		mov	r8, r2
 794 01c2 9946     		mov	r9, r3
 795 01c4 A246     		mov	r10, r4
 796 01c6 AB46     		mov	fp, r5
 797 01c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 798              	.L51:
 799 01ca C046     		.align	2
 800              	.L50:
 801 01cc 80020000 		.word	.LANCHOR1
 802 01d0 00000000 		.word	.LANCHOR0
 803 01d4 C0FF0000 		.word	65472
 804              		.cfi_endproc
 805              	.LFE52:
 806              		.size	timer_interrupt_handler, .-timer_interrupt_handler
 807              		.section	.text.wdt_interrupt_handler,"ax",%progbits
 808              		.align	2
 809              		.code	16
 810              		.thumb_func
 811              		.type	wdt_interrupt_handler, %function
 812              	wdt_interrupt_handler:
 813              	.LFB53:
 784:..\src\system/timer.c **** 
 785:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 786:..\src\system/timer.c **** /* WDT interrupt handler timer expiry interrupt handler. */
 787:..\src\system/timer.c **** static void wdt_interrupt_handler(void)
 788:..\src\system/timer.c **** {
 814              		.loc 1 788 0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818 0000 10B5     		push	{r4, lr}
 819              		.cfi_def_cfa_offset 8
 820              		.cfi_offset 4, -8
 821              		.cfi_offset 14, -4
 789:..\src\system/timer.c ****     /* Clear WDT pending interrupt */
 790:..\src\system/timer.c ****     SRSSLT->srss_intr = SRSS_INTR_WDT_MATCH;
 822              		.loc 1 790 0
 823 0002 0122     		movs	r2, #1
 824 0004 024B     		ldr	r3, .L53
 825 0006 5A64     		str	r2, [r3, #68]
 791:..\src\system/timer.c **** 
 792:..\src\system/timer.c **** #if (TIMER_TICKLESS_ENABLE == 0)
 793:..\src\system/timer.c ****     /* Load the timer match register. */
 794:..\src\system/timer.c ****     SRSSLT->wdt_match = (uint16_t)((SRSSLT->wdt_counter & WDT_COUNTER_COUNTER_MASK)
 795:..\src\system/timer.c ****             + gl_multiplier);
ARM GAS  e:\temp\ccrFbtw8.s 			page 30


 796:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE == 0) */
 797:..\src\system/timer.c **** 
 798:..\src\system/timer.c ****     /* Invoke the timer handler. */
 799:..\src\system/timer.c ****     timer_interrupt_handler ();
 826              		.loc 1 799 0
 827 0008 FFF7FEFF 		bl	timer_interrupt_handler
 828              	.LVL65:
 800:..\src\system/timer.c **** }
 829              		.loc 1 800 0
 830              		@ sp needed
 831 000c 10BD     		pop	{r4, pc}
 832              	.L54:
 833 000e C046     		.align	2
 834              	.L53:
 835 0010 00000340 		.word	1073938432
 836              		.cfi_endproc
 837              	.LFE53:
 838              		.size	wdt_interrupt_handler, .-wdt_interrupt_handler
 839              		.section	.text.hw_timer_start,"ax",%progbits
 840              		.align	2
 841              		.code	16
 842              		.thumb_func
 843              		.type	hw_timer_start, %function
 844              	hw_timer_start:
 845              	.LFB34:
 226:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 846              		.loc 1 226 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850 0000 10B5     		push	{r4, lr}
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 4, -8
 853              		.cfi_offset 14, -4
 238:..\src\system/timer.c **** 
 854              		.loc 1 238 0
 855 0002 0920     		movs	r0, #9
 856 0004 FFF7FEFF 		bl	CyIntEnable
 857              	.LVL66:
 249:..\src\system/timer.c **** 
 858              		.loc 1 249 0
 859              		@ sp needed
 860 0008 10BD     		pop	{r4, pc}
 861              		.cfi_endproc
 862              	.LFE34:
 863              		.size	hw_timer_start, .-hw_timer_start
 864              		.section	.text.timer_init,"ax",%progbits
 865              		.align	2
 866              		.global	timer_init
 867              		.code	16
 868              		.thumb_func
 869              		.type	timer_init, %function
 870              	timer_init:
 871              	.LFB39:
 311:..\src\system/timer.c ****     uint8_t i, j;
 872              		.loc 1 311 0
 873              		.cfi_startproc
ARM GAS  e:\temp\ccrFbtw8.s 			page 31


 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876 0000 10B5     		push	{r4, lr}
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 4, -8
 879              		.cfi_offset 14, -4
 880              	.LVL67:
 315:..\src\system/timer.c ****     {
 881              		.loc 1 315 0
 882 0002 0024     		movs	r4, #0
 883 0004 17E0     		b	.L57
 884              	.LVL68:
 885              	.L58:
 319:..\src\system/timer.c ****         }
 886              		.loc 1 319 0 discriminator 3
 887 0006 5100     		lsls	r1, r2, #1
 888 0008 8918     		adds	r1, r1, r2
 889 000a 8800     		lsls	r0, r1, #2
 890 000c BA23     		movs	r3, #186
 891 000e 5B00     		lsls	r3, r3, #1
 892 0010 6343     		muls	r3, r4
 893 0012 C318     		adds	r3, r0, r3
 894 0014 0C49     		ldr	r1, .L61
 895 0016 CB18     		adds	r3, r1, r3
 896 0018 FF21     		movs	r1, #255
 897 001a 9973     		strb	r1, [r3, #14]
 317:..\src\system/timer.c ****         {
 898              		.loc 1 317 0 discriminator 3
 899 001c 0132     		adds	r2, r2, #1
 900              	.LVL69:
 901 001e D2B2     		uxtb	r2, r2
 902              	.LVL70:
 903 0020 00E0     		b	.L59
 904              	.LVL71:
 905              	.L60:
 906 0022 0022     		movs	r2, #0
 907              	.L59:
 908              	.LVL72:
 317:..\src\system/timer.c ****         {
 909              		.loc 1 317 0 is_stmt 0 discriminator 1
 910 0024 1E2A     		cmp	r2, #30
 911 0026 EED9     		bls	.L58
 322:..\src\system/timer.c ****     }
 912              		.loc 1 322 0 is_stmt 1 discriminator 2
 913 0028 084B     		ldr	r3, .L61+4
 914 002a 1B19     		adds	r3, r3, r4
 915 002c 0021     		movs	r1, #0
 916 002e 6C22     		movs	r2, #108
 917              	.LVL73:
 918 0030 9954     		strb	r1, [r3, r2]
 315:..\src\system/timer.c ****     {
 919              		.loc 1 315 0 discriminator 2
 920 0032 0134     		adds	r4, r4, #1
 921              	.LVL74:
 922 0034 E4B2     		uxtb	r4, r4
 923              	.LVL75:
 924              	.L57:
ARM GAS  e:\temp\ccrFbtw8.s 			page 32


 315:..\src\system/timer.c ****     {
 925              		.loc 1 315 0 is_stmt 0 discriminator 1
 926 0036 012C     		cmp	r4, #1
 927 0038 F3D9     		bls	.L60
 325:..\src\system/timer.c **** 
 928              		.loc 1 325 0 is_stmt 1
 929 003a 0021     		movs	r1, #0
 930 003c 6E23     		movs	r3, #110
 931 003e 034A     		ldr	r2, .L61+4
 932 0040 D154     		strb	r1, [r2, r3]
 328:..\src\system/timer.c **** }
 933              		.loc 1 328 0
 934 0042 FFF7FEFF 		bl	hw_timer_init
 935              	.LVL76:
 329:..\src\system/timer.c **** 
 936              		.loc 1 329 0
 937              		@ sp needed
 938              	.LVL77:
 939 0046 10BD     		pop	{r4, pc}
 940              	.L62:
 941              		.align	2
 942              	.L61:
 943 0048 00000000 		.word	.LANCHOR0
 944 004c 80020000 		.word	.LANCHOR1
 945              		.cfi_endproc
 946              	.LFE39:
 947              		.size	timer_init, .-timer_init
 948              		.section	.text.timer_start,"ax",%progbits
 949              		.align	2
 950              		.global	timer_start
 951              		.code	16
 952              		.thumb_func
 953              		.type	timer_start, %function
 954              	timer_start:
 955              	.LFB41:
 353:..\src\system/timer.c ****     int8_t i;
 956              		.loc 1 353 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 16
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              	.LVL78:
 961 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 962              		.cfi_def_cfa_offset 20
 963              		.cfi_offset 4, -20
 964              		.cfi_offset 5, -16
 965              		.cfi_offset 6, -12
 966              		.cfi_offset 7, -8
 967              		.cfi_offset 14, -4
 968 0002 85B0     		sub	sp, sp, #20
 969              		.cfi_def_cfa_offset 40
 970 0004 0600     		movs	r6, r0
 971 0006 0C00     		movs	r4, r1
 972 0008 1500     		movs	r5, r2
 973 000a 0293     		str	r3, [sp, #8]
 974              	.LVL79:
 359:..\src\system/timer.c ****     {
 975              		.loc 1 359 0
ARM GAS  e:\temp\ccrFbtw8.s 			page 33


 976 000c FF29     		cmp	r1, #255
 977 000e 00D1     		bne	.LCB900
 978 0010 B1E0     		b	.L74	@long jump
 979              	.LCB900:
 359:..\src\system/timer.c ****     {
 980              		.loc 1 359 0 is_stmt 0 discriminator 1
 981 0012 002A     		cmp	r2, #0
 982 0014 00D1     		bne	.LCB902
 983 0016 B0E0     		b	.L75	@long jump
 984              	.LCB902:
 365:..\src\system/timer.c **** 
 985              		.loc 1 365 0 is_stmt 1
 986 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 987              	.LVL80:
 988 001c 0390     		str	r0, [sp, #12]
 989              	.LVL81:
 357:..\src\system/timer.c **** 
 990              		.loc 1 357 0
 991 001e FF20     		movs	r0, #255
 375:..\src\system/timer.c ****     {
 992              		.loc 1 375 0
 993 0020 1E23     		movs	r3, #30
 994 0022 2DE0     		b	.L65
 995              	.LVL82:
 996              	.L69:
 378:..\src\system/timer.c ****         {
 997              		.loc 1 378 0
 998 0024 0196     		str	r6, [sp, #4]
 999 0026 1F00     		movs	r7, r3
 1000 0028 5A00     		lsls	r2, r3, #1
 1001 002a D218     		adds	r2, r2, r3
 1002 002c 9100     		lsls	r1, r2, #2
 1003 002e BA22     		movs	r2, #186
 1004 0030 5200     		lsls	r2, r2, #1
 1005 0032 7243     		muls	r2, r6
 1006 0034 8A18     		adds	r2, r1, r2
 1007 0036 5249     		ldr	r1, .L78
 1008 0038 8A18     		adds	r2, r1, r2
 1009 003a 927B     		ldrb	r2, [r2, #14]
 1010 003c D2B2     		uxtb	r2, r2
 1011 003e FF2A     		cmp	r2, #255
 1012 0040 00D1     		bne	.L66
 380:..\src\system/timer.c ****         }
 1013              		.loc 1 380 0
 1014 0042 D8B2     		uxtb	r0, r3
 1015              	.LVL83:
 1016              	.L66:
 387:..\src\system/timer.c ****         {
 1017              		.loc 1 387 0
 1018 0044 7A00     		lsls	r2, r7, #1
 1019 0046 D719     		adds	r7, r2, r7
 1020 0048 B900     		lsls	r1, r7, #2
 1021 004a BA22     		movs	r2, #186
 1022 004c 5200     		lsls	r2, r2, #1
 1023 004e 7243     		muls	r2, r6
 1024 0050 8A18     		adds	r2, r1, r2
 1025 0052 4B4F     		ldr	r7, .L78
ARM GAS  e:\temp\ccrFbtw8.s 			page 34


 1026 0054 BA18     		adds	r2, r7, r2
 1027 0056 927B     		ldrb	r2, [r2, #14]
 1028 0058 D2B2     		uxtb	r2, r2
 1029 005a 9442     		cmp	r4, r2
 1030 005c 0ED1     		bne	.L67
 389:..\src\system/timer.c ****             /*
 1031              		.loc 1 389 0
 1032 005e D8B2     		uxtb	r0, r3
 1033              	.LVL84:
 394:..\src\system/timer.c ****             gl_total_active--;
 1034              		.loc 1 394 0
 1035 0060 484A     		ldr	r2, .L78+4
 1036 0062 6C27     		movs	r7, #108
 1037 0064 019B     		ldr	r3, [sp, #4]
 1038              	.LVL85:
 1039 0066 D118     		adds	r1, r2, r3
 1040 0068 CB5D     		ldrb	r3, [r1, r7]
 1041 006a 013B     		subs	r3, r3, #1
 1042 006c DBB2     		uxtb	r3, r3
 1043 006e CB55     		strb	r3, [r1, r7]
 395:..\src\system/timer.c ****             break;
 1044              		.loc 1 395 0
 1045 0070 6E21     		movs	r1, #110
 1046 0072 535C     		ldrb	r3, [r2, r1]
 1047 0074 013B     		subs	r3, r3, #1
 1048 0076 DBB2     		uxtb	r3, r3
 1049 0078 5354     		strb	r3, [r2, r1]
 396:..\src\system/timer.c ****         }
 1050              		.loc 1 396 0
 1051 007a 03E0     		b	.L68
 1052              	.LVL86:
 1053              	.L67:
 375:..\src\system/timer.c ****     {
 1054              		.loc 1 375 0 discriminator 2
 1055 007c 013B     		subs	r3, r3, #1
 1056              	.LVL87:
 1057 007e 5BB2     		sxtb	r3, r3
 1058              	.LVL88:
 1059              	.L65:
 375:..\src\system/timer.c ****     {
 1060              		.loc 1 375 0 is_stmt 0 discriminator 1
 1061 0080 002B     		cmp	r3, #0
 1062 0082 CFDA     		bge	.L69
 1063              	.LVL89:
 1064              	.L68:
 400:..\src\system/timer.c ****     {
 1065              		.loc 1 400 0 is_stmt 1
 1066 0084 FF28     		cmp	r0, #255
 1067 0086 70D0     		beq	.L76
 402:..\src\system/timer.c ****         gl_timer_handle[instance][index].cb = cb;
 1068              		.loc 1 402 0
 1069 0088 0700     		movs	r7, r0
 1070 008a 3D4B     		ldr	r3, .L78
 1071 008c 4200     		lsls	r2, r0, #1
 1072 008e 1018     		adds	r0, r2, r0
 1073              	.LVL90:
 1074 0090 8100     		lsls	r1, r0, #2
ARM GAS  e:\temp\ccrFbtw8.s 			page 35


 1075 0092 BA22     		movs	r2, #186
 1076 0094 5200     		lsls	r2, r2, #1
 1077 0096 7243     		muls	r2, r6
 1078 0098 8A18     		adds	r2, r1, r2
 1079 009a 9A18     		adds	r2, r3, r2
 1080 009c 9581     		strh	r5, [r2, #12]
 403:..\src\system/timer.c ****         gl_timer_handle[instance][index].id = id;
 1081              		.loc 1 403 0
 1082 009e 0299     		ldr	r1, [sp, #8]
 1083 00a0 9160     		str	r1, [r2, #8]
 404:..\src\system/timer.c **** 
 1084              		.loc 1 404 0
 1085 00a2 9473     		strb	r4, [r2, #14]
 409:..\src\system/timer.c **** 
 1086              		.loc 1 409 0
 1087 00a4 1B88     		ldrh	r3, [r3]
 1088 00a6 6B43     		muls	r3, r5
 1089 00a8 5360     		str	r3, [r2, #4]
 416:..\src\system/timer.c ****         {
 1090              		.loc 1 416 0
 1091 00aa 6F23     		movs	r3, #111
 1092 00ac 354A     		ldr	r2, .L78+4
 1093 00ae D35C     		ldrb	r3, [r2, r3]
 1094 00b0 002B     		cmp	r3, #0
 1095 00b2 4CD1     		bne	.L71
 1096              	.LBB2:
 421:..\src\system/timer.c ****             /*
 1097              		.loc 1 421 0
 1098 00b4 FFF7FEFF 		bl	hw_timer_get_count
 1099              	.LVL91:
 1100 00b8 0100     		movs	r1, r0
 1101              	.LVL92:
 426:..\src\system/timer.c ****             {
 1102              		.loc 1 426 0
 1103 00ba 6E23     		movs	r3, #110
 1104 00bc 314A     		ldr	r2, .L78+4
 1105 00be D35C     		ldrb	r3, [r2, r3]
 1106 00c0 002B     		cmp	r3, #0
 1107 00c2 29D0     		beq	.L72
 428:..\src\system/timer.c ****                         cur_count);
 1108              		.loc 1 428 0
 1109 00c4 1400     		movs	r4, r2
 1110 00c6 7223     		movs	r3, #114
 1111 00c8 D05A     		ldrh	r0, [r2, r3]
 1112              	.LVL93:
 1113 00ca 80B2     		uxth	r0, r0
 1114 00cc FFF7FEFF 		bl	hw_timer_get_tick_interval
 1115              	.LVL94:
 430:..\src\system/timer.c **** 
 1116              		.loc 1 430 0
 1117 00d0 7A00     		lsls	r2, r7, #1
 1118 00d2 D219     		adds	r2, r2, r7
 1119 00d4 9100     		lsls	r1, r2, #2
 1120 00d6 BA23     		movs	r3, #186
 1121 00d8 5B00     		lsls	r3, r3, #1
 1122 00da 7343     		muls	r3, r6
 1123 00dc CB18     		adds	r3, r1, r3
ARM GAS  e:\temp\ccrFbtw8.s 			page 36


 1124 00de 284A     		ldr	r2, .L78
 1125 00e0 D318     		adds	r3, r2, r3
 1126 00e2 5A68     		ldr	r2, [r3, #4]
 1127 00e4 8018     		adds	r0, r0, r2
 1128              	.LVL95:
 1129 00e6 5860     		str	r0, [r3, #4]
 432:..\src\system/timer.c ****                 {
 1130              		.loc 1 432 0
 1131 00e8 5A68     		ldr	r2, [r3, #4]
 1132 00ea 7423     		movs	r3, #116
 1133 00ec E35A     		ldrh	r3, [r4, r3]
 1134 00ee 9BB2     		uxth	r3, r3
 1135 00f0 9A42     		cmp	r2, r3
 1136 00f2 2CD2     		bcs	.L71
 440:..\src\system/timer.c ****                     hw_timer_load_period ((uint16_t) (gl_start_tick +
 1137              		.loc 1 440 0
 1138 00f4 BA23     		movs	r3, #186
 1139 00f6 5B00     		lsls	r3, r3, #1
 1140 00f8 7343     		muls	r3, r6
 1141 00fa CB18     		adds	r3, r1, r3
 1142 00fc 204A     		ldr	r2, .L78
 1143 00fe D318     		adds	r3, r2, r3
 1144 0100 5B68     		ldr	r3, [r3, #4]
 1145 0102 9BB2     		uxth	r3, r3
 1146 0104 7421     		movs	r1, #116
 1147 0106 6352     		strh	r3, [r4, r1]
 441:..\src\system/timer.c ****                                 gl_tick_time));
 1148              		.loc 1 441 0
 1149 0108 7223     		movs	r3, #114
 1150 010a E35A     		ldrh	r3, [r4, r3]
 1151 010c 605A     		ldrh	r0, [r4, r1]
 1152 010e C018     		adds	r0, r0, r3
 1153 0110 80B2     		uxth	r0, r0
 1154 0112 FFF7FEFF 		bl	hw_timer_load_period
 1155              	.LVL96:
 1156 0116 1AE0     		b	.L71
 1157              	.LVL97:
 1158              	.L72:
 449:..\src\system/timer.c ****                 count = gl_timer_handle[instance][index].count;
 1159              		.loc 1 449 0
 1160 0118 7223     		movs	r3, #114
 1161 011a 1A4A     		ldr	r2, .L78+4
 1162 011c D052     		strh	r0, [r2, r3]
 450:..\src\system/timer.c ****                 if (count > TIMER_HW_MAX_TIMEOUT)
 1163              		.loc 1 450 0
 1164 011e 7B00     		lsls	r3, r7, #1
 1165 0120 DF19     		adds	r7, r3, r7
 1166 0122 BA00     		lsls	r2, r7, #2
 1167 0124 BA23     		movs	r3, #186
 1168 0126 5B00     		lsls	r3, r3, #1
 1169 0128 7343     		muls	r3, r6
 1170 012a D318     		adds	r3, r2, r3
 1171 012c 144A     		ldr	r2, .L78
 1172 012e D318     		adds	r3, r2, r3
 1173 0130 5B68     		ldr	r3, [r3, #4]
 1174              	.LVL98:
 451:..\src\system/timer.c ****                 {
ARM GAS  e:\temp\ccrFbtw8.s 			page 37


 1175              		.loc 1 451 0
 1176 0132 154A     		ldr	r2, .L78+8
 1177 0134 9342     		cmp	r3, r2
 1178 0136 00D9     		bls	.L73
 453:..\src\system/timer.c ****                 }
 1179              		.loc 1 453 0
 1180 0138 1300     		movs	r3, r2
 1181              	.LVL99:
 1182              	.L73:
 455:..\src\system/timer.c ****                 hw_timer_load_period ((uint16_t) (count + cur_count));
 1183              		.loc 1 455 0
 1184 013a 9BB2     		uxth	r3, r3
 1185              	.LVL100:
 1186 013c 7422     		movs	r2, #116
 1187 013e 1148     		ldr	r0, .L78+4
 1188              	.LVL101:
 1189 0140 8352     		strh	r3, [r0, r2]
 1190              	.LVL102:
 456:..\src\system/timer.c ****                 hw_timer_start ();
 1191              		.loc 1 456 0
 1192 0142 CB18     		adds	r3, r1, r3
 1193 0144 98B2     		uxth	r0, r3
 1194 0146 FFF7FEFF 		bl	hw_timer_load_period
 1195              	.LVL103:
 457:..\src\system/timer.c ****             }
 1196              		.loc 1 457 0
 1197 014a FFF7FEFF 		bl	hw_timer_start
 1198              	.LVL104:
 1199              	.L71:
 1200              	.LBE2:
 475:..\src\system/timer.c ****         gl_total_active++;
 1201              		.loc 1 475 0
 1202 014e 0D4A     		ldr	r2, .L78+4
 1203 0150 6C21     		movs	r1, #108
 1204 0152 9619     		adds	r6, r2, r6
 1205 0154 735C     		ldrb	r3, [r6, r1]
 1206 0156 0133     		adds	r3, r3, #1
 1207 0158 DBB2     		uxtb	r3, r3
 1208 015a 7354     		strb	r3, [r6, r1]
 476:..\src\system/timer.c ****         status = true;
 1209              		.loc 1 476 0
 1210 015c 0231     		adds	r1, r1, #2
 1211 015e 535C     		ldrb	r3, [r2, r1]
 1212 0160 0133     		adds	r3, r3, #1
 1213 0162 DBB2     		uxtb	r3, r3
 1214 0164 5354     		strb	r3, [r2, r1]
 1215              	.LVL105:
 477:..\src\system/timer.c ****     }
 1216              		.loc 1 477 0
 1217 0166 0124     		movs	r4, #1
 1218 0168 00E0     		b	.L70
 1219              	.LVL106:
 1220              	.L76:
 356:..\src\system/timer.c ****     uint8_t index = TIMER_INVALID_INDEX;
 1221              		.loc 1 356 0
 1222 016a 0024     		movs	r4, #0
 1223              	.LVL107:
ARM GAS  e:\temp\ccrFbtw8.s 			page 38


 1224              	.L70:
 481:..\src\system/timer.c **** 
 1225              		.loc 1 481 0
 1226 016c 0398     		ldr	r0, [sp, #12]
 1227 016e FFF7FEFF 		bl	CyExitCriticalSection
 1228              	.LVL108:
 483:..\src\system/timer.c **** }
 1229              		.loc 1 483 0
 1230 0172 2000     		movs	r0, r4
 1231 0174 02E0     		b	.L64
 1232              	.LVL109:
 1233              	.L74:
 361:..\src\system/timer.c ****     }
 1234              		.loc 1 361 0
 1235 0176 0020     		movs	r0, #0
 1236              	.LVL110:
 1237 0178 00E0     		b	.L64
 1238              	.LVL111:
 1239              	.L75:
 1240 017a 0020     		movs	r0, #0
 1241              	.LVL112:
 1242              	.L64:
 484:..\src\system/timer.c **** 
 1243              		.loc 1 484 0
 1244 017c 05B0     		add	sp, sp, #20
 1245              		@ sp needed
 1246 017e F0BD     		pop	{r4, r5, r6, r7, pc}
 1247              	.L79:
 1248              		.align	2
 1249              	.L78:
 1250 0180 00000000 		.word	.LANCHOR0
 1251 0184 80020000 		.word	.LANCHOR1
 1252 0188 C0FF0000 		.word	65472
 1253              		.cfi_endproc
 1254              	.LFE41:
 1255              		.size	timer_start, .-timer_start
 1256              		.section	.text.timer_start_wocb,"ax",%progbits
 1257              		.align	2
 1258              		.global	timer_start_wocb
 1259              		.code	16
 1260              		.thumb_func
 1261              		.type	timer_start_wocb, %function
 1262              	timer_start_wocb:
 1263              	.LFB42:
 487:..\src\system/timer.c ****     return timer_start(instance, id, period, NULL);
 1264              		.loc 1 487 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268              	.LVL113:
 1269 0000 10B5     		push	{r4, lr}
 1270              		.cfi_def_cfa_offset 8
 1271              		.cfi_offset 4, -8
 1272              		.cfi_offset 14, -4
 488:..\src\system/timer.c **** }    
 1273              		.loc 1 488 0
 1274 0002 0023     		movs	r3, #0
ARM GAS  e:\temp\ccrFbtw8.s 			page 39


 1275 0004 FFF7FEFF 		bl	timer_start
 1276              	.LVL114:
 489:..\src\system/timer.c **** 
 1277              		.loc 1 489 0
 1278              		@ sp needed
 1279 0008 10BD     		pop	{r4, pc}
 1280              		.cfi_endproc
 1281              	.LFE42:
 1282              		.size	timer_start_wocb, .-timer_start_wocb
 1283 000a C046     		.section	.text.timer_stop,"ax",%progbits
 1284              		.align	2
 1285              		.global	timer_stop
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	timer_stop, %function
 1289              	timer_stop:
 1290              	.LFB44:
 517:..\src\system/timer.c ****     uint8_t index, state;
 1291              		.loc 1 517 0
 1292              		.cfi_startproc
 1293              		@ args = 0, pretend = 0, frame = 0
 1294              		@ frame_needed = 0, uses_anonymous_args = 0
 1295              	.LVL115:
 1296 0000 70B5     		push	{r4, r5, r6, lr}
 1297              		.cfi_def_cfa_offset 16
 1298              		.cfi_offset 4, -16
 1299              		.cfi_offset 5, -12
 1300              		.cfi_offset 6, -8
 1301              		.cfi_offset 14, -4
 1302 0002 0400     		movs	r4, r0
 1303 0004 0E00     		movs	r6, r1
 521:..\src\system/timer.c **** 
 1304              		.loc 1 521 0
 1305 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1306              	.LVL116:
 1307 000a 0500     		movs	r5, r0
 1308              	.LVL117:
 524:..\src\system/timer.c ****     if (index != TIMER_INVALID_INDEX)
 1309              		.loc 1 524 0
 1310 000c 3100     		movs	r1, r6
 1311 000e 2000     		movs	r0, r4
 1312 0010 FFF7FEFF 		bl	timer_get_index
 1313              	.LVL118:
 525:..\src\system/timer.c ****     {
 1314              		.loc 1 525 0
 1315 0014 FF28     		cmp	r0, #255
 1316 0016 03D0     		beq	.L82
 527:..\src\system/timer.c ****     }
 1317              		.loc 1 527 0
 1318 0018 0100     		movs	r1, r0
 1319 001a 2000     		movs	r0, r4
 1320              	.LVL119:
 1321 001c FFF7FEFF 		bl	timer_stop_internal
 1322              	.LVL120:
 1323              	.L82:
 531:..\src\system/timer.c **** }
 1324              		.loc 1 531 0
ARM GAS  e:\temp\ccrFbtw8.s 			page 40


 1325 0020 2800     		movs	r0, r5
 1326 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1327              	.LVL121:
 532:..\src\system/timer.c **** 
 1328              		.loc 1 532 0
 1329              		@ sp needed
 1330              	.LVL122:
 1331 0026 70BD     		pop	{r4, r5, r6, pc}
 1332              		.cfi_endproc
 1333              	.LFE44:
 1334              		.size	timer_stop, .-timer_stop
 1335              		.section	.text.timer_stop_all,"ax",%progbits
 1336              		.align	2
 1337              		.global	timer_stop_all
 1338              		.code	16
 1339              		.thumb_func
 1340              		.type	timer_stop_all, %function
 1341              	timer_stop_all:
 1342              	.LFB45:
 535:..\src\system/timer.c ****     uint8_t index, state;
 1343              		.loc 1 535 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              	.LVL123:
 1348 0000 70B5     		push	{r4, r5, r6, lr}
 1349              		.cfi_def_cfa_offset 16
 1350              		.cfi_offset 4, -16
 1351              		.cfi_offset 5, -12
 1352              		.cfi_offset 6, -8
 1353              		.cfi_offset 14, -4
 1354 0002 0600     		movs	r6, r0
 539:..\src\system/timer.c **** 
 1355              		.loc 1 539 0
 1356 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1357              	.LVL124:
 1358 0008 0400     		movs	r4, r0
 1359              	.LVL125:
 541:..\src\system/timer.c ****     {
 1360              		.loc 1 541 0
 1361 000a 0025     		movs	r5, #0
 1362 000c 12E0     		b	.L84
 1363              	.LVL126:
 1364              	.L86:
 544:..\src\system/timer.c ****         {
 1365              		.loc 1 544 0
 1366 000e 6A00     		lsls	r2, r5, #1
 1367 0010 5219     		adds	r2, r2, r5
 1368 0012 9100     		lsls	r1, r2, #2
 1369 0014 BA23     		movs	r3, #186
 1370 0016 5B00     		lsls	r3, r3, #1
 1371 0018 7343     		muls	r3, r6
 1372 001a CB18     		adds	r3, r1, r3
 1373 001c 084A     		ldr	r2, .L87
 1374 001e D318     		adds	r3, r2, r3
 1375 0020 9B7B     		ldrb	r3, [r3, #14]
 1376 0022 DBB2     		uxtb	r3, r3
ARM GAS  e:\temp\ccrFbtw8.s 			page 41


 1377 0024 FF2B     		cmp	r3, #255
 1378 0026 03D0     		beq	.L85
 546:..\src\system/timer.c ****         }
 1379              		.loc 1 546 0
 1380 0028 2900     		movs	r1, r5
 1381 002a 3000     		movs	r0, r6
 1382 002c FFF7FEFF 		bl	timer_stop_internal
 1383              	.LVL127:
 1384              	.L85:
 541:..\src\system/timer.c ****     {
 1385              		.loc 1 541 0 discriminator 2
 1386 0030 0135     		adds	r5, r5, #1
 1387              	.LVL128:
 1388 0032 EDB2     		uxtb	r5, r5
 1389              	.LVL129:
 1390              	.L84:
 541:..\src\system/timer.c ****     {
 1391              		.loc 1 541 0 is_stmt 0 discriminator 1
 1392 0034 1E2D     		cmp	r5, #30
 1393 0036 EAD9     		bls	.L86
 551:..\src\system/timer.c **** }
 1394              		.loc 1 551 0 is_stmt 1
 1395 0038 2000     		movs	r0, r4
 1396 003a FFF7FEFF 		bl	CyExitCriticalSection
 1397              	.LVL130:
 552:..\src\system/timer.c **** 
 1398              		.loc 1 552 0
 1399              		@ sp needed
 1400              	.LVL131:
 1401              	.LVL132:
 1402 003e 70BD     		pop	{r4, r5, r6, pc}
 1403              	.L88:
 1404              		.align	2
 1405              	.L87:
 1406 0040 00000000 		.word	.LANCHOR0
 1407              		.cfi_endproc
 1408              	.LFE45:
 1409              		.size	timer_stop_all, .-timer_stop_all
 1410              		.section	.text.timer_stop_range,"ax",%progbits
 1411              		.align	2
 1412              		.global	timer_stop_range
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	timer_stop_range, %function
 1416              	timer_stop_range:
 1417              	.LFB46:
 555:..\src\system/timer.c ****     uint8_t index, state;
 1418              		.loc 1 555 0
 1419              		.cfi_startproc
 1420              		@ args = 0, pretend = 0, frame = 8
 1421              		@ frame_needed = 0, uses_anonymous_args = 0
 1422              	.LVL133:
 1423 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1424              		.cfi_def_cfa_offset 20
 1425              		.cfi_offset 4, -20
 1426              		.cfi_offset 5, -16
 1427              		.cfi_offset 6, -12
ARM GAS  e:\temp\ccrFbtw8.s 			page 42


 1428              		.cfi_offset 7, -8
 1429              		.cfi_offset 14, -4
 1430 0002 83B0     		sub	sp, sp, #12
 1431              		.cfi_def_cfa_offset 32
 1432 0004 0600     		movs	r6, r0
 1433 0006 0F00     		movs	r7, r1
 1434 0008 1400     		movs	r4, r2
 564:..\src\system/timer.c ****     {
 1435              		.loc 1 564 0
 1436 000a 9142     		cmp	r1, r2
 1437 000c 20D2     		bcs	.L89
 564:..\src\system/timer.c ****     {
 1438              		.loc 1 564 0 is_stmt 0 discriminator 1
 1439 000e FF2A     		cmp	r2, #255
 1440 0010 1ED0     		beq	.L89
 570:..\src\system/timer.c **** 
 1441              		.loc 1 570 0 is_stmt 1
 1442 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 1443              	.LVL134:
 1444 0016 0190     		str	r0, [sp, #4]
 1445              	.LVL135:
 572:..\src\system/timer.c ****     {
 1446              		.loc 1 572 0
 1447 0018 0025     		movs	r5, #0
 1448 001a 14E0     		b	.L91
 1449              	.LVL136:
 1450              	.L93:
 1451              	.LBB3:
 574:..\src\system/timer.c ****         /* Stop the timer only for the specified ID range. */
 1452              		.loc 1 574 0
 1453 001c 6A00     		lsls	r2, r5, #1
 1454 001e 5219     		adds	r2, r2, r5
 1455 0020 9100     		lsls	r1, r2, #2
 1456 0022 BA23     		movs	r3, #186
 1457 0024 5B00     		lsls	r3, r3, #1
 1458 0026 7343     		muls	r3, r6
 1459 0028 CB18     		adds	r3, r1, r3
 1460 002a 0A4A     		ldr	r2, .L94
 1461 002c D318     		adds	r3, r2, r3
 1462 002e 9B7B     		ldrb	r3, [r3, #14]
 1463 0030 DBB2     		uxtb	r3, r3
 1464              	.LVL137:
 576:..\src\system/timer.c ****         {
 1465              		.loc 1 576 0
 1466 0032 9F42     		cmp	r7, r3
 1467 0034 05D8     		bhi	.L92
 576:..\src\system/timer.c ****         {
 1468              		.loc 1 576 0 is_stmt 0 discriminator 1
 1469 0036 9C42     		cmp	r4, r3
 1470 0038 03D3     		bcc	.L92
 578:..\src\system/timer.c ****         }
 1471              		.loc 1 578 0 is_stmt 1
 1472 003a 2900     		movs	r1, r5
 1473 003c 3000     		movs	r0, r6
 1474 003e FFF7FEFF 		bl	timer_stop_internal
 1475              	.LVL138:
 1476              	.L92:
ARM GAS  e:\temp\ccrFbtw8.s 			page 43


 1477              	.LBE3:
 572:..\src\system/timer.c ****     {
 1478              		.loc 1 572 0 discriminator 2
 1479 0042 0135     		adds	r5, r5, #1
 1480              	.LVL139:
 1481 0044 EDB2     		uxtb	r5, r5
 1482              	.LVL140:
 1483              	.L91:
 572:..\src\system/timer.c ****     {
 1484              		.loc 1 572 0 is_stmt 0 discriminator 1
 1485 0046 1E2D     		cmp	r5, #30
 1486 0048 E8D9     		bls	.L93
 583:..\src\system/timer.c **** }
 1487              		.loc 1 583 0 is_stmt 1
 1488 004a 0198     		ldr	r0, [sp, #4]
 1489 004c FFF7FEFF 		bl	CyExitCriticalSection
 1490              	.LVL141:
 1491              	.L89:
 584:..\src\system/timer.c **** 
 1492              		.loc 1 584 0
 1493 0050 03B0     		add	sp, sp, #12
 1494              		@ sp needed
 1495 0052 F0BD     		pop	{r4, r5, r6, r7, pc}
 1496              	.L95:
 1497              		.align	2
 1498              	.L94:
 1499 0054 00000000 		.word	.LANCHOR0
 1500              		.cfi_endproc
 1501              	.LFE46:
 1502              		.size	timer_stop_range, .-timer_stop_range
 1503              		.section	.text.timer_is_running,"ax",%progbits
 1504              		.align	2
 1505              		.global	timer_is_running
 1506              		.code	16
 1507              		.thumb_func
 1508              		.type	timer_is_running, %function
 1509              	timer_is_running:
 1510              	.LFB47:
 587:..\src\system/timer.c ****     uint8_t index;
 1511              		.loc 1 587 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 0
 1514              		@ frame_needed = 0, uses_anonymous_args = 0
 1515              	.LVL142:
 1516 0000 10B5     		push	{r4, lr}
 1517              		.cfi_def_cfa_offset 8
 1518              		.cfi_offset 4, -8
 1519              		.cfi_offset 14, -4
 590:..\src\system/timer.c ****     if (index != TIMER_INVALID_INDEX)
 1520              		.loc 1 590 0
 1521 0002 FFF7FEFF 		bl	timer_get_index
 1522              	.LVL143:
 591:..\src\system/timer.c ****     {
 1523              		.loc 1 591 0
 1524 0006 FF28     		cmp	r0, #255
 1525 0008 01D0     		beq	.L98
 593:..\src\system/timer.c ****     }
ARM GAS  e:\temp\ccrFbtw8.s 			page 44


 1526              		.loc 1 593 0
 1527 000a 0120     		movs	r0, #1
 1528              	.LVL144:
 1529 000c 00E0     		b	.L97
 1530              	.LVL145:
 1531              	.L98:
 596:..\src\system/timer.c **** }
 1532              		.loc 1 596 0
 1533 000e 0020     		movs	r0, #0
 1534              	.LVL146:
 1535              	.L97:
 597:..\src\system/timer.c **** 
 1536              		.loc 1 597 0
 1537              		@ sp needed
 1538 0010 10BD     		pop	{r4, pc}
 1539              		.cfi_endproc
 1540              	.LFE47:
 1541              		.size	timer_is_running, .-timer_is_running
 1542 0012 C046     		.section	.text.timer_num_active,"ax",%progbits
 1543              		.align	2
 1544              		.global	timer_num_active
 1545              		.code	16
 1546              		.thumb_func
 1547              		.type	timer_num_active, %function
 1548              	timer_num_active:
 1549              	.LFB48:
 600:..\src\system/timer.c ****     return gl_num_active[instance];
 1550              		.loc 1 600 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 0
 1553              		@ frame_needed = 0, uses_anonymous_args = 0
 1554              		@ link register save eliminated.
 1555              	.LVL147:
 601:..\src\system/timer.c **** }
 1556              		.loc 1 601 0
 1557 0000 024B     		ldr	r3, .L100
 1558 0002 1818     		adds	r0, r3, r0
 1559              	.LVL148:
 1560 0004 6C23     		movs	r3, #108
 1561 0006 C05C     		ldrb	r0, [r0, r3]
 1562 0008 C0B2     		uxtb	r0, r0
 602:..\src\system/timer.c **** 
 1563              		.loc 1 602 0
 1564              		@ sp needed
 1565 000a 7047     		bx	lr
 1566              	.L101:
 1567              		.align	2
 1568              	.L100:
 1569 000c 80020000 		.word	.LANCHOR1
 1570              		.cfi_endproc
 1571              	.LFE48:
 1572              		.size	timer_num_active, .-timer_num_active
 1573              		.global	__aeabi_uidiv
 1574              		.section	.text.timer_get_count,"ax",%progbits
 1575              		.align	2
 1576              		.global	timer_get_count
 1577              		.code	16
ARM GAS  e:\temp\ccrFbtw8.s 			page 45


 1578              		.thumb_func
 1579              		.type	timer_get_count, %function
 1580              	timer_get_count:
 1581              	.LFB49:
 605:..\src\system/timer.c ****     uint8_t index, state;
 1582              		.loc 1 605 0
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 0
 1585              		@ frame_needed = 0, uses_anonymous_args = 0
 1586              	.LVL149:
 1587 0000 70B5     		push	{r4, r5, r6, lr}
 1588              		.cfi_def_cfa_offset 16
 1589              		.cfi_offset 4, -16
 1590              		.cfi_offset 5, -12
 1591              		.cfi_offset 6, -8
 1592              		.cfi_offset 14, -4
 1593 0002 0500     		movs	r5, r0
 1594 0004 0E00     		movs	r6, r1
 1595              	.LVL150:
 610:..\src\system/timer.c **** 
 1596              		.loc 1 610 0
 1597 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1598              	.LVL151:
 1599 000a 0400     		movs	r4, r0
 1600              	.LVL152:
 612:..\src\system/timer.c ****     if(index != TIMER_INVALID_INDEX)
 1601              		.loc 1 612 0
 1602 000c 3100     		movs	r1, r6
 1603 000e 2800     		movs	r0, r5
 1604 0010 FFF7FEFF 		bl	timer_get_index
 1605              	.LVL153:
 613:..\src\system/timer.c ****     {
 1606              		.loc 1 613 0
 1607 0014 FF28     		cmp	r0, #255
 1608 0016 1CD0     		beq	.L104
 1609              	.LBB4:
 616:..\src\system/timer.c **** 
 1610              		.loc 1 616 0
 1611 0018 4300     		lsls	r3, r0, #1
 1612 001a 1818     		adds	r0, r3, r0
 1613              	.LVL154:
 1614 001c 8300     		lsls	r3, r0, #2
 1615 001e BA20     		movs	r0, #186
 1616 0020 4000     		lsls	r0, r0, #1
 1617 0022 6843     		muls	r0, r5
 1618 0024 1818     		adds	r0, r3, r0
 1619 0026 0F4B     		ldr	r3, .L106
 1620 0028 1818     		adds	r0, r3, r0
 1621 002a 4668     		ldr	r6, [r0, #4]
 1622              	.LVL155:
 618:..\src\system/timer.c ****         if (temp_count > count)
 1623              		.loc 1 618 0
 1624 002c 7223     		movs	r3, #114
 1625 002e 0E4A     		ldr	r2, .L106+4
 1626 0030 D55A     		ldrh	r5, [r2, r3]
 1627 0032 ADB2     		uxth	r5, r5
 1628 0034 FFF7FEFF 		bl	hw_timer_get_count
ARM GAS  e:\temp\ccrFbtw8.s 			page 46


 1629              	.LVL156:
 1630 0038 0100     		movs	r1, r0
 1631 003a 2800     		movs	r0, r5
 1632 003c FFF7FEFF 		bl	hw_timer_get_tick_interval
 1633              	.LVL157:
 619:..\src\system/timer.c ****         {
 1634              		.loc 1 619 0
 1635 0040 8642     		cmp	r6, r0
 1636 0042 08D9     		bls	.L105
 621:..\src\system/timer.c ****         }
 1637              		.loc 1 621 0
 1638 0044 301A     		subs	r0, r6, r0
 1639              	.LVL158:
 1640 0046 074B     		ldr	r3, .L106
 1641 0048 1988     		ldrh	r1, [r3]
 1642 004a FFF7FEFF 		bl	__aeabi_uidiv
 1643              	.LVL159:
 1644 004e 0500     		movs	r5, r0
 1645              	.LVL160:
 1646 0050 02E0     		b	.L103
 1647              	.LVL161:
 1648              	.L104:
 1649              	.LBE4:
 607:..\src\system/timer.c **** 
 1650              		.loc 1 607 0
 1651 0052 0025     		movs	r5, #0
 1652 0054 00E0     		b	.L103
 1653              	.LVL162:
 1654              	.L105:
 1655              	.LBB5:
 625:..\src\system/timer.c ****         }
 1656              		.loc 1 625 0
 1657 0056 0025     		movs	r5, #0
 1658              	.LVL163:
 1659              	.L103:
 1660              	.LBE5:
 633:..\src\system/timer.c **** 
 1661              		.loc 1 633 0
 1662 0058 2000     		movs	r0, r4
 1663 005a FFF7FEFF 		bl	CyExitCriticalSection
 1664              	.LVL164:
 635:..\src\system/timer.c **** }
 1665              		.loc 1 635 0
 1666 005e A8B2     		uxth	r0, r5
 636:..\src\system/timer.c **** 
 1667              		.loc 1 636 0
 1668              		@ sp needed
 1669              	.LVL165:
 1670              	.LVL166:
 1671 0060 70BD     		pop	{r4, r5, r6, pc}
 1672              	.L107:
 1673 0062 C046     		.align	2
 1674              	.L106:
 1675 0064 00000000 		.word	.LANCHOR0
 1676 0068 80020000 		.word	.LANCHOR1
 1677              		.cfi_endproc
 1678              	.LFE49:
ARM GAS  e:\temp\ccrFbtw8.s 			page 47


 1679              		.size	timer_get_count, .-timer_get_count
 1680              		.section	.text.timer_get_multiplier,"ax",%progbits
 1681              		.align	2
 1682              		.global	timer_get_multiplier
 1683              		.code	16
 1684              		.thumb_func
 1685              		.type	timer_get_multiplier, %function
 1686              	timer_get_multiplier:
 1687              	.LFB50:
 639:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 1688              		.loc 1 639 0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 1692              		@ link register save eliminated.
 641:..\src\system/timer.c **** #else
 1693              		.loc 1 641 0
 1694 0000 014B     		ldr	r3, .L109
 1695 0002 1888     		ldrh	r0, [r3]
 646:..\src\system/timer.c **** 
 1696              		.loc 1 646 0
 1697              		@ sp needed
 1698 0004 7047     		bx	lr
 1699              	.L110:
 1700 0006 C046     		.align	2
 1701              	.L109:
 1702 0008 00000000 		.word	.LANCHOR0
 1703              		.cfi_endproc
 1704              	.LFE50:
 1705              		.size	timer_get_multiplier, .-timer_get_multiplier
 1706              		.section	.text.timer_enter_sleep,"ax",%progbits
 1707              		.align	2
 1708              		.global	timer_enter_sleep
 1709              		.code	16
 1710              		.thumb_func
 1711              		.type	timer_enter_sleep, %function
 1712              	timer_enter_sleep:
 1713              	.LFB51:
 649:..\src\system/timer.c **** #if (TIMER_TYPE == TIMER_TYPE_WDT)
 1714              		.loc 1 649 0
 1715              		.cfi_startproc
 1716              		@ args = 0, pretend = 0, frame = 0
 1717              		@ frame_needed = 0, uses_anonymous_args = 0
 1718 0000 10B5     		push	{r4, lr}
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 4, -8
 1721              		.cfi_offset 14, -4
 651:..\src\system/timer.c ****     {
 1722              		.loc 1 651 0
 1723 0002 6E23     		movs	r3, #110
 1724 0004 084A     		ldr	r2, .L113
 1725 0006 D35C     		ldrb	r3, [r2, r3]
 1726 0008 002B     		cmp	r3, #0
 1727 000a 0CD0     		beq	.L111
 654:..\src\system/timer.c **** #endif /* (TIMER_TICKLESS_ENABLE != 0) */
 1728              		.loc 1 654 0
 1729 000c 074B     		ldr	r3, .L113+4
ARM GAS  e:\temp\ccrFbtw8.s 			page 48


 1730 000e 1B6C     		ldr	r3, [r3, #64]
 1731 0010 1B04     		lsls	r3, r3, #16
 1732 0012 1B0C     		lsrs	r3, r3, #16
 1733 0014 7022     		movs	r2, #112
 1734 0016 0449     		ldr	r1, .L113
 1735 0018 8A5A     		ldrh	r2, [r1, r2]
 1736 001a 92B2     		uxth	r2, r2
 1737 001c 9342     		cmp	r3, r2
 1738 001e 02D0     		beq	.L111
 658:..\src\system/timer.c ****         }        
 1739              		.loc 1 658 0
 1740 0020 3220     		movs	r0, #50
 1741 0022 FFF7FEFF 		bl	CyDelayUs
 1742              	.LVL167:
 1743              	.L111:
 662:..\src\system/timer.c **** 
 1744              		.loc 1 662 0
 1745              		@ sp needed
 1746 0026 10BD     		pop	{r4, pc}
 1747              	.L114:
 1748              		.align	2
 1749              	.L113:
 1750 0028 80020000 		.word	.LANCHOR1
 1751 002c 00000340 		.word	1073938432
 1752              		.cfi_endproc
 1753              	.LFE51:
 1754              		.size	timer_enter_sleep, .-timer_enter_sleep
 1755              		.bss
 1756              		.align	2
 1757              		.set	.LANCHOR0,. + 0
 1758              		.set	.LANCHOR1,. + 640
 1759              		.type	gl_multiplier, %object
 1760              		.size	gl_multiplier, 2
 1761              	gl_multiplier:
 1762 0000 0000     		.space	2
 1763 0002 0000     		.space	2
 1764              		.type	gl_timer_handle, %object
 1765              		.size	gl_timer_handle, 744
 1766              	gl_timer_handle:
 1767 0004 00000000 		.space	744
 1767      00000000 
 1767      00000000 
 1767      00000000 
 1767      00000000 
 1768              		.type	gl_num_active, %object
 1769              		.size	gl_num_active, 2
 1770              	gl_num_active:
 1771 02ec 0000     		.space	2
 1772              		.type	gl_total_active, %object
 1773              		.size	gl_total_active, 1
 1774              	gl_total_active:
 1775 02ee 00       		.space	1
 1776              		.type	gl_is_callback, %object
 1777              		.size	gl_is_callback, 1
 1778              	gl_is_callback:
 1779 02ef 00       		.space	1
 1780              		.type	gl_match, %object
ARM GAS  e:\temp\ccrFbtw8.s 			page 49


 1781              		.size	gl_match, 2
 1782              	gl_match:
 1783 02f0 0000     		.space	2
 1784              		.type	gl_start_tick, %object
 1785              		.size	gl_start_tick, 2
 1786              	gl_start_tick:
 1787 02f2 0000     		.space	2
 1788              		.type	gl_tick_time, %object
 1789              		.size	gl_tick_time, 2
 1790              	gl_tick_time:
 1791 02f4 0000     		.space	2
 1792              		.text
 1793              	.Letext0:
 1794              		.file 2 "e:\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\inc
 1795              		.file 3 "e:\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.1\\arm-none-eabi\\inc
 1796              		.file 4 "..\\src\\system\\ccg5_regs.h"
 1797              		.file 5 "..\\src\\system\\timer.h"
 1798              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1799              		.section	.debug_info,"",%progbits
 1800              	.Ldebug_info0:
 1801 0000 0F130000 		.4byte	0x130f
 1802 0004 0400     		.2byte	0x4
 1803 0006 00000000 		.4byte	.Ldebug_abbrev0
 1804 000a 04       		.byte	0x4
 1805 000b 01       		.uleb128 0x1
 1806 000c E0050000 		.4byte	.LASF203
 1807 0010 0C       		.byte	0xc
 1808 0011 11090000 		.4byte	.LASF204
 1809 0015 B4020000 		.4byte	.LASF205
 1810 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1811 001d 00000000 		.4byte	0
 1812 0021 00000000 		.4byte	.Ldebug_line0
 1813 0025 02       		.uleb128 0x2
 1814 0026 DE000000 		.4byte	.LASF0
 1815 002a 02       		.byte	0x2
 1816 002b 1B       		.byte	0x1b
 1817 002c 30000000 		.4byte	0x30
 1818 0030 03       		.uleb128 0x3
 1819 0031 01       		.byte	0x1
 1820 0032 06       		.byte	0x6
 1821 0033 1D010000 		.4byte	.LASF2
 1822 0037 02       		.uleb128 0x2
 1823 0038 65000000 		.4byte	.LASF1
 1824 003c 02       		.byte	0x2
 1825 003d 1D       		.byte	0x1d
 1826 003e 42000000 		.4byte	0x42
 1827 0042 03       		.uleb128 0x3
 1828 0043 01       		.byte	0x1
 1829 0044 08       		.byte	0x8
 1830 0045 BB060000 		.4byte	.LASF3
 1831 0049 03       		.uleb128 0x3
 1832 004a 02       		.byte	0x2
 1833 004b 05       		.byte	0x5
 1834 004c CD010000 		.4byte	.LASF4
 1835 0050 02       		.uleb128 0x2
 1836 0051 1F080000 		.4byte	.LASF5
 1837 0055 02       		.byte	0x2
ARM GAS  e:\temp\ccrFbtw8.s 			page 50


 1838 0056 2B       		.byte	0x2b
 1839 0057 5B000000 		.4byte	0x5b
 1840 005b 03       		.uleb128 0x3
 1841 005c 02       		.byte	0x2
 1842 005d 07       		.byte	0x7
 1843 005e 1A020000 		.4byte	.LASF6
 1844 0062 03       		.uleb128 0x3
 1845 0063 04       		.byte	0x4
 1846 0064 05       		.byte	0x5
 1847 0065 98010000 		.4byte	.LASF7
 1848 0069 02       		.uleb128 0x2
 1849 006a 5D020000 		.4byte	.LASF8
 1850 006e 02       		.byte	0x2
 1851 006f 41       		.byte	0x41
 1852 0070 74000000 		.4byte	0x74
 1853 0074 03       		.uleb128 0x3
 1854 0075 04       		.byte	0x4
 1855 0076 07       		.byte	0x7
 1856 0077 70030000 		.4byte	.LASF9
 1857 007b 03       		.uleb128 0x3
 1858 007c 08       		.byte	0x8
 1859 007d 05       		.byte	0x5
 1860 007e 0F010000 		.4byte	.LASF10
 1861 0082 03       		.uleb128 0x3
 1862 0083 08       		.byte	0x8
 1863 0084 07       		.byte	0x7
 1864 0085 A3000000 		.4byte	.LASF11
 1865 0089 04       		.uleb128 0x4
 1866 008a 04       		.byte	0x4
 1867 008b 05       		.byte	0x5
 1868 008c 696E7400 		.ascii	"int\000"
 1869 0090 03       		.uleb128 0x3
 1870 0091 04       		.byte	0x4
 1871 0092 07       		.byte	0x7
 1872 0093 47030000 		.4byte	.LASF12
 1873 0097 02       		.uleb128 0x2
 1874 0098 50080000 		.4byte	.LASF13
 1875 009c 03       		.byte	0x3
 1876 009d 14       		.byte	0x14
 1877 009e 25000000 		.4byte	0x25
 1878 00a2 02       		.uleb128 0x2
 1879 00a3 A9080000 		.4byte	.LASF14
 1880 00a7 03       		.byte	0x3
 1881 00a8 18       		.byte	0x18
 1882 00a9 37000000 		.4byte	0x37
 1883 00ad 02       		.uleb128 0x2
 1884 00ae DF010000 		.4byte	.LASF15
 1885 00b2 03       		.byte	0x3
 1886 00b3 24       		.byte	0x24
 1887 00b4 50000000 		.4byte	0x50
 1888 00b8 02       		.uleb128 0x2
 1889 00b9 77080000 		.4byte	.LASF16
 1890 00bd 03       		.byte	0x3
 1891 00be 30       		.byte	0x30
 1892 00bf 69000000 		.4byte	0x69
 1893 00c3 03       		.uleb128 0x3
 1894 00c4 04       		.byte	0x4
ARM GAS  e:\temp\ccrFbtw8.s 			page 51


 1895 00c5 04       		.byte	0x4
 1896 00c6 B5050000 		.4byte	.LASF17
 1897 00ca 03       		.uleb128 0x3
 1898 00cb 08       		.byte	0x8
 1899 00cc 04       		.byte	0x4
 1900 00cd F0010000 		.4byte	.LASF18
 1901 00d1 03       		.uleb128 0x3
 1902 00d2 01       		.byte	0x1
 1903 00d3 08       		.byte	0x8
 1904 00d4 E0070000 		.4byte	.LASF19
 1905 00d8 03       		.uleb128 0x3
 1906 00d9 08       		.byte	0x8
 1907 00da 04       		.byte	0x4
 1908 00db D4070000 		.4byte	.LASF20
 1909 00df 03       		.uleb128 0x3
 1910 00e0 04       		.byte	0x4
 1911 00e1 07       		.byte	0x7
 1912 00e2 CC040000 		.4byte	.LASF21
 1913 00e6 05       		.uleb128 0x5
 1914 00e7 B8000000 		.4byte	0xb8
 1915 00eb 06       		.uleb128 0x6
 1916 00ec E6000000 		.4byte	0xe6
 1917 00f0 FB000000 		.4byte	0xfb
 1918 00f4 07       		.uleb128 0x7
 1919 00f5 DF000000 		.4byte	0xdf
 1920 00f9 07       		.byte	0x7
 1921 00fa 00       		.byte	0
 1922 00fb 06       		.uleb128 0x6
 1923 00fc E6000000 		.4byte	0xe6
 1924 0100 0B010000 		.4byte	0x10b
 1925 0104 07       		.uleb128 0x7
 1926 0105 DF000000 		.4byte	0xdf
 1927 0109 01       		.byte	0x1
 1928 010a 00       		.byte	0
 1929 010b 05       		.uleb128 0x5
 1930 010c A2000000 		.4byte	0xa2
 1931 0110 05       		.uleb128 0x5
 1932 0111 AD000000 		.4byte	0xad
 1933 0115 06       		.uleb128 0x6
 1934 0116 0B010000 		.4byte	0x10b
 1935 011a 25010000 		.4byte	0x125
 1936 011e 07       		.uleb128 0x7
 1937 011f DF000000 		.4byte	0xdf
 1938 0123 01       		.byte	0x1
 1939 0124 00       		.byte	0
 1940 0125 06       		.uleb128 0x6
 1941 0126 E6000000 		.4byte	0xe6
 1942 012a 35010000 		.4byte	0x135
 1943 012e 07       		.uleb128 0x7
 1944 012f DF000000 		.4byte	0xdf
 1945 0133 02       		.byte	0x2
 1946 0134 00       		.byte	0
 1947 0135 06       		.uleb128 0x6
 1948 0136 E6000000 		.4byte	0xe6
 1949 013a 45010000 		.4byte	0x145
 1950 013e 07       		.uleb128 0x7
 1951 013f DF000000 		.4byte	0xdf
ARM GAS  e:\temp\ccrFbtw8.s 			page 52


 1952 0143 05       		.byte	0x5
 1953 0144 00       		.byte	0
 1954 0145 08       		.uleb128 0x8
 1955 0146 1C0F     		.2byte	0xf1c
 1956 0148 04       		.byte	0x4
 1957 0149 9E       		.byte	0x9e
 1958 014a CA020000 		.4byte	0x2ca
 1959 014e 09       		.uleb128 0x9
 1960 014f 18050000 		.4byte	.LASF22
 1961 0153 04       		.byte	0x4
 1962 0154 9F       		.byte	0x9f
 1963 0155 E6000000 		.4byte	0xe6
 1964 0159 00       		.byte	0
 1965 015a 09       		.uleb128 0x9
 1966 015b 7B000000 		.4byte	.LASF23
 1967 015f 04       		.byte	0x4
 1968 0160 A0       		.byte	0xa0
 1969 0161 E6000000 		.4byte	0xe6
 1970 0165 04       		.byte	0x4
 1971 0166 09       		.uleb128 0x9
 1972 0167 C1080000 		.4byte	.LASF24
 1973 016b 04       		.byte	0x4
 1974 016c A1       		.byte	0xa1
 1975 016d E6000000 		.4byte	0xe6
 1976 0171 08       		.byte	0x8
 1977 0172 09       		.uleb128 0x9
 1978 0173 57080000 		.4byte	.LASF25
 1979 0177 04       		.byte	0x4
 1980 0178 A2       		.byte	0xa2
 1981 0179 E6000000 		.4byte	0xe6
 1982 017d 0C       		.byte	0xc
 1983 017e 09       		.uleb128 0x9
 1984 017f 76050000 		.4byte	.LASF26
 1985 0183 04       		.byte	0x4
 1986 0184 A3       		.byte	0xa3
 1987 0185 E6000000 		.4byte	0xe6
 1988 0189 10       		.byte	0x10
 1989 018a 09       		.uleb128 0x9
 1990 018b 24050000 		.4byte	.LASF27
 1991 018f 04       		.byte	0x4
 1992 0190 A4       		.byte	0xa4
 1993 0191 E6000000 		.4byte	0xe6
 1994 0195 14       		.byte	0x14
 1995 0196 09       		.uleb128 0x9
 1996 0197 3B050000 		.4byte	.LASF28
 1997 019b 04       		.byte	0x4
 1998 019c A5       		.byte	0xa5
 1999 019d E6000000 		.4byte	0xe6
 2000 01a1 18       		.byte	0x18
 2001 01a2 09       		.uleb128 0x9
 2002 01a3 2F010000 		.4byte	.LASF29
 2003 01a7 04       		.byte	0x4
 2004 01a8 A6       		.byte	0xa6
 2005 01a9 E6000000 		.4byte	0xe6
 2006 01ad 1C       		.byte	0x1c
 2007 01ae 09       		.uleb128 0x9
 2008 01af 3E010000 		.4byte	.LASF30
ARM GAS  e:\temp\ccrFbtw8.s 			page 53


 2009 01b3 04       		.byte	0x4
 2010 01b4 A7       		.byte	0xa7
 2011 01b5 E6000000 		.4byte	0xe6
 2012 01b9 20       		.byte	0x20
 2013 01ba 09       		.uleb128 0x9
 2014 01bb CB000000 		.4byte	.LASF31
 2015 01bf 04       		.byte	0x4
 2016 01c0 A8       		.byte	0xa8
 2017 01c1 E6000000 		.4byte	0xe6
 2018 01c5 24       		.byte	0x24
 2019 01c6 09       		.uleb128 0x9
 2020 01c7 34000000 		.4byte	.LASF32
 2021 01cb 04       		.byte	0x4
 2022 01cc A9       		.byte	0xa9
 2023 01cd E6000000 		.4byte	0xe6
 2024 01d1 28       		.byte	0x28
 2025 01d2 09       		.uleb128 0x9
 2026 01d3 10080000 		.4byte	.LASF33
 2027 01d7 04       		.byte	0x4
 2028 01d8 AA       		.byte	0xaa
 2029 01d9 E6000000 		.4byte	0xe6
 2030 01dd 2C       		.byte	0x2c
 2031 01de 09       		.uleb128 0x9
 2032 01df 02090000 		.4byte	.LASF34
 2033 01e3 04       		.byte	0x4
 2034 01e4 AB       		.byte	0xab
 2035 01e5 E6000000 		.4byte	0xe6
 2036 01e9 30       		.byte	0x30
 2037 01ea 09       		.uleb128 0x9
 2038 01eb 6A040000 		.4byte	.LASF35
 2039 01ef 04       		.byte	0x4
 2040 01f0 AC       		.byte	0xac
 2041 01f1 E6000000 		.4byte	0xe6
 2042 01f5 34       		.byte	0x34
 2043 01f6 09       		.uleb128 0x9
 2044 01f7 EA060000 		.4byte	.LASF36
 2045 01fb 04       		.byte	0x4
 2046 01fc AD       		.byte	0xad
 2047 01fd E6000000 		.4byte	0xe6
 2048 0201 38       		.byte	0x38
 2049 0202 09       		.uleb128 0x9
 2050 0203 44080000 		.4byte	.LASF37
 2051 0207 04       		.byte	0x4
 2052 0208 AE       		.byte	0xae
 2053 0209 E6000000 		.4byte	0xe6
 2054 020d 3C       		.byte	0x3c
 2055 020e 09       		.uleb128 0x9
 2056 020f BB050000 		.4byte	.LASF38
 2057 0213 04       		.byte	0x4
 2058 0214 AF       		.byte	0xaf
 2059 0215 E6000000 		.4byte	0xe6
 2060 0219 40       		.byte	0x40
 2061 021a 09       		.uleb128 0x9
 2062 021b 06080000 		.4byte	.LASF39
 2063 021f 04       		.byte	0x4
 2064 0220 B0       		.byte	0xb0
 2065 0221 E6000000 		.4byte	0xe6
ARM GAS  e:\temp\ccrFbtw8.s 			page 54


 2066 0225 44       		.byte	0x44
 2067 0226 09       		.uleb128 0x9
 2068 0227 D5090000 		.4byte	.LASF40
 2069 022b 04       		.byte	0x4
 2070 022c B1       		.byte	0xb1
 2071 022d E6000000 		.4byte	0xe6
 2072 0231 48       		.byte	0x48
 2073 0232 09       		.uleb128 0x9
 2074 0233 4D040000 		.4byte	.LASF41
 2075 0237 04       		.byte	0x4
 2076 0238 B2       		.byte	0xb2
 2077 0239 E6000000 		.4byte	0xe6
 2078 023d 4C       		.byte	0x4c
 2079 023e 09       		.uleb128 0x9
 2080 023f 19070000 		.4byte	.LASF42
 2081 0243 04       		.byte	0x4
 2082 0244 B3       		.byte	0xb3
 2083 0245 E6000000 		.4byte	0xe6
 2084 0249 50       		.byte	0x50
 2085 024a 09       		.uleb128 0x9
 2086 024b FA060000 		.4byte	.LASF43
 2087 024f 04       		.byte	0x4
 2088 0250 B4       		.byte	0xb4
 2089 0251 E6000000 		.4byte	0xe6
 2090 0255 54       		.byte	0x54
 2091 0256 09       		.uleb128 0x9
 2092 0257 67080000 		.4byte	.LASF44
 2093 025b 04       		.byte	0x4
 2094 025c B5       		.byte	0xb5
 2095 025d E6000000 		.4byte	0xe6
 2096 0261 58       		.byte	0x58
 2097 0262 09       		.uleb128 0x9
 2098 0263 EE040000 		.4byte	.LASF45
 2099 0267 04       		.byte	0x4
 2100 0268 B6       		.byte	0xb6
 2101 0269 DB020000 		.4byte	0x2db
 2102 026d 5C       		.byte	0x5c
 2103 026e 0A       		.uleb128 0xa
 2104 026f 68020000 		.4byte	.LASF46
 2105 0273 04       		.byte	0x4
 2106 0274 B7       		.byte	0xb7
 2107 0275 E6000000 		.4byte	0xe6
 2108 0279 000F     		.2byte	0xf00
 2109 027b 0A       		.uleb128 0xa
 2110 027c 75020000 		.4byte	.LASF47
 2111 0280 04       		.byte	0x4
 2112 0281 B8       		.byte	0xb8
 2113 0282 E6000000 		.4byte	0xe6
 2114 0286 040F     		.2byte	0xf04
 2115 0288 0A       		.uleb128 0xa
 2116 0289 8D070000 		.4byte	.LASF48
 2117 028d 04       		.byte	0x4
 2118 028e B9       		.byte	0xb9
 2119 028f E6000000 		.4byte	0xe6
 2120 0293 080F     		.2byte	0xf08
 2121 0295 0A       		.uleb128 0xa
 2122 0296 AB090000 		.4byte	.LASF49
ARM GAS  e:\temp\ccrFbtw8.s 			page 55


 2123 029a 04       		.byte	0x4
 2124 029b BA       		.byte	0xba
 2125 029c E6000000 		.4byte	0xe6
 2126 02a0 0C0F     		.2byte	0xf0c
 2127 02a2 0A       		.uleb128 0xa
 2128 02a3 B9090000 		.4byte	.LASF50
 2129 02a7 04       		.byte	0x4
 2130 02a8 BB       		.byte	0xbb
 2131 02a9 E6000000 		.4byte	0xe6
 2132 02ad 100F     		.2byte	0xf10
 2133 02af 0A       		.uleb128 0xa
 2134 02b0 BA000000 		.4byte	.LASF51
 2135 02b4 04       		.byte	0x4
 2136 02b5 BC       		.byte	0xbc
 2137 02b6 E6000000 		.4byte	0xe6
 2138 02ba 140F     		.2byte	0xf14
 2139 02bc 0A       		.uleb128 0xa
 2140 02bd C7090000 		.4byte	.LASF52
 2141 02c1 04       		.byte	0x4
 2142 02c2 BD       		.byte	0xbd
 2143 02c3 E6000000 		.4byte	0xe6
 2144 02c7 180F     		.2byte	0xf18
 2145 02c9 00       		.byte	0
 2146 02ca 06       		.uleb128 0x6
 2147 02cb E6000000 		.4byte	0xe6
 2148 02cf DB020000 		.4byte	0x2db
 2149 02d3 0B       		.uleb128 0xb
 2150 02d4 DF000000 		.4byte	0xdf
 2151 02d8 A803     		.2byte	0x3a8
 2152 02da 00       		.byte	0
 2153 02db 05       		.uleb128 0x5
 2154 02dc CA020000 		.4byte	0x2ca
 2155 02e0 02       		.uleb128 0x2
 2156 02e1 4D010000 		.4byte	.LASF53
 2157 02e5 04       		.byte	0x4
 2158 02e6 BE       		.byte	0xbe
 2159 02e7 EB020000 		.4byte	0x2eb
 2160 02eb 0C       		.uleb128 0xc
 2161 02ec 04       		.byte	0x4
 2162 02ed 45010000 		.4byte	0x145
 2163 02f1 06       		.uleb128 0x6
 2164 02f2 E6000000 		.4byte	0xe6
 2165 02f6 01030000 		.4byte	0x301
 2166 02fa 07       		.uleb128 0x7
 2167 02fb DF000000 		.4byte	0xdf
 2168 02ff 2E       		.byte	0x2e
 2169 0300 00       		.byte	0
 2170 0301 06       		.uleb128 0x6
 2171 0302 E6000000 		.4byte	0xe6
 2172 0306 11030000 		.4byte	0x311
 2173 030a 07       		.uleb128 0x7
 2174 030b DF000000 		.4byte	0xdf
 2175 030f 1E       		.byte	0x1e
 2176 0310 00       		.byte	0
 2177 0311 0D       		.uleb128 0xd
 2178 0312 00F00F00 		.4byte	0xff000
 2179 0316 04       		.byte	0x4
ARM GAS  e:\temp\ccrFbtw8.s 			page 56


 2180 0317 B102     		.2byte	0x2b1
 2181 0319 B9080000 		.4byte	0x8b9
 2182 031d 0E       		.uleb128 0xe
 2183 031e A0080000 		.4byte	.LASF54
 2184 0322 04       		.byte	0x4
 2185 0323 B202     		.2byte	0x2b2
 2186 0325 E6000000 		.4byte	0xe6
 2187 0329 00       		.byte	0
 2188 032a 0E       		.uleb128 0xe
 2189 032b EE040000 		.4byte	.LASF45
 2190 032f 04       		.byte	0x4
 2191 0330 B302     		.2byte	0x2b3
 2192 0332 B9080000 		.4byte	0x8b9
 2193 0336 04       		.byte	0x4
 2194 0337 0E       		.uleb128 0xe
 2195 0338 04070000 		.4byte	.LASF55
 2196 033c 04       		.byte	0x4
 2197 033d B402     		.2byte	0x2b4
 2198 033f E6000000 		.4byte	0xe6
 2199 0343 1C       		.byte	0x1c
 2200 0344 0E       		.uleb128 0xe
 2201 0345 10020000 		.4byte	.LASF56
 2202 0349 04       		.byte	0x4
 2203 034a B502     		.2byte	0x2b5
 2204 034c E6000000 		.4byte	0xe6
 2205 0350 20       		.byte	0x20
 2206 0351 0E       		.uleb128 0xe
 2207 0352 51000000 		.4byte	.LASF57
 2208 0356 04       		.byte	0x4
 2209 0357 B602     		.2byte	0x2b6
 2210 0359 E6000000 		.4byte	0xe6
 2211 035d 24       		.byte	0x24
 2212 035e 0E       		.uleb128 0xe
 2213 035f 54030000 		.4byte	.LASF58
 2214 0363 04       		.byte	0x4
 2215 0364 B702     		.2byte	0x2b7
 2216 0366 E6000000 		.4byte	0xe6
 2217 036a 28       		.byte	0x28
 2218 036b 0E       		.uleb128 0xe
 2219 036c F5040000 		.4byte	.LASF59
 2220 0370 04       		.byte	0x4
 2221 0371 B802     		.2byte	0x2b8
 2222 0373 E6000000 		.4byte	0xe6
 2223 0377 2C       		.byte	0x2c
 2224 0378 0E       		.uleb128 0xe
 2225 0379 49050000 		.4byte	.LASF60
 2226 037d 04       		.byte	0x4
 2227 037e B902     		.2byte	0x2b9
 2228 0380 E6000000 		.4byte	0xe6
 2229 0384 30       		.byte	0x30
 2230 0385 0E       		.uleb128 0xe
 2231 0386 5B000000 		.4byte	.LASF61
 2232 038a 04       		.byte	0x4
 2233 038b BA02     		.2byte	0x2ba
 2234 038d E6000000 		.4byte	0xe6
 2235 0391 34       		.byte	0x34
 2236 0392 0E       		.uleb128 0xe
ARM GAS  e:\temp\ccrFbtw8.s 			page 57


 2237 0393 62030000 		.4byte	.LASF62
 2238 0397 04       		.byte	0x4
 2239 0398 BB02     		.2byte	0x2bb
 2240 039a E6000000 		.4byte	0xe6
 2241 039e 38       		.byte	0x38
 2242 039f 0E       		.uleb128 0xe
 2243 03a0 FC040000 		.4byte	.LASF63
 2244 03a4 04       		.byte	0x4
 2245 03a5 BC02     		.2byte	0x2bc
 2246 03a7 CF080000 		.4byte	0x8cf
 2247 03ab 3C       		.byte	0x3c
 2248 03ac 0F       		.uleb128 0xf
 2249 03ad BD040000 		.4byte	.LASF64
 2250 03b1 04       		.byte	0x4
 2251 03b2 BD02     		.2byte	0x2bd
 2252 03b4 E6000000 		.4byte	0xe6
 2253 03b8 D00F     		.2byte	0xfd0
 2254 03ba 0F       		.uleb128 0xf
 2255 03bb 03050000 		.4byte	.LASF65
 2256 03bf 04       		.byte	0x4
 2257 03c0 BE02     		.2byte	0x2be
 2258 03c2 D4080000 		.4byte	0x8d4
 2259 03c6 D40F     		.2byte	0xfd4
 2260 03c8 0F       		.uleb128 0xf
 2261 03c9 99040000 		.4byte	.LASF66
 2262 03cd 04       		.byte	0x4
 2263 03ce BF02     		.2byte	0x2bf
 2264 03d0 E6000000 		.4byte	0xe6
 2265 03d4 E00F     		.2byte	0xfe0
 2266 03d6 0F       		.uleb128 0xf
 2267 03d7 A2040000 		.4byte	.LASF67
 2268 03db 04       		.byte	0x4
 2269 03dc C002     		.2byte	0x2c0
 2270 03de E6000000 		.4byte	0xe6
 2271 03e2 E40F     		.2byte	0xfe4
 2272 03e4 0F       		.uleb128 0xf
 2273 03e5 AB040000 		.4byte	.LASF68
 2274 03e9 04       		.byte	0x4
 2275 03ea C102     		.2byte	0x2c1
 2276 03ec E6000000 		.4byte	0xe6
 2277 03f0 E80F     		.2byte	0xfe8
 2278 03f2 0F       		.uleb128 0xf
 2279 03f3 B4040000 		.4byte	.LASF69
 2280 03f7 04       		.byte	0x4
 2281 03f8 C202     		.2byte	0x2c2
 2282 03fa E6000000 		.4byte	0xe6
 2283 03fe EC0F     		.2byte	0xfec
 2284 0400 0F       		.uleb128 0xf
 2285 0401 DC080000 		.4byte	.LASF70
 2286 0405 04       		.byte	0x4
 2287 0406 C302     		.2byte	0x2c3
 2288 0408 E6000000 		.4byte	0xe6
 2289 040c F00F     		.2byte	0xff0
 2290 040e 0F       		.uleb128 0xf
 2291 040f 38090000 		.4byte	.LASF71
 2292 0413 04       		.byte	0x4
 2293 0414 C402     		.2byte	0x2c4
ARM GAS  e:\temp\ccrFbtw8.s 			page 58


 2294 0416 E6000000 		.4byte	0xe6
 2295 041a F40F     		.2byte	0xff4
 2296 041c 0F       		.uleb128 0xf
 2297 041d F0080000 		.4byte	.LASF72
 2298 0421 04       		.byte	0x4
 2299 0422 C502     		.2byte	0x2c5
 2300 0424 E6000000 		.4byte	0xe6
 2301 0428 F80F     		.2byte	0xff8
 2302 042a 0F       		.uleb128 0xf
 2303 042b F9080000 		.4byte	.LASF73
 2304 042f 04       		.byte	0x4
 2305 0430 C602     		.2byte	0x2c6
 2306 0432 E6000000 		.4byte	0xe6
 2307 0436 FC0F     		.2byte	0xffc
 2308 0438 0F       		.uleb128 0xf
 2309 0439 82030000 		.4byte	.LASF74
 2310 043d 04       		.byte	0x4
 2311 043e C702     		.2byte	0x2c7
 2312 0440 E6000000 		.4byte	0xe6
 2313 0444 0010     		.2byte	0x1000
 2314 0446 0F       		.uleb128 0xf
 2315 0447 0A050000 		.4byte	.LASF75
 2316 044b 04       		.byte	0x4
 2317 044c C802     		.2byte	0x2c8
 2318 044e E6000000 		.4byte	0xe6
 2319 0452 0410     		.2byte	0x1004
 2320 0454 0F       		.uleb128 0xf
 2321 0455 82020000 		.4byte	.LASF76
 2322 0459 04       		.byte	0x4
 2323 045a C902     		.2byte	0x2c9
 2324 045c E6000000 		.4byte	0xe6
 2325 0460 0810     		.2byte	0x1008
 2326 0462 0F       		.uleb128 0xf
 2327 0463 8B020000 		.4byte	.LASF77
 2328 0467 04       		.byte	0x4
 2329 0468 CA02     		.2byte	0x2ca
 2330 046a E6000000 		.4byte	0xe6
 2331 046e 0C10     		.2byte	0x100c
 2332 0470 0F       		.uleb128 0xf
 2333 0471 94020000 		.4byte	.LASF78
 2334 0475 04       		.byte	0x4
 2335 0476 CB02     		.2byte	0x2cb
 2336 0478 E6000000 		.4byte	0xe6
 2337 047c 1010     		.2byte	0x1010
 2338 047e 0F       		.uleb128 0xf
 2339 047f 9D020000 		.4byte	.LASF79
 2340 0483 04       		.byte	0x4
 2341 0484 CC02     		.2byte	0x2cc
 2342 0486 E6000000 		.4byte	0xe6
 2343 048a 1410     		.2byte	0x1014
 2344 048c 0F       		.uleb128 0xf
 2345 048d 11050000 		.4byte	.LASF80
 2346 0491 04       		.byte	0x4
 2347 0492 CD02     		.2byte	0x2cd
 2348 0494 EA080000 		.4byte	0x8ea
 2349 0498 1810     		.2byte	0x1018
 2350 049a 0F       		.uleb128 0xf
ARM GAS  e:\temp\ccrFbtw8.s 			page 59


 2351 049b 80080000 		.4byte	.LASF81
 2352 049f 04       		.byte	0x4
 2353 04a0 CE02     		.2byte	0x2ce
 2354 04a2 E6000000 		.4byte	0xe6
 2355 04a6 D01F     		.2byte	0x1fd0
 2356 04a8 0F       		.uleb128 0xf
 2357 04a9 5C040000 		.4byte	.LASF82
 2358 04ad 04       		.byte	0x4
 2359 04ae CF02     		.2byte	0x2cf
 2360 04b0 EF080000 		.4byte	0x8ef
 2361 04b4 D41F     		.2byte	0x1fd4
 2362 04b6 0F       		.uleb128 0xf
 2363 04b7 41090000 		.4byte	.LASF83
 2364 04bb 04       		.byte	0x4
 2365 04bc D002     		.2byte	0x2d0
 2366 04be E6000000 		.4byte	0xe6
 2367 04c2 E01F     		.2byte	0x1fe0
 2368 04c4 0F       		.uleb128 0xf
 2369 04c5 49090000 		.4byte	.LASF84
 2370 04c9 04       		.byte	0x4
 2371 04ca D102     		.2byte	0x2d1
 2372 04cc E6000000 		.4byte	0xe6
 2373 04d0 E41F     		.2byte	0x1fe4
 2374 04d2 0F       		.uleb128 0xf
 2375 04d3 6F080000 		.4byte	.LASF85
 2376 04d7 04       		.byte	0x4
 2377 04d8 D202     		.2byte	0x2d2
 2378 04da E6000000 		.4byte	0xe6
 2379 04de E81F     		.2byte	0x1fe8
 2380 04e0 0F       		.uleb128 0xf
 2381 04e1 57090000 		.4byte	.LASF86
 2382 04e5 04       		.byte	0x4
 2383 04e6 D302     		.2byte	0x2d3
 2384 04e8 E6000000 		.4byte	0xe6
 2385 04ec EC1F     		.2byte	0x1fec
 2386 04ee 0F       		.uleb128 0xf
 2387 04ef B7030000 		.4byte	.LASF87
 2388 04f3 04       		.byte	0x4
 2389 04f4 D402     		.2byte	0x2d4
 2390 04f6 E6000000 		.4byte	0xe6
 2391 04fa F01F     		.2byte	0x1ff0
 2392 04fc 0F       		.uleb128 0xf
 2393 04fd BF030000 		.4byte	.LASF88
 2394 0501 04       		.byte	0x4
 2395 0502 D502     		.2byte	0x2d5
 2396 0504 E6000000 		.4byte	0xe6
 2397 0508 F41F     		.2byte	0x1ff4
 2398 050a 0F       		.uleb128 0xf
 2399 050b 0B040000 		.4byte	.LASF89
 2400 050f 04       		.byte	0x4
 2401 0510 D602     		.2byte	0x2d6
 2402 0512 E6000000 		.4byte	0xe6
 2403 0516 F81F     		.2byte	0x1ff8
 2404 0518 0F       		.uleb128 0xf
 2405 0519 C7030000 		.4byte	.LASF90
 2406 051d 04       		.byte	0x4
 2407 051e D702     		.2byte	0x2d7
ARM GAS  e:\temp\ccrFbtw8.s 			page 60


 2408 0520 E6000000 		.4byte	0xe6
 2409 0524 FC1F     		.2byte	0x1ffc
 2410 0526 0F       		.uleb128 0xf
 2411 0527 63040000 		.4byte	.LASF91
 2412 052b 04       		.byte	0x4
 2413 052c D802     		.2byte	0x2d8
 2414 052e 05090000 		.4byte	0x905
 2415 0532 0020     		.2byte	0x2000
 2416 0534 0F       		.uleb128 0xf
 2417 0535 9C090000 		.4byte	.LASF92
 2418 0539 04       		.byte	0x4
 2419 053a D902     		.2byte	0x2d9
 2420 053c E6000000 		.4byte	0xe6
 2421 0540 08D0     		.2byte	0xd008
 2422 0542 0F       		.uleb128 0xf
 2423 0543 2D050000 		.4byte	.LASF93
 2424 0547 04       		.byte	0x4
 2425 0548 DA02     		.2byte	0x2da
 2426 054a E6000000 		.4byte	0xe6
 2427 054e 0CD0     		.2byte	0xd00c
 2428 0550 0F       		.uleb128 0xf
 2429 0551 70070000 		.4byte	.LASF94
 2430 0555 04       		.byte	0x4
 2431 0556 DB02     		.2byte	0x2db
 2432 0558 E6000000 		.4byte	0xe6
 2433 055c 10D0     		.2byte	0xd010
 2434 055e 0F       		.uleb128 0xf
 2435 055f DE030000 		.4byte	.LASF95
 2436 0563 04       		.byte	0x4
 2437 0564 DC02     		.2byte	0x2dc
 2438 0566 E6000000 		.4byte	0xe6
 2439 056a 14D0     		.2byte	0xd014
 2440 056c 0F       		.uleb128 0xf
 2441 056d E7000000 		.4byte	.LASF96
 2442 0571 04       		.byte	0x4
 2443 0572 DD02     		.2byte	0x2dd
 2444 0574 E6000000 		.4byte	0xe6
 2445 0578 18D0     		.2byte	0xd018
 2446 057a 0F       		.uleb128 0xf
 2447 057b D1080000 		.4byte	.LASF97
 2448 057f 04       		.byte	0x4
 2449 0580 DE02     		.2byte	0x2de
 2450 0582 E6000000 		.4byte	0xe6
 2451 0586 1CD0     		.2byte	0xd01c
 2452 0588 0F       		.uleb128 0xf
 2453 0589 34050000 		.4byte	.LASF98
 2454 058d 04       		.byte	0x4
 2455 058e DF02     		.2byte	0x2df
 2456 0590 1A090000 		.4byte	0x91a
 2457 0594 20D0     		.2byte	0xd020
 2458 0596 0F       		.uleb128 0xf
 2459 0597 A7060000 		.4byte	.LASF99
 2460 059b 04       		.byte	0x4
 2461 059c E002     		.2byte	0x2e0
 2462 059e E6000000 		.4byte	0xe6
 2463 05a2 00D1     		.2byte	0xd100
 2464 05a4 0F       		.uleb128 0xf
ARM GAS  e:\temp\ccrFbtw8.s 			page 61


 2465 05a5 C5010000 		.4byte	.LASF100
 2466 05a9 04       		.byte	0x4
 2467 05aa E102     		.2byte	0x2e1
 2468 05ac 1F090000 		.4byte	0x91f
 2469 05b0 04D1     		.2byte	0xd104
 2470 05b2 0F       		.uleb128 0xf
 2471 05b3 D9000000 		.4byte	.LASF101
 2472 05b7 04       		.byte	0x4
 2473 05b8 E202     		.2byte	0x2e2
 2474 05ba E6000000 		.4byte	0xe6
 2475 05be 80D1     		.2byte	0xd180
 2476 05c0 0F       		.uleb128 0xf
 2477 05c1 9F060000 		.4byte	.LASF102
 2478 05c5 04       		.byte	0x4
 2479 05c6 E302     		.2byte	0x2e3
 2480 05c8 24090000 		.4byte	0x924
 2481 05cc 84D1     		.2byte	0xd184
 2482 05ce 0F       		.uleb128 0xf
 2483 05cf 9E000000 		.4byte	.LASF103
 2484 05d3 04       		.byte	0x4
 2485 05d4 E402     		.2byte	0x2e4
 2486 05d6 E6000000 		.4byte	0xe6
 2487 05da 00D2     		.2byte	0xd200
 2488 05dc 0F       		.uleb128 0xf
 2489 05dd 3C080000 		.4byte	.LASF104
 2490 05e1 04       		.byte	0x4
 2491 05e2 E502     		.2byte	0x2e5
 2492 05e4 29090000 		.4byte	0x929
 2493 05e8 04D2     		.2byte	0xd204
 2494 05ea 0F       		.uleb128 0xf
 2495 05eb 06000000 		.4byte	.LASF105
 2496 05ef 04       		.byte	0x4
 2497 05f0 E602     		.2byte	0x2e6
 2498 05f2 E6000000 		.4byte	0xe6
 2499 05f6 80D2     		.2byte	0xd280
 2500 05f8 0F       		.uleb128 0xf
 2501 05f9 D7010000 		.4byte	.LASF106
 2502 05fd 04       		.byte	0x4
 2503 05fe E702     		.2byte	0x2e7
 2504 0600 3E090000 		.4byte	0x93e
 2505 0604 84D2     		.2byte	0xd284
 2506 0606 10       		.uleb128 0x10
 2507 0607 69707200 		.ascii	"ipr\000"
 2508 060b 04       		.byte	0x4
 2509 060c E802     		.2byte	0x2e8
 2510 060e 43090000 		.4byte	0x943
 2511 0612 00D4     		.2byte	0xd400
 2512 0614 0F       		.uleb128 0xf
 2513 0615 E8010000 		.4byte	.LASF107
 2514 0619 04       		.byte	0x4
 2515 061a E902     		.2byte	0x2e9
 2516 061c 59090000 		.4byte	0x959
 2517 0620 20D4     		.2byte	0xd420
 2518 0622 0F       		.uleb128 0xf
 2519 0623 B7010000 		.4byte	.LASF108
 2520 0627 04       		.byte	0x4
 2521 0628 EA02     		.2byte	0x2ea
ARM GAS  e:\temp\ccrFbtw8.s 			page 62


 2522 062a E6000000 		.4byte	0xe6
 2523 062e 00DD     		.2byte	0xdd00
 2524 0630 0F       		.uleb128 0xf
 2525 0631 A1030000 		.4byte	.LASF109
 2526 0635 04       		.byte	0x4
 2527 0636 EB02     		.2byte	0x2eb
 2528 0638 E6000000 		.4byte	0xe6
 2529 063c 04DD     		.2byte	0xdd04
 2530 063e 0F       		.uleb128 0xf
 2531 063f F7010000 		.4byte	.LASF110
 2532 0643 04       		.byte	0x4
 2533 0644 EC02     		.2byte	0x2ec
 2534 0646 E6000000 		.4byte	0xe6
 2535 064a 08DD     		.2byte	0xdd08
 2536 064c 0F       		.uleb128 0xf
 2537 064d C6040000 		.4byte	.LASF111
 2538 0651 04       		.byte	0x4
 2539 0652 ED02     		.2byte	0x2ed
 2540 0654 E6000000 		.4byte	0xe6
 2541 0658 0CDD     		.2byte	0xdd0c
 2542 065a 10       		.uleb128 0x10
 2543 065b 73637200 		.ascii	"scr\000"
 2544 065f 04       		.byte	0x4
 2545 0660 EE02     		.2byte	0x2ee
 2546 0662 E6000000 		.4byte	0xe6
 2547 0666 10DD     		.2byte	0xdd10
 2548 0668 10       		.uleb128 0x10
 2549 0669 63637200 		.ascii	"ccr\000"
 2550 066d 04       		.byte	0x4
 2551 066e EF02     		.2byte	0x2ef
 2552 0670 E6000000 		.4byte	0xe6
 2553 0674 14DD     		.2byte	0xdd14
 2554 0676 0F       		.uleb128 0xf
 2555 0677 FF010000 		.4byte	.LASF112
 2556 067b 04       		.byte	0x4
 2557 067c F002     		.2byte	0x2f0
 2558 067e E6000000 		.4byte	0xe6
 2559 0682 18DD     		.2byte	0xdd18
 2560 0684 0F       		.uleb128 0xf
 2561 0685 33040000 		.4byte	.LASF113
 2562 0689 04       		.byte	0x4
 2563 068a F102     		.2byte	0x2f1
 2564 068c E6000000 		.4byte	0xe6
 2565 0690 1CDD     		.2byte	0xdd1c
 2566 0692 0F       		.uleb128 0xf
 2567 0693 39040000 		.4byte	.LASF114
 2568 0697 04       		.byte	0x4
 2569 0698 F202     		.2byte	0x2f2
 2570 069a E6000000 		.4byte	0xe6
 2571 069e 20DD     		.2byte	0xdd20
 2572 06a0 0F       		.uleb128 0xf
 2573 06a1 4B000000 		.4byte	.LASF115
 2574 06a5 04       		.byte	0x4
 2575 06a6 F302     		.2byte	0x2f3
 2576 06a8 E6000000 		.4byte	0xe6
 2577 06ac 24DD     		.2byte	0xdd24
 2578 06ae 0F       		.uleb128 0xf
ARM GAS  e:\temp\ccrFbtw8.s 			page 63


 2579 06af D2060000 		.4byte	.LASF116
 2580 06b3 04       		.byte	0x4
 2581 06b4 F402     		.2byte	0x2f4
 2582 06b6 5E090000 		.4byte	0x95e
 2583 06ba 28DD     		.2byte	0xdd28
 2584 06bc 0F       		.uleb128 0xf
 2585 06bd B2030000 		.4byte	.LASF117
 2586 06c1 04       		.byte	0x4
 2587 06c2 F502     		.2byte	0x2f5
 2588 06c4 E6000000 		.4byte	0xe6
 2589 06c8 30DD     		.2byte	0xdd30
 2590 06ca 0F       		.uleb128 0xf
 2591 06cb DA060000 		.4byte	.LASF118
 2592 06cf 04       		.byte	0x4
 2593 06d0 F602     		.2byte	0x2f6
 2594 06d2 63090000 		.4byte	0x963
 2595 06d6 34DD     		.2byte	0xdd34
 2596 06d8 0F       		.uleb128 0xf
 2597 06d9 41030000 		.4byte	.LASF119
 2598 06dd 04       		.byte	0x4
 2599 06de F702     		.2byte	0x2f7
 2600 06e0 E6000000 		.4byte	0xe6
 2601 06e4 F0DD     		.2byte	0xddf0
 2602 06e6 0F       		.uleb128 0xf
 2603 06e7 29010000 		.4byte	.LASF120
 2604 06eb 04       		.byte	0x4
 2605 06ec F802     		.2byte	0x2f8
 2606 06ee E6000000 		.4byte	0xe6
 2607 06f2 F4DD     		.2byte	0xddf4
 2608 06f4 0F       		.uleb128 0xf
 2609 06f5 5C010000 		.4byte	.LASF121
 2610 06f9 04       		.byte	0x4
 2611 06fa F902     		.2byte	0x2f9
 2612 06fc E6000000 		.4byte	0xe6
 2613 0700 F8DD     		.2byte	0xddf8
 2614 0702 0F       		.uleb128 0xf
 2615 0703 79070000 		.4byte	.LASF122
 2616 0707 04       		.byte	0x4
 2617 0708 FA02     		.2byte	0x2fa
 2618 070a E6000000 		.4byte	0xe6
 2619 070e FCDD     		.2byte	0xddfc
 2620 0710 0F       		.uleb128 0xf
 2621 0711 E2060000 		.4byte	.LASF123
 2622 0715 04       		.byte	0x4
 2623 0716 FB02     		.2byte	0x2fb
 2624 0718 78090000 		.4byte	0x978
 2625 071c 00DE     		.2byte	0xde00
 2626 071e 0F       		.uleb128 0xf
 2627 071f E5070000 		.4byte	.LASF124
 2628 0723 04       		.byte	0x4
 2629 0724 FC02     		.2byte	0x2fc
 2630 0726 E6000000 		.4byte	0xe6
 2631 072a D0DF     		.2byte	0xdfd0
 2632 072c 0F       		.uleb128 0xf
 2633 072d EE070000 		.4byte	.LASF125
 2634 0731 04       		.byte	0x4
 2635 0732 FD02     		.2byte	0x2fd
ARM GAS  e:\temp\ccrFbtw8.s 			page 64


 2636 0734 7D090000 		.4byte	0x97d
 2637 0738 D4DF     		.2byte	0xdfd4
 2638 073a 0F       		.uleb128 0xf
 2639 073b 96060000 		.4byte	.LASF126
 2640 073f 04       		.byte	0x4
 2641 0740 FE02     		.2byte	0x2fe
 2642 0742 E6000000 		.4byte	0xe6
 2643 0746 E0DF     		.2byte	0xdfe0
 2644 0748 0F       		.uleb128 0xf
 2645 0749 B6070000 		.4byte	.LASF127
 2646 074d 04       		.byte	0x4
 2647 074e FF02     		.2byte	0x2ff
 2648 0750 E6000000 		.4byte	0xe6
 2649 0754 E4DF     		.2byte	0xdfe4
 2650 0756 0F       		.uleb128 0xf
 2651 0757 B2060000 		.4byte	.LASF128
 2652 075b 04       		.byte	0x4
 2653 075c 0003     		.2byte	0x300
 2654 075e E6000000 		.4byte	0xe6
 2655 0762 E8DF     		.2byte	0xdfe8
 2656 0764 0F       		.uleb128 0xf
 2657 0765 C9060000 		.4byte	.LASF129
 2658 0769 04       		.byte	0x4
 2659 076a 0103     		.2byte	0x301
 2660 076c E6000000 		.4byte	0xe6
 2661 0770 ECDF     		.2byte	0xdfec
 2662 0772 0F       		.uleb128 0xf
 2663 0773 5F090000 		.4byte	.LASF130
 2664 0777 04       		.byte	0x4
 2665 0778 0203     		.2byte	0x302
 2666 077a E6000000 		.4byte	0xe6
 2667 077e F0DF     		.2byte	0xdff0
 2668 0780 0F       		.uleb128 0xf
 2669 0781 68090000 		.4byte	.LASF131
 2670 0785 04       		.byte	0x4
 2671 0786 0303     		.2byte	0x303
 2672 0788 E6000000 		.4byte	0xe6
 2673 078c F4DF     		.2byte	0xdff4
 2674 078e 0F       		.uleb128 0xf
 2675 078f AE010000 		.4byte	.LASF132
 2676 0793 04       		.byte	0x4
 2677 0794 0403     		.2byte	0x304
 2678 0796 E6000000 		.4byte	0xe6
 2679 079a F8DF     		.2byte	0xdff8
 2680 079c 0F       		.uleb128 0xf
 2681 079d 81090000 		.4byte	.LASF133
 2682 07a1 04       		.byte	0x4
 2683 07a2 0503     		.2byte	0x305
 2684 07a4 E6000000 		.4byte	0xe6
 2685 07a8 FCDF     		.2byte	0xdffc
 2686 07aa 0F       		.uleb128 0xf
 2687 07ab F6070000 		.4byte	.LASF134
 2688 07af 04       		.byte	0x4
 2689 07b0 0603     		.2byte	0x306
 2690 07b2 95090000 		.4byte	0x995
 2691 07b6 00E0     		.2byte	0xe000
 2692 07b8 11       		.uleb128 0x11
ARM GAS  e:\temp\ccrFbtw8.s 			page 65


 2693 07b9 53050000 		.4byte	.LASF135
 2694 07bd 04       		.byte	0x4
 2695 07be 0703     		.2byte	0x307
 2696 07c0 E6000000 		.4byte	0xe6
 2697 07c4 00E00F00 		.4byte	0xfe000
 2698 07c8 11       		.uleb128 0x11
 2699 07c9 AE070000 		.4byte	.LASF136
 2700 07cd 04       		.byte	0x4
 2701 07ce 0803     		.2byte	0x308
 2702 07d0 E6000000 		.4byte	0xe6
 2703 07d4 04E00F00 		.4byte	0xfe004
 2704 07d8 11       		.uleb128 0x11
 2705 07d9 21000000 		.4byte	.LASF137
 2706 07dd 04       		.byte	0x4
 2707 07de 0903     		.2byte	0x309
 2708 07e0 E6000000 		.4byte	0xe6
 2709 07e4 08E00F00 		.4byte	0xfe008
 2710 07e8 11       		.uleb128 0x11
 2711 07e9 7B010000 		.4byte	.LASF138
 2712 07ed 04       		.byte	0x4
 2713 07ee 0A03     		.2byte	0x30a
 2714 07f0 E6000000 		.4byte	0xe6
 2715 07f4 0CE00F00 		.4byte	0xfe00c
 2716 07f8 11       		.uleb128 0x11
 2717 07f9 FE070000 		.4byte	.LASF139
 2718 07fd 04       		.byte	0x4
 2719 07fe 0B03     		.2byte	0x30b
 2720 0800 AB090000 		.4byte	0x9ab
 2721 0804 10E00F00 		.4byte	0xfe010
 2722 0808 11       		.uleb128 0x11
 2723 0809 72010000 		.4byte	.LASF140
 2724 080d 04       		.byte	0x4
 2725 080e 0C03     		.2byte	0x30c
 2726 0810 E6000000 		.4byte	0xe6
 2727 0814 CCEF0F00 		.4byte	0xfefcc
 2728 0818 11       		.uleb128 0x11
 2729 0819 2D020000 		.4byte	.LASF141
 2730 081d 04       		.byte	0x4
 2731 081e 0D03     		.2byte	0x30d
 2732 0820 E6000000 		.4byte	0xe6
 2733 0824 D0EF0F00 		.4byte	0xfefd0
 2734 0828 11       		.uleb128 0x11
 2735 0829 BD010000 		.4byte	.LASF142
 2736 082d 04       		.byte	0x4
 2737 082e 0E03     		.2byte	0x30e
 2738 0830 B0090000 		.4byte	0x9b0
 2739 0834 D4EF0F00 		.4byte	0xfefd4
 2740 0838 11       		.uleb128 0x11
 2741 0839 8A090000 		.4byte	.LASF143
 2742 083d 04       		.byte	0x4
 2743 083e 0F03     		.2byte	0x30f
 2744 0840 E6000000 		.4byte	0xe6
 2745 0844 E0EF0F00 		.4byte	0xfefe0
 2746 0848 11       		.uleb128 0x11
 2747 0849 93090000 		.4byte	.LASF144
 2748 084d 04       		.byte	0x4
 2749 084e 1003     		.2byte	0x310
ARM GAS  e:\temp\ccrFbtw8.s 			page 66


 2750 0850 E6000000 		.4byte	0xe6
 2751 0854 E4EF0F00 		.4byte	0xfefe4
 2752 0858 11       		.uleb128 0x11
 2753 0859 07020000 		.4byte	.LASF145
 2754 085d 04       		.byte	0x4
 2755 085e 1103     		.2byte	0x311
 2756 0860 E6000000 		.4byte	0xe6
 2757 0864 E8EF0F00 		.4byte	0xfefe8
 2758 0868 11       		.uleb128 0x11
 2759 0869 A2090000 		.4byte	.LASF146
 2760 086d 04       		.byte	0x4
 2761 086e 1203     		.2byte	0x312
 2762 0870 E6000000 		.4byte	0xe6
 2763 0874 ECEF0F00 		.4byte	0xfefec
 2764 0878 11       		.uleb128 0x11
 2765 0879 E7030000 		.4byte	.LASF147
 2766 087d 04       		.byte	0x4
 2767 087e 1303     		.2byte	0x313
 2768 0880 E6000000 		.4byte	0xe6
 2769 0884 F0EF0F00 		.4byte	0xfeff0
 2770 0888 11       		.uleb128 0x11
 2771 0889 F0030000 		.4byte	.LASF148
 2772 088d 04       		.byte	0x4
 2773 088e 1403     		.2byte	0x314
 2774 0890 E6000000 		.4byte	0xe6
 2775 0894 F4EF0F00 		.4byte	0xfeff4
 2776 0898 11       		.uleb128 0x11
 2777 0899 F9030000 		.4byte	.LASF149
 2778 089d 04       		.byte	0x4
 2779 089e 1503     		.2byte	0x315
 2780 08a0 E6000000 		.4byte	0xe6
 2781 08a4 F8EF0F00 		.4byte	0xfeff8
 2782 08a8 11       		.uleb128 0x11
 2783 08a9 02040000 		.4byte	.LASF150
 2784 08ad 04       		.byte	0x4
 2785 08ae 1603     		.2byte	0x316
 2786 08b0 E6000000 		.4byte	0xe6
 2787 08b4 FCEF0F00 		.4byte	0xfeffc
 2788 08b8 00       		.byte	0
 2789 08b9 05       		.uleb128 0x5
 2790 08ba 35010000 		.4byte	0x135
 2791 08be 06       		.uleb128 0x6
 2792 08bf E6000000 		.4byte	0xe6
 2793 08c3 CF080000 		.4byte	0x8cf
 2794 08c7 0B       		.uleb128 0xb
 2795 08c8 DF000000 		.4byte	0xdf
 2796 08cc E403     		.2byte	0x3e4
 2797 08ce 00       		.byte	0
 2798 08cf 05       		.uleb128 0x5
 2799 08d0 BE080000 		.4byte	0x8be
 2800 08d4 05       		.uleb128 0x5
 2801 08d5 25010000 		.4byte	0x125
 2802 08d9 06       		.uleb128 0x6
 2803 08da E6000000 		.4byte	0xe6
 2804 08de EA080000 		.4byte	0x8ea
 2805 08e2 0B       		.uleb128 0xb
 2806 08e3 DF000000 		.4byte	0xdf
ARM GAS  e:\temp\ccrFbtw8.s 			page 67


 2807 08e7 ED03     		.2byte	0x3ed
 2808 08e9 00       		.byte	0
 2809 08ea 05       		.uleb128 0x5
 2810 08eb D9080000 		.4byte	0x8d9
 2811 08ef 05       		.uleb128 0x5
 2812 08f0 25010000 		.4byte	0x125
 2813 08f4 06       		.uleb128 0x6
 2814 08f5 E6000000 		.4byte	0xe6
 2815 08f9 05090000 		.4byte	0x905
 2816 08fd 0B       		.uleb128 0xb
 2817 08fe DF000000 		.4byte	0xdf
 2818 0902 012C     		.2byte	0x2c01
 2819 0904 00       		.byte	0
 2820 0905 05       		.uleb128 0x5
 2821 0906 F4080000 		.4byte	0x8f4
 2822 090a 06       		.uleb128 0x6
 2823 090b E6000000 		.4byte	0xe6
 2824 090f 1A090000 		.4byte	0x91a
 2825 0913 07       		.uleb128 0x7
 2826 0914 DF000000 		.4byte	0xdf
 2827 0918 37       		.byte	0x37
 2828 0919 00       		.byte	0
 2829 091a 05       		.uleb128 0x5
 2830 091b 0A090000 		.4byte	0x90a
 2831 091f 05       		.uleb128 0x5
 2832 0920 01030000 		.4byte	0x301
 2833 0924 05       		.uleb128 0x5
 2834 0925 01030000 		.4byte	0x301
 2835 0929 05       		.uleb128 0x5
 2836 092a 01030000 		.4byte	0x301
 2837 092e 06       		.uleb128 0x6
 2838 092f E6000000 		.4byte	0xe6
 2839 0933 3E090000 		.4byte	0x93e
 2840 0937 07       		.uleb128 0x7
 2841 0938 DF000000 		.4byte	0xdf
 2842 093c 5E       		.byte	0x5e
 2843 093d 00       		.byte	0
 2844 093e 05       		.uleb128 0x5
 2845 093f 2E090000 		.4byte	0x92e
 2846 0943 05       		.uleb128 0x5
 2847 0944 EB000000 		.4byte	0xeb
 2848 0948 06       		.uleb128 0x6
 2849 0949 E6000000 		.4byte	0xe6
 2850 094d 59090000 		.4byte	0x959
 2851 0951 0B       		.uleb128 0xb
 2852 0952 DF000000 		.4byte	0xdf
 2853 0956 3702     		.2byte	0x237
 2854 0958 00       		.byte	0
 2855 0959 05       		.uleb128 0x5
 2856 095a 48090000 		.4byte	0x948
 2857 095e 05       		.uleb128 0x5
 2858 095f FB000000 		.4byte	0xfb
 2859 0963 05       		.uleb128 0x5
 2860 0964 F1020000 		.4byte	0x2f1
 2861 0968 06       		.uleb128 0x6
 2862 0969 E6000000 		.4byte	0xe6
 2863 096d 78090000 		.4byte	0x978
ARM GAS  e:\temp\ccrFbtw8.s 			page 68


 2864 0971 07       		.uleb128 0x7
 2865 0972 DF000000 		.4byte	0xdf
 2866 0976 73       		.byte	0x73
 2867 0977 00       		.byte	0
 2868 0978 05       		.uleb128 0x5
 2869 0979 68090000 		.4byte	0x968
 2870 097d 05       		.uleb128 0x5
 2871 097e 25010000 		.4byte	0x125
 2872 0982 06       		.uleb128 0x6
 2873 0983 E6000000 		.4byte	0xe6
 2874 0987 95090000 		.4byte	0x995
 2875 098b 12       		.uleb128 0x12
 2876 098c DF000000 		.4byte	0xdf
 2877 0990 FFBF0300 		.4byte	0x3bfff
 2878 0994 00       		.byte	0
 2879 0995 05       		.uleb128 0x5
 2880 0996 82090000 		.4byte	0x982
 2881 099a 06       		.uleb128 0x6
 2882 099b E6000000 		.4byte	0xe6
 2883 099f AB090000 		.4byte	0x9ab
 2884 09a3 0B       		.uleb128 0xb
 2885 09a4 DF000000 		.4byte	0xdf
 2886 09a8 EE03     		.2byte	0x3ee
 2887 09aa 00       		.byte	0
 2888 09ab 05       		.uleb128 0x5
 2889 09ac 9A090000 		.4byte	0x99a
 2890 09b0 05       		.uleb128 0x5
 2891 09b1 25010000 		.4byte	0x125
 2892 09b5 13       		.uleb128 0x13
 2893 09b6 A6030000 		.4byte	.LASF151
 2894 09ba 04       		.byte	0x4
 2895 09bb 1703     		.2byte	0x317
 2896 09bd C1090000 		.4byte	0x9c1
 2897 09c1 0C       		.uleb128 0xc
 2898 09c2 04       		.byte	0x4
 2899 09c3 11030000 		.4byte	0x311
 2900 09c7 02       		.uleb128 0x2
 2901 09c8 E5080000 		.4byte	.LASF152
 2902 09cc 05       		.byte	0x5
 2903 09cd 5D       		.byte	0x5d
 2904 09ce A2000000 		.4byte	0xa2
 2905 09d2 02       		.uleb128 0x2
 2906 09d3 1D040000 		.4byte	.LASF153
 2907 09d7 05       		.byte	0x5
 2908 09d8 66       		.byte	0x66
 2909 09d9 DD090000 		.4byte	0x9dd
 2910 09dd 0C       		.uleb128 0xc
 2911 09de 04       		.byte	0x4
 2912 09df E3090000 		.4byte	0x9e3
 2913 09e3 14       		.uleb128 0x14
 2914 09e4 F3090000 		.4byte	0x9f3
 2915 09e8 15       		.uleb128 0x15
 2916 09e9 A2000000 		.4byte	0xa2
 2917 09ed 15       		.uleb128 0x15
 2918 09ee C7090000 		.4byte	0x9c7
 2919 09f2 00       		.byte	0
 2920 09f3 16       		.uleb128 0x16
ARM GAS  e:\temp\ccrFbtw8.s 			page 69


 2921 09f4 0C       		.byte	0xc
 2922 09f5 05       		.byte	0x5
 2923 09f6 72       		.byte	0x72
 2924 09f7 2A0A0000 		.4byte	0xa2a
 2925 09fb 09       		.uleb128 0x9
 2926 09fc 00000000 		.4byte	.LASF154
 2927 0a00 05       		.byte	0x5
 2928 0a01 74       		.byte	0x74
 2929 0a02 B8000000 		.4byte	0xb8
 2930 0a06 00       		.byte	0
 2931 0a07 17       		.uleb128 0x17
 2932 0a08 636200   		.ascii	"cb\000"
 2933 0a0b 05       		.byte	0x5
 2934 0a0c 75       		.byte	0x75
 2935 0a0d D2090000 		.4byte	0x9d2
 2936 0a11 04       		.byte	0x4
 2937 0a12 09       		.uleb128 0x9
 2938 0a13 89000000 		.4byte	.LASF155
 2939 0a17 05       		.byte	0x5
 2940 0a18 76       		.byte	0x76
 2941 0a19 AD000000 		.4byte	0xad
 2942 0a1d 08       		.byte	0x8
 2943 0a1e 17       		.uleb128 0x17
 2944 0a1f 696400   		.ascii	"id\000"
 2945 0a22 05       		.byte	0x5
 2946 0a23 77       		.byte	0x77
 2947 0a24 C7090000 		.4byte	0x9c7
 2948 0a28 0A       		.byte	0xa
 2949 0a29 00       		.byte	0
 2950 0a2a 02       		.uleb128 0x2
 2951 0a2b 3F000000 		.4byte	.LASF156
 2952 0a2f 05       		.byte	0x5
 2953 0a30 78       		.byte	0x78
 2954 0a31 F3090000 		.4byte	0x9f3
 2955 0a35 18       		.uleb128 0x18
 2956 0a36 62070000 		.4byte	.LASF166
 2957 0a3a 01       		.byte	0x1
 2958 0a3b 94       		.byte	0x94
 2959 0a3c 00000000 		.4byte	.LFB32
 2960 0a40 80000000 		.4byte	.LFE32-.LFB32
 2961 0a44 01       		.uleb128 0x1
 2962 0a45 9C       		.byte	0x9c
 2963 0a46 690A0000 		.4byte	0xa69
 2964 0a4a 19       		.uleb128 0x19
 2965 0a4b 6F000000 		.4byte	.LASF157
 2966 0a4f 01       		.byte	0x1
 2967 0a50 96       		.byte	0x96
 2968 0a51 B8000000 		.4byte	0xb8
 2969 0a55 00000000 		.4byte	.LLST0
 2970 0a59 19       		.uleb128 0x19
 2971 0a5a 13040000 		.4byte	.LASF158
 2972 0a5e 01       		.byte	0x1
 2973 0a5f 96       		.byte	0x96
 2974 0a60 B8000000 		.4byte	0xb8
 2975 0a64 2F000000 		.4byte	.LLST1
 2976 0a68 00       		.byte	0
 2977 0a69 1A       		.uleb128 0x1a
ARM GAS  e:\temp\ccrFbtw8.s 			page 70


 2978 0a6a 4A020000 		.4byte	.LASF206
 2979 0a6e 01       		.byte	0x1
 2980 0a6f 0C01     		.2byte	0x10c
 2981 0a71 AD000000 		.4byte	0xad
 2982 0a75 00000000 		.4byte	.LFB36
 2983 0a79 0C000000 		.4byte	.LFE36-.LFB36
 2984 0a7d 01       		.uleb128 0x1
 2985 0a7e 9C       		.byte	0x9c
 2986 0a7f 1B       		.uleb128 0x1b
 2987 0a80 5B050000 		.4byte	.LASF162
 2988 0a84 01       		.byte	0x1
 2989 0a85 2501     		.2byte	0x125
 2990 0a87 AD000000 		.4byte	0xad
 2991 0a8b 00000000 		.4byte	.LFB38
 2992 0a8f 16000000 		.4byte	.LFE38-.LFB38
 2993 0a93 01       		.uleb128 0x1
 2994 0a94 9C       		.byte	0x9c
 2995 0a95 CA0A0000 		.4byte	0xaca
 2996 0a99 1C       		.uleb128 0x1c
 2997 0a9a 51090000 		.4byte	.LASF159
 2998 0a9e 01       		.byte	0x1
 2999 0a9f 2501     		.2byte	0x125
 3000 0aa1 AD000000 		.4byte	0xad
 3001 0aa5 42000000 		.4byte	.LLST2
 3002 0aa9 1C       		.uleb128 0x1c
 3003 0aaa 84050000 		.4byte	.LASF160
 3004 0aae 01       		.byte	0x1
 3005 0aaf 2501     		.2byte	0x125
 3006 0ab1 AD000000 		.4byte	0xad
 3007 0ab5 63000000 		.4byte	.LLST3
 3008 0ab9 1D       		.uleb128 0x1d
 3009 0aba 36020000 		.4byte	.LASF161
 3010 0abe 01       		.byte	0x1
 3011 0abf 2701     		.2byte	0x127
 3012 0ac1 B8000000 		.4byte	0xb8
 3013 0ac5 9D000000 		.4byte	.LLST4
 3014 0ac9 00       		.byte	0
 3015 0aca 1B       		.uleb128 0x1b
 3016 0acb 34070000 		.4byte	.LASF163
 3017 0acf 01       		.byte	0x1
 3018 0ad0 4C01     		.2byte	0x14c
 3019 0ad2 A2000000 		.4byte	0xa2
 3020 0ad6 00000000 		.4byte	.LFB40
 3021 0ada 3C000000 		.4byte	.LFE40-.LFB40
 3022 0ade 01       		.uleb128 0x1
 3023 0adf 9C       		.byte	0x9c
 3024 0ae0 120B0000 		.4byte	0xb12
 3025 0ae4 1C       		.uleb128 0x1c
 3026 0ae5 06010000 		.4byte	.LASF164
 3027 0ae9 01       		.byte	0x1
 3028 0aea 4C01     		.2byte	0x14c
 3029 0aec A2000000 		.4byte	0xa2
 3030 0af0 BB000000 		.4byte	.LLST5
 3031 0af4 1E       		.uleb128 0x1e
 3032 0af5 696400   		.ascii	"id\000"
 3033 0af8 01       		.byte	0x1
 3034 0af9 4C01     		.2byte	0x14c
ARM GAS  e:\temp\ccrFbtw8.s 			page 71


 3035 0afb C7090000 		.4byte	0x9c7
 3036 0aff 01       		.uleb128 0x1
 3037 0b00 51       		.byte	0x51
 3038 0b01 1D       		.uleb128 0x1d
 3039 0b02 2A080000 		.4byte	.LASF165
 3040 0b06 01       		.byte	0x1
 3041 0b07 4E01     		.2byte	0x14e
 3042 0b09 A2000000 		.4byte	0xa2
 3043 0b0d 0E010000 		.4byte	.LLST6
 3044 0b11 00       		.byte	0
 3045 0b12 18       		.uleb128 0x18
 3046 0b13 3F040000 		.4byte	.LASF167
 3047 0b17 01       		.byte	0x1
 3048 0b18 FF       		.byte	0xff
 3049 0b19 00000000 		.4byte	.LFB35
 3050 0b1d 0A000000 		.4byte	.LFE35-.LFB35
 3051 0b21 01       		.uleb128 0x1
 3052 0b22 9C       		.byte	0x9c
 3053 0b23 370B0000 		.4byte	0xb37
 3054 0b27 1F       		.uleb128 0x1f
 3055 0b28 08000000 		.4byte	.LVL21
 3056 0b2c D0120000 		.4byte	0x12d0
 3057 0b30 20       		.uleb128 0x20
 3058 0b31 01       		.uleb128 0x1
 3059 0b32 50       		.byte	0x50
 3060 0b33 01       		.uleb128 0x1
 3061 0b34 39       		.byte	0x39
 3062 0b35 00       		.byte	0
 3063 0b36 00       		.byte	0
 3064 0b37 21       		.uleb128 0x21
 3065 0b38 44070000 		.4byte	.LASF168
 3066 0b3c 01       		.byte	0x1
 3067 0b3d F101     		.2byte	0x1f1
 3068 0b3f 00000000 		.4byte	.LFB43
 3069 0b43 4C000000 		.4byte	.LFE43-.LFB43
 3070 0b47 01       		.uleb128 0x1
 3071 0b48 9C       		.byte	0x9c
 3072 0b49 770B0000 		.4byte	0xb77
 3073 0b4d 1C       		.uleb128 0x1c
 3074 0b4e 06010000 		.4byte	.LASF164
 3075 0b52 01       		.byte	0x1
 3076 0b53 F101     		.2byte	0x1f1
 3077 0b55 A2000000 		.4byte	0xa2
 3078 0b59 37010000 		.4byte	.LLST7
 3079 0b5d 1C       		.uleb128 0x1c
 3080 0b5e 2A080000 		.4byte	.LASF165
 3081 0b62 01       		.byte	0x1
 3082 0b63 F101     		.2byte	0x1f1
 3083 0b65 A2000000 		.4byte	0xa2
 3084 0b69 58010000 		.4byte	.LLST8
 3085 0b6d 22       		.uleb128 0x22
 3086 0b6e 42000000 		.4byte	.LVL25
 3087 0b72 120B0000 		.4byte	0xb12
 3088 0b76 00       		.byte	0
 3089 0b77 18       		.uleb128 0x18
 3090 0b78 A6020000 		.4byte	.LASF169
 3091 0b7c 01       		.byte	0x1
ARM GAS  e:\temp\ccrFbtw8.s 			page 72


 3092 0b7d BB       		.byte	0xbb
 3093 0b7e 00000000 		.4byte	.LFB33
 3094 0b82 3C000000 		.4byte	.LFE33-.LFB33
 3095 0b86 01       		.uleb128 0x1
 3096 0b87 9C       		.byte	0x9c
 3097 0b88 C50B0000 		.4byte	0xbc5
 3098 0b8c 23       		.uleb128 0x23
 3099 0b8d 08000000 		.4byte	.LVL26
 3100 0b91 D0120000 		.4byte	0x12d0
 3101 0b95 9F0B0000 		.4byte	0xb9f
 3102 0b99 20       		.uleb128 0x20
 3103 0b9a 01       		.uleb128 0x1
 3104 0b9b 50       		.byte	0x50
 3105 0b9c 01       		.uleb128 0x1
 3106 0b9d 39       		.byte	0x39
 3107 0b9e 00       		.byte	0
 3108 0b9f 23       		.uleb128 0x23
 3109 0ba0 2A000000 		.4byte	.LVL27
 3110 0ba4 DB120000 		.4byte	0x12db
 3111 0ba8 BB0B0000 		.4byte	0xbbb
 3112 0bac 20       		.uleb128 0x20
 3113 0bad 01       		.uleb128 0x1
 3114 0bae 50       		.byte	0x50
 3115 0baf 01       		.uleb128 0x1
 3116 0bb0 39       		.byte	0x39
 3117 0bb1 20       		.uleb128 0x20
 3118 0bb2 01       		.uleb128 0x1
 3119 0bb3 51       		.byte	0x51
 3120 0bb4 05       		.uleb128 0x5
 3121 0bb5 03       		.byte	0x3
 3122 0bb6 00000000 		.4byte	wdt_interrupt_handler
 3123 0bba 00       		.byte	0
 3124 0bbb 22       		.uleb128 0x22
 3125 0bbc 2E000000 		.4byte	.LVL28
 3126 0bc0 350A0000 		.4byte	0xa35
 3127 0bc4 00       		.byte	0
 3128 0bc5 21       		.uleb128 0x21
 3129 0bc6 2C030000 		.4byte	.LASF170
 3130 0bca 01       		.byte	0x1
 3131 0bcb 1701     		.2byte	0x117
 3132 0bcd 00000000 		.4byte	.LFB37
 3133 0bd1 34000000 		.4byte	.LFE37-.LFB37
 3134 0bd5 01       		.uleb128 0x1
 3135 0bd6 9C       		.byte	0x9c
 3136 0bd7 FC0B0000 		.4byte	0xbfc
 3137 0bdb 1C       		.uleb128 0x1c
 3138 0bdc 89000000 		.4byte	.LASF155
 3139 0be0 01       		.byte	0x1
 3140 0be1 1701     		.2byte	0x117
 3141 0be3 AD000000 		.4byte	0xad
 3142 0be7 79010000 		.4byte	.LLST9
 3143 0beb 1F       		.uleb128 0x1f
 3144 0bec 1E000000 		.4byte	.LVL31
 3145 0bf0 E6120000 		.4byte	0x12e6
 3146 0bf4 20       		.uleb128 0x20
 3147 0bf5 01       		.uleb128 0x1
 3148 0bf6 50       		.byte	0x50
ARM GAS  e:\temp\ccrFbtw8.s 			page 73


 3149 0bf7 02       		.uleb128 0x2
 3150 0bf8 08       		.byte	0x8
 3151 0bf9 64       		.byte	0x64
 3152 0bfa 00       		.byte	0
 3153 0bfb 00       		.byte	0
 3154 0bfc 21       		.uleb128 0x21
 3155 0bfd 9D050000 		.4byte	.LASF171
 3156 0c01 01       		.byte	0x1
 3157 0c02 A202     		.2byte	0x2a2
 3158 0c04 00000000 		.4byte	.LFB52
 3159 0c08 D8010000 		.4byte	.LFE52-.LFB52
 3160 0c0c 01       		.uleb128 0x1
 3161 0c0d 9C       		.byte	0x9c
 3162 0c0e D90C0000 		.4byte	0xcd9
 3163 0c12 1D       		.uleb128 0x1d
 3164 0c13 2A080000 		.4byte	.LASF165
 3165 0c17 01       		.byte	0x1
 3166 0c18 A402     		.2byte	0x2a4
 3167 0c1a A2000000 		.4byte	0xa2
 3168 0c1e 9A010000 		.4byte	.LLST10
 3169 0c22 1D       		.uleb128 0x1d
 3170 0c23 06010000 		.4byte	.LASF164
 3171 0c27 01       		.byte	0x1
 3172 0c28 A402     		.2byte	0x2a4
 3173 0c2a A2000000 		.4byte	0xa2
 3174 0c2e E4010000 		.4byte	.LLST11
 3175 0c32 24       		.uleb128 0x24
 3176 0c33 696400   		.ascii	"id\000"
 3177 0c36 01       		.byte	0x1
 3178 0c37 A502     		.2byte	0x2a5
 3179 0c39 C7090000 		.4byte	0x9c7
 3180 0c3d 19020000 		.4byte	.LLST12
 3181 0c41 1D       		.uleb128 0x1d
 3182 0c42 D5040000 		.4byte	.LASF172
 3183 0c46 01       		.byte	0x1
 3184 0c47 A702     		.2byte	0x2a7
 3185 0c49 AD000000 		.4byte	0xad
 3186 0c4d 2C020000 		.4byte	.LLST13
 3187 0c51 1D       		.uleb128 0x1d
 3188 0c52 36020000 		.4byte	.LASF161
 3189 0c56 01       		.byte	0x1
 3190 0c57 A802     		.2byte	0x2a8
 3191 0c59 B8000000 		.4byte	0xb8
 3192 0c5d 3F020000 		.4byte	.LLST14
 3193 0c61 1D       		.uleb128 0x1d
 3194 0c62 89000000 		.4byte	.LASF155
 3195 0c66 01       		.byte	0x1
 3196 0c67 A802     		.2byte	0x2a8
 3197 0c69 B8000000 		.4byte	0xb8
 3198 0c6d 81020000 		.4byte	.LLST15
 3199 0c71 22       		.uleb128 0x22
 3200 0c72 18000000 		.4byte	.LVL32
 3201 0c76 690A0000 		.4byte	0xa69
 3202 0c7a 23       		.uleb128 0x23
 3203 0c7b 28000000 		.4byte	.LVL34
 3204 0c7f 7F0A0000 		.4byte	0xa7f
 3205 0c83 8E0C0000 		.4byte	0xc8e
ARM GAS  e:\temp\ccrFbtw8.s 			page 74


 3206 0c87 20       		.uleb128 0x20
 3207 0c88 01       		.uleb128 0x1
 3208 0c89 51       		.byte	0x51
 3209 0c8a 02       		.uleb128 0x2
 3210 0c8b 74       		.byte	0x74
 3211 0c8c 00       		.sleb128 0
 3212 0c8d 00       		.byte	0
 3213 0c8e 25       		.uleb128 0x25
 3214 0c8f 04010000 		.4byte	.LVL39
 3215 0c93 9E0C0000 		.4byte	0xc9e
 3216 0c97 20       		.uleb128 0x20
 3217 0c98 01       		.uleb128 0x1
 3218 0c99 50       		.byte	0x50
 3219 0c9a 02       		.uleb128 0x2
 3220 0c9b 75       		.byte	0x75
 3221 0c9c 00       		.sleb128 0
 3222 0c9d 00       		.byte	0
 3223 0c9e 22       		.uleb128 0x22
 3224 0c9f 88010000 		.4byte	.LVL58
 3225 0ca3 690A0000 		.4byte	0xa69
 3226 0ca7 23       		.uleb128 0x23
 3227 0ca8 90010000 		.4byte	.LVL59
 3228 0cac 7F0A0000 		.4byte	0xa7f
 3229 0cb0 BB0C0000 		.4byte	0xcbb
 3230 0cb4 20       		.uleb128 0x20
 3231 0cb5 01       		.uleb128 0x1
 3232 0cb6 50       		.byte	0x50
 3233 0cb7 02       		.uleb128 0x2
 3234 0cb8 75       		.byte	0x75
 3235 0cb9 00       		.sleb128 0
 3236 0cba 00       		.byte	0
 3237 0cbb 23       		.uleb128 0x23
 3238 0cbc AC010000 		.4byte	.LVL63
 3239 0cc0 C50B0000 		.4byte	0xbc5
 3240 0cc4 CF0C0000 		.4byte	0xccf
 3241 0cc8 20       		.uleb128 0x20
 3242 0cc9 01       		.uleb128 0x1
 3243 0cca 50       		.byte	0x50
 3244 0ccb 02       		.uleb128 0x2
 3245 0ccc 74       		.byte	0x74
 3246 0ccd 00       		.sleb128 0
 3247 0cce 00       		.byte	0
 3248 0ccf 22       		.uleb128 0x22
 3249 0cd0 BE010000 		.4byte	.LVL64
 3250 0cd4 120B0000 		.4byte	0xb12
 3251 0cd8 00       		.byte	0
 3252 0cd9 21       		.uleb128 0x21
 3253 0cda F0000000 		.4byte	.LASF173
 3254 0cde 01       		.byte	0x1
 3255 0cdf 1303     		.2byte	0x313
 3256 0ce1 00000000 		.4byte	.LFB53
 3257 0ce5 14000000 		.4byte	.LFE53-.LFB53
 3258 0ce9 01       		.uleb128 0x1
 3259 0cea 9C       		.byte	0x9c
 3260 0ceb F90C0000 		.4byte	0xcf9
 3261 0cef 22       		.uleb128 0x22
 3262 0cf0 0C000000 		.4byte	.LVL65
ARM GAS  e:\temp\ccrFbtw8.s 			page 75


 3263 0cf4 FC0B0000 		.4byte	0xbfc
 3264 0cf8 00       		.byte	0
 3265 0cf9 18       		.uleb128 0x18
 3266 0cfa DF040000 		.4byte	.LASF174
 3267 0cfe 01       		.byte	0x1
 3268 0cff E1       		.byte	0xe1
 3269 0d00 00000000 		.4byte	.LFB34
 3270 0d04 0A000000 		.4byte	.LFE34-.LFB34
 3271 0d08 01       		.uleb128 0x1
 3272 0d09 9C       		.byte	0x9c
 3273 0d0a 1E0D0000 		.4byte	0xd1e
 3274 0d0e 1F       		.uleb128 0x1f
 3275 0d0f 08000000 		.4byte	.LVL66
 3276 0d13 F1120000 		.4byte	0x12f1
 3277 0d17 20       		.uleb128 0x20
 3278 0d18 01       		.uleb128 0x1
 3279 0d19 50       		.byte	0x50
 3280 0d1a 01       		.uleb128 0x1
 3281 0d1b 39       		.byte	0x39
 3282 0d1c 00       		.byte	0
 3283 0d1d 00       		.byte	0
 3284 0d1e 26       		.uleb128 0x26
 3285 0d1f 28040000 		.4byte	.LASF180
 3286 0d23 01       		.byte	0x1
 3287 0d24 3601     		.2byte	0x136
 3288 0d26 00000000 		.4byte	.LFB39
 3289 0d2a 50000000 		.4byte	.LFE39-.LFB39
 3290 0d2e 01       		.uleb128 0x1
 3291 0d2f 9C       		.byte	0x9c
 3292 0d30 5A0D0000 		.4byte	0xd5a
 3293 0d34 24       		.uleb128 0x24
 3294 0d35 6900     		.ascii	"i\000"
 3295 0d37 01       		.byte	0x1
 3296 0d38 3801     		.2byte	0x138
 3297 0d3a A2000000 		.4byte	0xa2
 3298 0d3e BB020000 		.4byte	.LLST16
 3299 0d42 24       		.uleb128 0x24
 3300 0d43 6A00     		.ascii	"j\000"
 3301 0d45 01       		.byte	0x1
 3302 0d46 3801     		.2byte	0x138
 3303 0d48 A2000000 		.4byte	0xa2
 3304 0d4c E5020000 		.4byte	.LLST17
 3305 0d50 22       		.uleb128 0x22
 3306 0d51 46000000 		.4byte	.LVL76
 3307 0d55 770B0000 		.4byte	0xb77
 3308 0d59 00       		.byte	0
 3309 0d5a 27       		.uleb128 0x27
 3310 0d5b 30080000 		.4byte	.LASF178
 3311 0d5f 01       		.byte	0x1
 3312 0d60 6001     		.2byte	0x160
 3313 0d62 670E0000 		.4byte	0xe67
 3314 0d66 00000000 		.4byte	.LFB41
 3315 0d6a 8C010000 		.4byte	.LFE41-.LFB41
 3316 0d6e 01       		.uleb128 0x1
 3317 0d6f 9C       		.byte	0x9c
 3318 0d70 670E0000 		.4byte	0xe67
 3319 0d74 1C       		.uleb128 0x1c
ARM GAS  e:\temp\ccrFbtw8.s 			page 76


 3320 0d75 06010000 		.4byte	.LASF164
 3321 0d79 01       		.byte	0x1
 3322 0d7a 6001     		.2byte	0x160
 3323 0d7c A2000000 		.4byte	0xa2
 3324 0d80 0E030000 		.4byte	.LLST18
 3325 0d84 28       		.uleb128 0x28
 3326 0d85 696400   		.ascii	"id\000"
 3327 0d88 01       		.byte	0x1
 3328 0d89 6001     		.2byte	0x160
 3329 0d8b C7090000 		.4byte	0x9c7
 3330 0d8f 61030000 		.4byte	.LLST19
 3331 0d93 1C       		.uleb128 0x1c
 3332 0d94 89000000 		.4byte	.LASF155
 3333 0d98 01       		.byte	0x1
 3334 0d99 6001     		.2byte	0x160
 3335 0d9b AD000000 		.4byte	0xad
 3336 0d9f 9B030000 		.4byte	.LLST20
 3337 0da3 28       		.uleb128 0x28
 3338 0da4 636200   		.ascii	"cb\000"
 3339 0da7 01       		.byte	0x1
 3340 0da8 6001     		.2byte	0x160
 3341 0daa D2090000 		.4byte	0x9d2
 3342 0dae D5030000 		.4byte	.LLST21
 3343 0db2 24       		.uleb128 0x24
 3344 0db3 6900     		.ascii	"i\000"
 3345 0db5 01       		.byte	0x1
 3346 0db6 6201     		.2byte	0x162
 3347 0db8 97000000 		.4byte	0x97
 3348 0dbc 0B040000 		.4byte	.LLST22
 3349 0dc0 1D       		.uleb128 0x1d
 3350 0dc1 83010000 		.4byte	.LASF175
 3351 0dc5 01       		.byte	0x1
 3352 0dc6 6301     		.2byte	0x163
 3353 0dc8 A2000000 		.4byte	0xa2
 3354 0dcc 4B040000 		.4byte	.LLST23
 3355 0dd0 1D       		.uleb128 0x1d
 3356 0dd1 88080000 		.4byte	.LASF176
 3357 0dd5 01       		.byte	0x1
 3358 0dd6 6401     		.2byte	0x164
 3359 0dd8 670E0000 		.4byte	0xe67
 3360 0ddc 5F040000 		.4byte	.LLST24
 3361 0de0 1D       		.uleb128 0x1d
 3362 0de1 2A080000 		.4byte	.LASF165
 3363 0de5 01       		.byte	0x1
 3364 0de6 6501     		.2byte	0x165
 3365 0de8 A2000000 		.4byte	0xa2
 3366 0dec A2040000 		.4byte	.LLST25
 3367 0df0 29       		.uleb128 0x29
 3368 0df1 B4000000 		.4byte	.LBB2
 3369 0df5 9A000000 		.4byte	.LBE2-.LBB2
 3370 0df9 4B0E0000 		.4byte	0xe4b
 3371 0dfd 1D       		.uleb128 0x1d
 3372 0dfe 00000000 		.4byte	.LASF154
 3373 0e02 01       		.byte	0x1
 3374 0e03 A201     		.2byte	0x1a2
 3375 0e05 B8000000 		.4byte	0xb8
 3376 0e09 DA040000 		.4byte	.LLST26
ARM GAS  e:\temp\ccrFbtw8.s 			page 77


 3377 0e0d 1D       		.uleb128 0x1d
 3378 0e0e D5040000 		.4byte	.LASF172
 3379 0e12 01       		.byte	0x1
 3380 0e13 A301     		.2byte	0x1a3
 3381 0e15 AD000000 		.4byte	0xad
 3382 0e19 F8040000 		.4byte	.LLST27
 3383 0e1d 22       		.uleb128 0x22
 3384 0e1e B8000000 		.4byte	.LVL91
 3385 0e22 690A0000 		.4byte	0xa69
 3386 0e26 22       		.uleb128 0x22
 3387 0e27 D0000000 		.4byte	.LVL94
 3388 0e2b 7F0A0000 		.4byte	0xa7f
 3389 0e2f 22       		.uleb128 0x22
 3390 0e30 16010000 		.4byte	.LVL96
 3391 0e34 C50B0000 		.4byte	0xbc5
 3392 0e38 22       		.uleb128 0x22
 3393 0e39 4A010000 		.4byte	.LVL103
 3394 0e3d C50B0000 		.4byte	0xbc5
 3395 0e41 22       		.uleb128 0x22
 3396 0e42 4E010000 		.4byte	.LVL104
 3397 0e46 F90C0000 		.4byte	0xcf9
 3398 0e4a 00       		.byte	0
 3399 0e4b 22       		.uleb128 0x22
 3400 0e4c 1C000000 		.4byte	.LVL80
 3401 0e50 FC120000 		.4byte	0x12fc
 3402 0e54 1F       		.uleb128 0x1f
 3403 0e55 72010000 		.4byte	.LVL108
 3404 0e59 07130000 		.4byte	0x1307
 3405 0e5d 20       		.uleb128 0x20
 3406 0e5e 01       		.uleb128 0x1
 3407 0e5f 50       		.byte	0x50
 3408 0e60 04       		.uleb128 0x4
 3409 0e61 91       		.byte	0x91
 3410 0e62 64       		.sleb128 -28
 3411 0e63 94       		.byte	0x94
 3412 0e64 01       		.byte	0x1
 3413 0e65 00       		.byte	0
 3414 0e66 00       		.byte	0
 3415 0e67 03       		.uleb128 0x3
 3416 0e68 01       		.byte	0x1
 3417 0e69 02       		.byte	0x2
 3418 0e6a AC060000 		.4byte	.LASF177
 3419 0e6e 27       		.uleb128 0x27
 3420 0e6f 8C050000 		.4byte	.LASF179
 3421 0e73 01       		.byte	0x1
 3422 0e74 E601     		.2byte	0x1e6
 3423 0e76 670E0000 		.4byte	0xe67
 3424 0e7a 00000000 		.4byte	.LFB42
 3425 0e7e 0A000000 		.4byte	.LFE42-.LFB42
 3426 0e82 01       		.uleb128 0x1
 3427 0e83 9C       		.byte	0x9c
 3428 0e84 C70E0000 		.4byte	0xec7
 3429 0e88 1C       		.uleb128 0x1c
 3430 0e89 06010000 		.4byte	.LASF164
 3431 0e8d 01       		.byte	0x1
 3432 0e8e E601     		.2byte	0x1e6
 3433 0e90 A2000000 		.4byte	0xa2
ARM GAS  e:\temp\ccrFbtw8.s 			page 78


 3434 0e94 25050000 		.4byte	.LLST28
 3435 0e98 28       		.uleb128 0x28
 3436 0e99 696400   		.ascii	"id\000"
 3437 0e9c 01       		.byte	0x1
 3438 0e9d E601     		.2byte	0x1e6
 3439 0e9f C7090000 		.4byte	0x9c7
 3440 0ea3 46050000 		.4byte	.LLST29
 3441 0ea7 1C       		.uleb128 0x1c
 3442 0ea8 89000000 		.4byte	.LASF155
 3443 0eac 01       		.byte	0x1
 3444 0ead E601     		.2byte	0x1e6
 3445 0eaf AD000000 		.4byte	0xad
 3446 0eb3 67050000 		.4byte	.LLST30
 3447 0eb7 1F       		.uleb128 0x1f
 3448 0eb8 08000000 		.4byte	.LVL114
 3449 0ebc 5A0D0000 		.4byte	0xd5a
 3450 0ec0 20       		.uleb128 0x20
 3451 0ec1 01       		.uleb128 0x1
 3452 0ec2 53       		.byte	0x53
 3453 0ec3 01       		.uleb128 0x1
 3454 0ec4 30       		.byte	0x30
 3455 0ec5 00       		.byte	0
 3456 0ec6 00       		.byte	0
 3457 0ec7 26       		.uleb128 0x26
 3458 0ec8 29000000 		.4byte	.LASF181
 3459 0ecc 01       		.byte	0x1
 3460 0ecd 0402     		.2byte	0x204
 3461 0ecf 00000000 		.4byte	.LFB44
 3462 0ed3 28000000 		.4byte	.LFE44-.LFB44
 3463 0ed7 01       		.uleb128 0x1
 3464 0ed8 9C       		.byte	0x9c
 3465 0ed9 640F0000 		.4byte	0xf64
 3466 0edd 1C       		.uleb128 0x1c
 3467 0ede 06010000 		.4byte	.LASF164
 3468 0ee2 01       		.byte	0x1
 3469 0ee3 0402     		.2byte	0x204
 3470 0ee5 A2000000 		.4byte	0xa2
 3471 0ee9 88050000 		.4byte	.LLST31
 3472 0eed 28       		.uleb128 0x28
 3473 0eee 696400   		.ascii	"id\000"
 3474 0ef1 01       		.byte	0x1
 3475 0ef2 0402     		.2byte	0x204
 3476 0ef4 C7090000 		.4byte	0x9c7
 3477 0ef8 A9050000 		.4byte	.LLST32
 3478 0efc 1D       		.uleb128 0x1d
 3479 0efd 2A080000 		.4byte	.LASF165
 3480 0f01 01       		.byte	0x1
 3481 0f02 0602     		.2byte	0x206
 3482 0f04 A2000000 		.4byte	0xa2
 3483 0f08 CA050000 		.4byte	.LLST33
 3484 0f0c 1D       		.uleb128 0x1d
 3485 0f0d 83010000 		.4byte	.LASF175
 3486 0f11 01       		.byte	0x1
 3487 0f12 0602     		.2byte	0x206
 3488 0f14 A2000000 		.4byte	0xa2
 3489 0f18 DD050000 		.4byte	.LLST34
 3490 0f1c 22       		.uleb128 0x22
ARM GAS  e:\temp\ccrFbtw8.s 			page 79


 3491 0f1d 0A000000 		.4byte	.LVL116
 3492 0f21 FC120000 		.4byte	0x12fc
 3493 0f25 23       		.uleb128 0x23
 3494 0f26 14000000 		.4byte	.LVL118
 3495 0f2a CA0A0000 		.4byte	0xaca
 3496 0f2e 3F0F0000 		.4byte	0xf3f
 3497 0f32 20       		.uleb128 0x20
 3498 0f33 01       		.uleb128 0x1
 3499 0f34 50       		.byte	0x50
 3500 0f35 02       		.uleb128 0x2
 3501 0f36 74       		.byte	0x74
 3502 0f37 00       		.sleb128 0
 3503 0f38 20       		.uleb128 0x20
 3504 0f39 01       		.uleb128 0x1
 3505 0f3a 51       		.byte	0x51
 3506 0f3b 02       		.uleb128 0x2
 3507 0f3c 76       		.byte	0x76
 3508 0f3d 00       		.sleb128 0
 3509 0f3e 00       		.byte	0
 3510 0f3f 23       		.uleb128 0x23
 3511 0f40 20000000 		.4byte	.LVL120
 3512 0f44 370B0000 		.4byte	0xb37
 3513 0f48 530F0000 		.4byte	0xf53
 3514 0f4c 20       		.uleb128 0x20
 3515 0f4d 01       		.uleb128 0x1
 3516 0f4e 50       		.byte	0x50
 3517 0f4f 02       		.uleb128 0x2
 3518 0f50 74       		.byte	0x74
 3519 0f51 00       		.sleb128 0
 3520 0f52 00       		.byte	0
 3521 0f53 1F       		.uleb128 0x1f
 3522 0f54 26000000 		.4byte	.LVL121
 3523 0f58 07130000 		.4byte	0x1307
 3524 0f5c 20       		.uleb128 0x20
 3525 0f5d 01       		.uleb128 0x1
 3526 0f5e 50       		.byte	0x50
 3527 0f5f 02       		.uleb128 0x2
 3528 0f60 75       		.byte	0x75
 3529 0f61 00       		.sleb128 0
 3530 0f62 00       		.byte	0
 3531 0f63 00       		.byte	0
 3532 0f64 26       		.uleb128 0x26
 3533 0f65 89010000 		.4byte	.LASF182
 3534 0f69 01       		.byte	0x1
 3535 0f6a 1602     		.2byte	0x216
 3536 0f6c 00000000 		.4byte	.LFB45
 3537 0f70 44000000 		.4byte	.LFE45-.LFB45
 3538 0f74 01       		.uleb128 0x1
 3539 0f75 9C       		.byte	0x9c
 3540 0f76 DE0F0000 		.4byte	0xfde
 3541 0f7a 1C       		.uleb128 0x1c
 3542 0f7b 06010000 		.4byte	.LASF164
 3543 0f7f 01       		.byte	0x1
 3544 0f80 1602     		.2byte	0x216
 3545 0f82 A2000000 		.4byte	0xa2
 3546 0f86 F0050000 		.4byte	.LLST35
 3547 0f8a 1D       		.uleb128 0x1d
ARM GAS  e:\temp\ccrFbtw8.s 			page 80


 3548 0f8b 2A080000 		.4byte	.LASF165
 3549 0f8f 01       		.byte	0x1
 3550 0f90 1802     		.2byte	0x218
 3551 0f92 A2000000 		.4byte	0xa2
 3552 0f96 11060000 		.4byte	.LLST36
 3553 0f9a 1D       		.uleb128 0x1d
 3554 0f9b 83010000 		.4byte	.LASF175
 3555 0f9f 01       		.byte	0x1
 3556 0fa0 1802     		.2byte	0x218
 3557 0fa2 A2000000 		.4byte	0xa2
 3558 0fa6 3B060000 		.4byte	.LLST37
 3559 0faa 22       		.uleb128 0x22
 3560 0fab 08000000 		.4byte	.LVL124
 3561 0faf FC120000 		.4byte	0x12fc
 3562 0fb3 23       		.uleb128 0x23
 3563 0fb4 30000000 		.4byte	.LVL127
 3564 0fb8 370B0000 		.4byte	0xb37
 3565 0fbc CD0F0000 		.4byte	0xfcd
 3566 0fc0 20       		.uleb128 0x20
 3567 0fc1 01       		.uleb128 0x1
 3568 0fc2 50       		.byte	0x50
 3569 0fc3 02       		.uleb128 0x2
 3570 0fc4 76       		.byte	0x76
 3571 0fc5 00       		.sleb128 0
 3572 0fc6 20       		.uleb128 0x20
 3573 0fc7 01       		.uleb128 0x1
 3574 0fc8 51       		.byte	0x51
 3575 0fc9 02       		.uleb128 0x2
 3576 0fca 75       		.byte	0x75
 3577 0fcb 00       		.sleb128 0
 3578 0fcc 00       		.byte	0
 3579 0fcd 1F       		.uleb128 0x1f
 3580 0fce 3E000000 		.4byte	.LVL130
 3581 0fd2 07130000 		.4byte	0x1307
 3582 0fd6 20       		.uleb128 0x20
 3583 0fd7 01       		.uleb128 0x1
 3584 0fd8 50       		.byte	0x50
 3585 0fd9 02       		.uleb128 0x2
 3586 0fda 74       		.byte	0x74
 3587 0fdb 00       		.sleb128 0
 3588 0fdc 00       		.byte	0
 3589 0fdd 00       		.byte	0
 3590 0fde 26       		.uleb128 0x26
 3591 0fdf 8F080000 		.4byte	.LASF183
 3592 0fe3 01       		.byte	0x1
 3593 0fe4 2A02     		.2byte	0x22a
 3594 0fe6 00000000 		.4byte	.LFB46
 3595 0fea 58000000 		.4byte	.LFE46-.LFB46
 3596 0fee 01       		.uleb128 0x1
 3597 0fef 9C       		.byte	0x9c
 3598 0ff0 93100000 		.4byte	0x1093
 3599 0ff4 1C       		.uleb128 0x1c
 3600 0ff5 06010000 		.4byte	.LASF164
 3601 0ff9 01       		.byte	0x1
 3602 0ffa 2A02     		.2byte	0x22a
 3603 0ffc A2000000 		.4byte	0xa2
 3604 1000 4E060000 		.4byte	.LLST38
ARM GAS  e:\temp\ccrFbtw8.s 			page 81


 3605 1004 1C       		.uleb128 0x1c
 3606 1005 51090000 		.4byte	.LASF159
 3607 1009 01       		.byte	0x1
 3608 100a 2A02     		.2byte	0x22a
 3609 100c C7090000 		.4byte	0x9c7
 3610 1010 6F060000 		.4byte	.LLST39
 3611 1014 28       		.uleb128 0x28
 3612 1015 656E6400 		.ascii	"end\000"
 3613 1019 01       		.byte	0x1
 3614 101a 2A02     		.2byte	0x22a
 3615 101c C7090000 		.4byte	0x9c7
 3616 1020 90060000 		.4byte	.LLST40
 3617 1024 1D       		.uleb128 0x1d
 3618 1025 2A080000 		.4byte	.LASF165
 3619 1029 01       		.byte	0x1
 3620 102a 2C02     		.2byte	0x22c
 3621 102c A2000000 		.4byte	0xa2
 3622 1030 B1060000 		.4byte	.LLST41
 3623 1034 1D       		.uleb128 0x1d
 3624 1035 83010000 		.4byte	.LASF175
 3625 1039 01       		.byte	0x1
 3626 103a 2C02     		.2byte	0x22c
 3627 103c A2000000 		.4byte	0xa2
 3628 1040 DB060000 		.4byte	.LLST42
 3629 1044 29       		.uleb128 0x29
 3630 1045 1C000000 		.4byte	.LBB3
 3631 1049 26000000 		.4byte	.LBE3-.LBB3
 3632 104d 77100000 		.4byte	0x1077
 3633 1051 24       		.uleb128 0x24
 3634 1052 696400   		.ascii	"id\000"
 3635 1055 01       		.byte	0x1
 3636 1056 3E02     		.2byte	0x23e
 3637 1058 C7090000 		.4byte	0x9c7
 3638 105c EF060000 		.4byte	.LLST43
 3639 1060 1F       		.uleb128 0x1f
 3640 1061 42000000 		.4byte	.LVL138
 3641 1065 370B0000 		.4byte	0xb37
 3642 1069 20       		.uleb128 0x20
 3643 106a 01       		.uleb128 0x1
 3644 106b 50       		.byte	0x50
 3645 106c 02       		.uleb128 0x2
 3646 106d 76       		.byte	0x76
 3647 106e 00       		.sleb128 0
 3648 106f 20       		.uleb128 0x20
 3649 1070 01       		.uleb128 0x1
 3650 1071 51       		.byte	0x51
 3651 1072 02       		.uleb128 0x2
 3652 1073 75       		.byte	0x75
 3653 1074 00       		.sleb128 0
 3654 1075 00       		.byte	0
 3655 1076 00       		.byte	0
 3656 1077 22       		.uleb128 0x22
 3657 1078 16000000 		.4byte	.LVL134
 3658 107c FC120000 		.4byte	0x12fc
 3659 1080 1F       		.uleb128 0x1f
 3660 1081 50000000 		.4byte	.LVL141
 3661 1085 07130000 		.4byte	0x1307
ARM GAS  e:\temp\ccrFbtw8.s 			page 82


 3662 1089 20       		.uleb128 0x20
 3663 108a 01       		.uleb128 0x1
 3664 108b 50       		.byte	0x50
 3665 108c 04       		.uleb128 0x4
 3666 108d 91       		.byte	0x91
 3667 108e 64       		.sleb128 -28
 3668 108f 94       		.byte	0x94
 3669 1090 01       		.byte	0x1
 3670 1091 00       		.byte	0
 3671 1092 00       		.byte	0
 3672 1093 27       		.uleb128 0x27
 3673 1094 27090000 		.4byte	.LASF184
 3674 1098 01       		.byte	0x1
 3675 1099 4A02     		.2byte	0x24a
 3676 109b 670E0000 		.4byte	0xe67
 3677 109f 00000000 		.4byte	.LFB47
 3678 10a3 12000000 		.4byte	.LFE47-.LFB47
 3679 10a7 01       		.uleb128 0x1
 3680 10a8 9C       		.byte	0x9c
 3681 10a9 E6100000 		.4byte	0x10e6
 3682 10ad 1C       		.uleb128 0x1c
 3683 10ae 06010000 		.4byte	.LASF164
 3684 10b2 01       		.byte	0x1
 3685 10b3 4A02     		.2byte	0x24a
 3686 10b5 A2000000 		.4byte	0xa2
 3687 10b9 02070000 		.4byte	.LLST44
 3688 10bd 28       		.uleb128 0x28
 3689 10be 696400   		.ascii	"id\000"
 3690 10c1 01       		.byte	0x1
 3691 10c2 4A02     		.2byte	0x24a
 3692 10c4 C7090000 		.4byte	0x9c7
 3693 10c8 23070000 		.4byte	.LLST45
 3694 10cc 1D       		.uleb128 0x1d
 3695 10cd 2A080000 		.4byte	.LASF165
 3696 10d1 01       		.byte	0x1
 3697 10d2 4C02     		.2byte	0x24c
 3698 10d4 A2000000 		.4byte	0xa2
 3699 10d8 44070000 		.4byte	.LLST46
 3700 10dc 22       		.uleb128 0x22
 3701 10dd 06000000 		.4byte	.LVL143
 3702 10e1 CA0A0000 		.4byte	0xaca
 3703 10e5 00       		.byte	0
 3704 10e6 27       		.uleb128 0x27
 3705 10e7 79040000 		.4byte	.LASF185
 3706 10eb 01       		.byte	0x1
 3707 10ec 5702     		.2byte	0x257
 3708 10ee A2000000 		.4byte	0xa2
 3709 10f2 00000000 		.4byte	.LFB48
 3710 10f6 10000000 		.4byte	.LFE48-.LFB48
 3711 10fa 01       		.uleb128 0x1
 3712 10fb 9C       		.byte	0x9c
 3713 10fc 11110000 		.4byte	0x1111
 3714 1100 1C       		.uleb128 0x1c
 3715 1101 06010000 		.4byte	.LASF164
 3716 1105 01       		.byte	0x1
 3717 1106 5702     		.2byte	0x257
 3718 1108 A2000000 		.4byte	0xa2
ARM GAS  e:\temp\ccrFbtw8.s 			page 83


 3719 110c 62070000 		.4byte	.LLST47
 3720 1110 00       		.byte	0
 3721 1111 2A       		.uleb128 0x2a
 3722 1112 B1080000 		.4byte	.LASF186
 3723 1116 01       		.byte	0x1
 3724 1117 5C02     		.2byte	0x25c
 3725 1119 AD000000 		.4byte	0xad
 3726 111d 00000000 		.4byte	.LFB49
 3727 1121 6C000000 		.4byte	.LFE49-.LFB49
 3728 1125 01       		.uleb128 0x1
 3729 1126 9C       		.byte	0x9c
 3730 1127 E1110000 		.4byte	0x11e1
 3731 112b 1C       		.uleb128 0x1c
 3732 112c 06010000 		.4byte	.LASF164
 3733 1130 01       		.byte	0x1
 3734 1131 5C02     		.2byte	0x25c
 3735 1133 A2000000 		.4byte	0xa2
 3736 1137 83070000 		.4byte	.LLST48
 3737 113b 28       		.uleb128 0x28
 3738 113c 696400   		.ascii	"id\000"
 3739 113f 01       		.byte	0x1
 3740 1140 5C02     		.2byte	0x25c
 3741 1142 C7090000 		.4byte	0x9c7
 3742 1146 A4070000 		.4byte	.LLST49
 3743 114a 1D       		.uleb128 0x1d
 3744 114b 2A080000 		.4byte	.LASF165
 3745 114f 01       		.byte	0x1
 3746 1150 5E02     		.2byte	0x25e
 3747 1152 A2000000 		.4byte	0xa2
 3748 1156 C5070000 		.4byte	.LLST50
 3749 115a 1D       		.uleb128 0x1d
 3750 115b 83010000 		.4byte	.LASF175
 3751 115f 01       		.byte	0x1
 3752 1160 5E02     		.2byte	0x25e
 3753 1162 A2000000 		.4byte	0xa2
 3754 1166 E3070000 		.4byte	.LLST51
 3755 116a 1D       		.uleb128 0x1d
 3756 116b 00000000 		.4byte	.LASF154
 3757 116f 01       		.byte	0x1
 3758 1170 5F02     		.2byte	0x25f
 3759 1172 B8000000 		.4byte	0xb8
 3760 1176 F6070000 		.4byte	.LLST52
 3761 117a 2B       		.uleb128 0x2b
 3762 117b 00000000 		.4byte	.Ldebug_ranges0+0
 3763 117f AD110000 		.4byte	0x11ad
 3764 1183 1D       		.uleb128 0x1d
 3765 1184 3F020000 		.4byte	.LASF187
 3766 1188 01       		.byte	0x1
 3767 1189 6802     		.2byte	0x268
 3768 118b B8000000 		.4byte	0xb8
 3769 118f 42080000 		.4byte	.LLST53
 3770 1193 22       		.uleb128 0x22
 3771 1194 38000000 		.4byte	.LVL156
 3772 1198 690A0000 		.4byte	0xa69
 3773 119c 1F       		.uleb128 0x1f
 3774 119d 40000000 		.4byte	.LVL157
 3775 11a1 7F0A0000 		.4byte	0xa7f
ARM GAS  e:\temp\ccrFbtw8.s 			page 84


 3776 11a5 20       		.uleb128 0x20
 3777 11a6 01       		.uleb128 0x1
 3778 11a7 50       		.byte	0x50
 3779 11a8 02       		.uleb128 0x2
 3780 11a9 75       		.byte	0x75
 3781 11aa 00       		.sleb128 0
 3782 11ab 00       		.byte	0
 3783 11ac 00       		.byte	0
 3784 11ad 22       		.uleb128 0x22
 3785 11ae 0A000000 		.4byte	.LVL151
 3786 11b2 FC120000 		.4byte	0x12fc
 3787 11b6 23       		.uleb128 0x23
 3788 11b7 14000000 		.4byte	.LVL153
 3789 11bb CA0A0000 		.4byte	0xaca
 3790 11bf D0110000 		.4byte	0x11d0
 3791 11c3 20       		.uleb128 0x20
 3792 11c4 01       		.uleb128 0x1
 3793 11c5 50       		.byte	0x50
 3794 11c6 02       		.uleb128 0x2
 3795 11c7 75       		.byte	0x75
 3796 11c8 00       		.sleb128 0
 3797 11c9 20       		.uleb128 0x20
 3798 11ca 01       		.uleb128 0x1
 3799 11cb 51       		.byte	0x51
 3800 11cc 02       		.uleb128 0x2
 3801 11cd 76       		.byte	0x76
 3802 11ce 00       		.sleb128 0
 3803 11cf 00       		.byte	0
 3804 11d0 1F       		.uleb128 0x1f
 3805 11d1 5E000000 		.4byte	.LVL164
 3806 11d5 07130000 		.4byte	0x1307
 3807 11d9 20       		.uleb128 0x20
 3808 11da 01       		.uleb128 0x1
 3809 11db 50       		.byte	0x50
 3810 11dc 02       		.uleb128 0x2
 3811 11dd 74       		.byte	0x74
 3812 11de 00       		.sleb128 0
 3813 11df 00       		.byte	0
 3814 11e0 00       		.byte	0
 3815 11e1 2C       		.uleb128 0x2c
 3816 11e2 BF070000 		.4byte	.LASF207
 3817 11e6 01       		.byte	0x1
 3818 11e7 7E02     		.2byte	0x27e
 3819 11e9 AD000000 		.4byte	0xad
 3820 11ed 00000000 		.4byte	.LFB50
 3821 11f1 0C000000 		.4byte	.LFE50-.LFB50
 3822 11f5 01       		.uleb128 0x1
 3823 11f6 9C       		.byte	0x9c
 3824 11f7 26       		.uleb128 0x26
 3825 11f8 9C070000 		.4byte	.LASF188
 3826 11fc 01       		.byte	0x1
 3827 11fd 8802     		.2byte	0x288
 3828 11ff 00000000 		.4byte	.LFB51
 3829 1203 30000000 		.4byte	.LFE51-.LFB51
 3830 1207 01       		.uleb128 0x1
 3831 1208 9C       		.byte	0x9c
 3832 1209 1E120000 		.4byte	0x121e
ARM GAS  e:\temp\ccrFbtw8.s 			page 85


 3833 120d 1F       		.uleb128 0x1f
 3834 120e 26000000 		.4byte	.LVL167
 3835 1212 E6120000 		.4byte	0x12e6
 3836 1216 20       		.uleb128 0x20
 3837 1217 01       		.uleb128 0x1
 3838 1218 50       		.byte	0x50
 3839 1219 02       		.uleb128 0x2
 3840 121a 08       		.byte	0x8
 3841 121b 32       		.byte	0x32
 3842 121c 00       		.byte	0
 3843 121d 00       		.byte	0
 3844 121e 2D       		.uleb128 0x2d
 3845 121f 90000000 		.4byte	.LASF189
 3846 1223 01       		.byte	0x1
 3847 1224 62       		.byte	0x62
 3848 1225 AD000000 		.4byte	0xad
 3849 1229 05       		.uleb128 0x5
 3850 122a 03       		.byte	0x3
 3851 122b 00000000 		.4byte	gl_multiplier
 3852 122f 2D       		.uleb128 0x2d
 3853 1230 7F070000 		.4byte	.LASF190
 3854 1234 01       		.byte	0x1
 3855 1235 68       		.byte	0x68
 3856 1236 10010000 		.4byte	0x110
 3857 123a 05       		.uleb128 0x5
 3858 123b 03       		.byte	0x3
 3859 123c F2020000 		.4byte	gl_start_tick
 3860 1240 2D       		.uleb128 0x2d
 3861 1241 C5050000 		.4byte	.LASF191
 3862 1245 01       		.byte	0x1
 3863 1246 6A       		.byte	0x6a
 3864 1247 10010000 		.4byte	0x110
 3865 124b 05       		.uleb128 0x5
 3866 124c 03       		.byte	0x3
 3867 124d F4020000 		.4byte	gl_tick_time
 3868 1251 2D       		.uleb128 0x2d
 3869 1252 2B070000 		.4byte	.LASF192
 3870 1256 01       		.byte	0x1
 3871 1257 6C       		.byte	0x6c
 3872 1258 10010000 		.4byte	0x110
 3873 125c 05       		.uleb128 0x5
 3874 125d 03       		.byte	0x3
 3875 125e F0020000 		.4byte	gl_match
 3876 1262 06       		.uleb128 0x6
 3877 1263 78120000 		.4byte	0x1278
 3878 1267 78120000 		.4byte	0x1278
 3879 126b 07       		.uleb128 0x7
 3880 126c DF000000 		.4byte	0xdf
 3881 1270 01       		.byte	0x1
 3882 1271 07       		.uleb128 0x7
 3883 1272 DF000000 		.4byte	0xdf
 3884 1276 1E       		.byte	0x1e
 3885 1277 00       		.byte	0
 3886 1278 05       		.uleb128 0x5
 3887 1279 2A0A0000 		.4byte	0xa2a
 3888 127d 2D       		.uleb128 0x2d
 3889 127e 62010000 		.4byte	.LASF193
ARM GAS  e:\temp\ccrFbtw8.s 			page 86


 3890 1282 01       		.byte	0x1
 3891 1283 83       		.byte	0x83
 3892 1284 8E120000 		.4byte	0x128e
 3893 1288 05       		.uleb128 0x5
 3894 1289 03       		.byte	0x3
 3895 128a 04000000 		.4byte	gl_timer_handle
 3896 128e 05       		.uleb128 0x5
 3897 128f 62120000 		.4byte	0x1262
 3898 1293 2D       		.uleb128 0x2d
 3899 1294 D2050000 		.4byte	.LASF194
 3900 1298 01       		.byte	0x1
 3901 1299 86       		.byte	0x86
 3902 129a A4120000 		.4byte	0x12a4
 3903 129e 05       		.uleb128 0x5
 3904 129f 03       		.byte	0x3
 3905 12a0 EC020000 		.4byte	gl_num_active
 3906 12a4 05       		.uleb128 0x5
 3907 12a5 15010000 		.4byte	0x115
 3908 12a9 2D       		.uleb128 0x2d
 3909 12aa 71090000 		.4byte	.LASF195
 3910 12ae 01       		.byte	0x1
 3911 12af 87       		.byte	0x87
 3912 12b0 0B010000 		.4byte	0x10b
 3913 12b4 05       		.uleb128 0x5
 3914 12b5 03       		.byte	0x3
 3915 12b6 EE020000 		.4byte	gl_total_active
 3916 12ba 2D       		.uleb128 0x2d
 3917 12bb 8A040000 		.4byte	.LASF196
 3918 12bf 01       		.byte	0x1
 3919 12c0 8A       		.byte	0x8a
 3920 12c1 CB120000 		.4byte	0x12cb
 3921 12c5 05       		.uleb128 0x5
 3922 12c6 03       		.byte	0x3
 3923 12c7 EF020000 		.4byte	gl_is_callback
 3924 12cb 05       		.uleb128 0x5
 3925 12cc 670E0000 		.4byte	0xe67
 3926 12d0 2E       		.uleb128 0x2e
 3927 12d1 A1010000 		.4byte	.LASF197
 3928 12d5 A1010000 		.4byte	.LASF197
 3929 12d9 06       		.byte	0x6
 3930 12da C5       		.byte	0xc5
 3931 12db 2E       		.uleb128 0x2e
 3932 12dc CF030000 		.4byte	.LASF198
 3933 12e0 CF030000 		.4byte	.LASF198
 3934 12e4 06       		.byte	0x6
 3935 12e5 BD       		.byte	0xbd
 3936 12e6 2E       		.uleb128 0x2e
 3937 12e7 58070000 		.4byte	.LASF199
 3938 12eb 58070000 		.4byte	.LASF199
 3939 12ef 06       		.byte	0x6
 3940 12f0 DA       		.byte	0xda
 3941 12f1 2E       		.uleb128 0x2e
 3942 12f2 0D070000 		.4byte	.LASF200
 3943 12f6 0D070000 		.4byte	.LASF200
 3944 12fa 06       		.byte	0x6
 3945 12fb C3       		.byte	0xc3
 3946 12fc 2E       		.uleb128 0x2e
ARM GAS  e:\temp\ccrFbtw8.s 			page 87


 3947 12fd 8A030000 		.4byte	.LASF201
 3948 1301 8A030000 		.4byte	.LASF201
 3949 1305 06       		.byte	0x6
 3950 1306 E5       		.byte	0xe5
 3951 1307 2E       		.uleb128 0x2e
 3952 1308 0B000000 		.4byte	.LASF202
 3953 130c 0B000000 		.4byte	.LASF202
 3954 1310 06       		.byte	0x6
 3955 1311 E6       		.byte	0xe6
 3956 1312 00       		.byte	0
 3957              		.section	.debug_abbrev,"",%progbits
 3958              	.Ldebug_abbrev0:
 3959 0000 01       		.uleb128 0x1
 3960 0001 11       		.uleb128 0x11
 3961 0002 01       		.byte	0x1
 3962 0003 25       		.uleb128 0x25
 3963 0004 0E       		.uleb128 0xe
 3964 0005 13       		.uleb128 0x13
 3965 0006 0B       		.uleb128 0xb
 3966 0007 03       		.uleb128 0x3
 3967 0008 0E       		.uleb128 0xe
 3968 0009 1B       		.uleb128 0x1b
 3969 000a 0E       		.uleb128 0xe
 3970 000b 55       		.uleb128 0x55
 3971 000c 17       		.uleb128 0x17
 3972 000d 11       		.uleb128 0x11
 3973 000e 01       		.uleb128 0x1
 3974 000f 10       		.uleb128 0x10
 3975 0010 17       		.uleb128 0x17
 3976 0011 00       		.byte	0
 3977 0012 00       		.byte	0
 3978 0013 02       		.uleb128 0x2
 3979 0014 16       		.uleb128 0x16
 3980 0015 00       		.byte	0
 3981 0016 03       		.uleb128 0x3
 3982 0017 0E       		.uleb128 0xe
 3983 0018 3A       		.uleb128 0x3a
 3984 0019 0B       		.uleb128 0xb
 3985 001a 3B       		.uleb128 0x3b
 3986 001b 0B       		.uleb128 0xb
 3987 001c 49       		.uleb128 0x49
 3988 001d 13       		.uleb128 0x13
 3989 001e 00       		.byte	0
 3990 001f 00       		.byte	0
 3991 0020 03       		.uleb128 0x3
 3992 0021 24       		.uleb128 0x24
 3993 0022 00       		.byte	0
 3994 0023 0B       		.uleb128 0xb
 3995 0024 0B       		.uleb128 0xb
 3996 0025 3E       		.uleb128 0x3e
 3997 0026 0B       		.uleb128 0xb
 3998 0027 03       		.uleb128 0x3
 3999 0028 0E       		.uleb128 0xe
 4000 0029 00       		.byte	0
 4001 002a 00       		.byte	0
 4002 002b 04       		.uleb128 0x4
 4003 002c 24       		.uleb128 0x24
ARM GAS  e:\temp\ccrFbtw8.s 			page 88


 4004 002d 00       		.byte	0
 4005 002e 0B       		.uleb128 0xb
 4006 002f 0B       		.uleb128 0xb
 4007 0030 3E       		.uleb128 0x3e
 4008 0031 0B       		.uleb128 0xb
 4009 0032 03       		.uleb128 0x3
 4010 0033 08       		.uleb128 0x8
 4011 0034 00       		.byte	0
 4012 0035 00       		.byte	0
 4013 0036 05       		.uleb128 0x5
 4014 0037 35       		.uleb128 0x35
 4015 0038 00       		.byte	0
 4016 0039 49       		.uleb128 0x49
 4017 003a 13       		.uleb128 0x13
 4018 003b 00       		.byte	0
 4019 003c 00       		.byte	0
 4020 003d 06       		.uleb128 0x6
 4021 003e 01       		.uleb128 0x1
 4022 003f 01       		.byte	0x1
 4023 0040 49       		.uleb128 0x49
 4024 0041 13       		.uleb128 0x13
 4025 0042 01       		.uleb128 0x1
 4026 0043 13       		.uleb128 0x13
 4027 0044 00       		.byte	0
 4028 0045 00       		.byte	0
 4029 0046 07       		.uleb128 0x7
 4030 0047 21       		.uleb128 0x21
 4031 0048 00       		.byte	0
 4032 0049 49       		.uleb128 0x49
 4033 004a 13       		.uleb128 0x13
 4034 004b 2F       		.uleb128 0x2f
 4035 004c 0B       		.uleb128 0xb
 4036 004d 00       		.byte	0
 4037 004e 00       		.byte	0
 4038 004f 08       		.uleb128 0x8
 4039 0050 13       		.uleb128 0x13
 4040 0051 01       		.byte	0x1
 4041 0052 0B       		.uleb128 0xb
 4042 0053 05       		.uleb128 0x5
 4043 0054 3A       		.uleb128 0x3a
 4044 0055 0B       		.uleb128 0xb
 4045 0056 3B       		.uleb128 0x3b
 4046 0057 0B       		.uleb128 0xb
 4047 0058 01       		.uleb128 0x1
 4048 0059 13       		.uleb128 0x13
 4049 005a 00       		.byte	0
 4050 005b 00       		.byte	0
 4051 005c 09       		.uleb128 0x9
 4052 005d 0D       		.uleb128 0xd
 4053 005e 00       		.byte	0
 4054 005f 03       		.uleb128 0x3
 4055 0060 0E       		.uleb128 0xe
 4056 0061 3A       		.uleb128 0x3a
 4057 0062 0B       		.uleb128 0xb
 4058 0063 3B       		.uleb128 0x3b
 4059 0064 0B       		.uleb128 0xb
 4060 0065 49       		.uleb128 0x49
ARM GAS  e:\temp\ccrFbtw8.s 			page 89


 4061 0066 13       		.uleb128 0x13
 4062 0067 38       		.uleb128 0x38
 4063 0068 0B       		.uleb128 0xb
 4064 0069 00       		.byte	0
 4065 006a 00       		.byte	0
 4066 006b 0A       		.uleb128 0xa
 4067 006c 0D       		.uleb128 0xd
 4068 006d 00       		.byte	0
 4069 006e 03       		.uleb128 0x3
 4070 006f 0E       		.uleb128 0xe
 4071 0070 3A       		.uleb128 0x3a
 4072 0071 0B       		.uleb128 0xb
 4073 0072 3B       		.uleb128 0x3b
 4074 0073 0B       		.uleb128 0xb
 4075 0074 49       		.uleb128 0x49
 4076 0075 13       		.uleb128 0x13
 4077 0076 38       		.uleb128 0x38
 4078 0077 05       		.uleb128 0x5
 4079 0078 00       		.byte	0
 4080 0079 00       		.byte	0
 4081 007a 0B       		.uleb128 0xb
 4082 007b 21       		.uleb128 0x21
 4083 007c 00       		.byte	0
 4084 007d 49       		.uleb128 0x49
 4085 007e 13       		.uleb128 0x13
 4086 007f 2F       		.uleb128 0x2f
 4087 0080 05       		.uleb128 0x5
 4088 0081 00       		.byte	0
 4089 0082 00       		.byte	0
 4090 0083 0C       		.uleb128 0xc
 4091 0084 0F       		.uleb128 0xf
 4092 0085 00       		.byte	0
 4093 0086 0B       		.uleb128 0xb
 4094 0087 0B       		.uleb128 0xb
 4095 0088 49       		.uleb128 0x49
 4096 0089 13       		.uleb128 0x13
 4097 008a 00       		.byte	0
 4098 008b 00       		.byte	0
 4099 008c 0D       		.uleb128 0xd
 4100 008d 13       		.uleb128 0x13
 4101 008e 01       		.byte	0x1
 4102 008f 0B       		.uleb128 0xb
 4103 0090 06       		.uleb128 0x6
 4104 0091 3A       		.uleb128 0x3a
 4105 0092 0B       		.uleb128 0xb
 4106 0093 3B       		.uleb128 0x3b
 4107 0094 05       		.uleb128 0x5
 4108 0095 01       		.uleb128 0x1
 4109 0096 13       		.uleb128 0x13
 4110 0097 00       		.byte	0
 4111 0098 00       		.byte	0
 4112 0099 0E       		.uleb128 0xe
 4113 009a 0D       		.uleb128 0xd
 4114 009b 00       		.byte	0
 4115 009c 03       		.uleb128 0x3
 4116 009d 0E       		.uleb128 0xe
 4117 009e 3A       		.uleb128 0x3a
ARM GAS  e:\temp\ccrFbtw8.s 			page 90


 4118 009f 0B       		.uleb128 0xb
 4119 00a0 3B       		.uleb128 0x3b
 4120 00a1 05       		.uleb128 0x5
 4121 00a2 49       		.uleb128 0x49
 4122 00a3 13       		.uleb128 0x13
 4123 00a4 38       		.uleb128 0x38
 4124 00a5 0B       		.uleb128 0xb
 4125 00a6 00       		.byte	0
 4126 00a7 00       		.byte	0
 4127 00a8 0F       		.uleb128 0xf
 4128 00a9 0D       		.uleb128 0xd
 4129 00aa 00       		.byte	0
 4130 00ab 03       		.uleb128 0x3
 4131 00ac 0E       		.uleb128 0xe
 4132 00ad 3A       		.uleb128 0x3a
 4133 00ae 0B       		.uleb128 0xb
 4134 00af 3B       		.uleb128 0x3b
 4135 00b0 05       		.uleb128 0x5
 4136 00b1 49       		.uleb128 0x49
 4137 00b2 13       		.uleb128 0x13
 4138 00b3 38       		.uleb128 0x38
 4139 00b4 05       		.uleb128 0x5
 4140 00b5 00       		.byte	0
 4141 00b6 00       		.byte	0
 4142 00b7 10       		.uleb128 0x10
 4143 00b8 0D       		.uleb128 0xd
 4144 00b9 00       		.byte	0
 4145 00ba 03       		.uleb128 0x3
 4146 00bb 08       		.uleb128 0x8
 4147 00bc 3A       		.uleb128 0x3a
 4148 00bd 0B       		.uleb128 0xb
 4149 00be 3B       		.uleb128 0x3b
 4150 00bf 05       		.uleb128 0x5
 4151 00c0 49       		.uleb128 0x49
 4152 00c1 13       		.uleb128 0x13
 4153 00c2 38       		.uleb128 0x38
 4154 00c3 05       		.uleb128 0x5
 4155 00c4 00       		.byte	0
 4156 00c5 00       		.byte	0
 4157 00c6 11       		.uleb128 0x11
 4158 00c7 0D       		.uleb128 0xd
 4159 00c8 00       		.byte	0
 4160 00c9 03       		.uleb128 0x3
 4161 00ca 0E       		.uleb128 0xe
 4162 00cb 3A       		.uleb128 0x3a
 4163 00cc 0B       		.uleb128 0xb
 4164 00cd 3B       		.uleb128 0x3b
 4165 00ce 05       		.uleb128 0x5
 4166 00cf 49       		.uleb128 0x49
 4167 00d0 13       		.uleb128 0x13
 4168 00d1 38       		.uleb128 0x38
 4169 00d2 06       		.uleb128 0x6
 4170 00d3 00       		.byte	0
 4171 00d4 00       		.byte	0
 4172 00d5 12       		.uleb128 0x12
 4173 00d6 21       		.uleb128 0x21
 4174 00d7 00       		.byte	0
ARM GAS  e:\temp\ccrFbtw8.s 			page 91


 4175 00d8 49       		.uleb128 0x49
 4176 00d9 13       		.uleb128 0x13
 4177 00da 2F       		.uleb128 0x2f
 4178 00db 06       		.uleb128 0x6
 4179 00dc 00       		.byte	0
 4180 00dd 00       		.byte	0
 4181 00de 13       		.uleb128 0x13
 4182 00df 16       		.uleb128 0x16
 4183 00e0 00       		.byte	0
 4184 00e1 03       		.uleb128 0x3
 4185 00e2 0E       		.uleb128 0xe
 4186 00e3 3A       		.uleb128 0x3a
 4187 00e4 0B       		.uleb128 0xb
 4188 00e5 3B       		.uleb128 0x3b
 4189 00e6 05       		.uleb128 0x5
 4190 00e7 49       		.uleb128 0x49
 4191 00e8 13       		.uleb128 0x13
 4192 00e9 00       		.byte	0
 4193 00ea 00       		.byte	0
 4194 00eb 14       		.uleb128 0x14
 4195 00ec 15       		.uleb128 0x15
 4196 00ed 01       		.byte	0x1
 4197 00ee 27       		.uleb128 0x27
 4198 00ef 19       		.uleb128 0x19
 4199 00f0 01       		.uleb128 0x1
 4200 00f1 13       		.uleb128 0x13
 4201 00f2 00       		.byte	0
 4202 00f3 00       		.byte	0
 4203 00f4 15       		.uleb128 0x15
 4204 00f5 05       		.uleb128 0x5
 4205 00f6 00       		.byte	0
 4206 00f7 49       		.uleb128 0x49
 4207 00f8 13       		.uleb128 0x13
 4208 00f9 00       		.byte	0
 4209 00fa 00       		.byte	0
 4210 00fb 16       		.uleb128 0x16
 4211 00fc 13       		.uleb128 0x13
 4212 00fd 01       		.byte	0x1
 4213 00fe 0B       		.uleb128 0xb
 4214 00ff 0B       		.uleb128 0xb
 4215 0100 3A       		.uleb128 0x3a
 4216 0101 0B       		.uleb128 0xb
 4217 0102 3B       		.uleb128 0x3b
 4218 0103 0B       		.uleb128 0xb
 4219 0104 01       		.uleb128 0x1
 4220 0105 13       		.uleb128 0x13
 4221 0106 00       		.byte	0
 4222 0107 00       		.byte	0
 4223 0108 17       		.uleb128 0x17
 4224 0109 0D       		.uleb128 0xd
 4225 010a 00       		.byte	0
 4226 010b 03       		.uleb128 0x3
 4227 010c 08       		.uleb128 0x8
 4228 010d 3A       		.uleb128 0x3a
 4229 010e 0B       		.uleb128 0xb
 4230 010f 3B       		.uleb128 0x3b
 4231 0110 0B       		.uleb128 0xb
ARM GAS  e:\temp\ccrFbtw8.s 			page 92


 4232 0111 49       		.uleb128 0x49
 4233 0112 13       		.uleb128 0x13
 4234 0113 38       		.uleb128 0x38
 4235 0114 0B       		.uleb128 0xb
 4236 0115 00       		.byte	0
 4237 0116 00       		.byte	0
 4238 0117 18       		.uleb128 0x18
 4239 0118 2E       		.uleb128 0x2e
 4240 0119 01       		.byte	0x1
 4241 011a 03       		.uleb128 0x3
 4242 011b 0E       		.uleb128 0xe
 4243 011c 3A       		.uleb128 0x3a
 4244 011d 0B       		.uleb128 0xb
 4245 011e 3B       		.uleb128 0x3b
 4246 011f 0B       		.uleb128 0xb
 4247 0120 27       		.uleb128 0x27
 4248 0121 19       		.uleb128 0x19
 4249 0122 11       		.uleb128 0x11
 4250 0123 01       		.uleb128 0x1
 4251 0124 12       		.uleb128 0x12
 4252 0125 06       		.uleb128 0x6
 4253 0126 40       		.uleb128 0x40
 4254 0127 18       		.uleb128 0x18
 4255 0128 9742     		.uleb128 0x2117
 4256 012a 19       		.uleb128 0x19
 4257 012b 01       		.uleb128 0x1
 4258 012c 13       		.uleb128 0x13
 4259 012d 00       		.byte	0
 4260 012e 00       		.byte	0
 4261 012f 19       		.uleb128 0x19
 4262 0130 34       		.uleb128 0x34
 4263 0131 00       		.byte	0
 4264 0132 03       		.uleb128 0x3
 4265 0133 0E       		.uleb128 0xe
 4266 0134 3A       		.uleb128 0x3a
 4267 0135 0B       		.uleb128 0xb
 4268 0136 3B       		.uleb128 0x3b
 4269 0137 0B       		.uleb128 0xb
 4270 0138 49       		.uleb128 0x49
 4271 0139 13       		.uleb128 0x13
 4272 013a 02       		.uleb128 0x2
 4273 013b 17       		.uleb128 0x17
 4274 013c 00       		.byte	0
 4275 013d 00       		.byte	0
 4276 013e 1A       		.uleb128 0x1a
 4277 013f 2E       		.uleb128 0x2e
 4278 0140 00       		.byte	0
 4279 0141 03       		.uleb128 0x3
 4280 0142 0E       		.uleb128 0xe
 4281 0143 3A       		.uleb128 0x3a
 4282 0144 0B       		.uleb128 0xb
 4283 0145 3B       		.uleb128 0x3b
 4284 0146 05       		.uleb128 0x5
 4285 0147 27       		.uleb128 0x27
 4286 0148 19       		.uleb128 0x19
 4287 0149 49       		.uleb128 0x49
 4288 014a 13       		.uleb128 0x13
ARM GAS  e:\temp\ccrFbtw8.s 			page 93


 4289 014b 11       		.uleb128 0x11
 4290 014c 01       		.uleb128 0x1
 4291 014d 12       		.uleb128 0x12
 4292 014e 06       		.uleb128 0x6
 4293 014f 40       		.uleb128 0x40
 4294 0150 18       		.uleb128 0x18
 4295 0151 9742     		.uleb128 0x2117
 4296 0153 19       		.uleb128 0x19
 4297 0154 00       		.byte	0
 4298 0155 00       		.byte	0
 4299 0156 1B       		.uleb128 0x1b
 4300 0157 2E       		.uleb128 0x2e
 4301 0158 01       		.byte	0x1
 4302 0159 03       		.uleb128 0x3
 4303 015a 0E       		.uleb128 0xe
 4304 015b 3A       		.uleb128 0x3a
 4305 015c 0B       		.uleb128 0xb
 4306 015d 3B       		.uleb128 0x3b
 4307 015e 05       		.uleb128 0x5
 4308 015f 27       		.uleb128 0x27
 4309 0160 19       		.uleb128 0x19
 4310 0161 49       		.uleb128 0x49
 4311 0162 13       		.uleb128 0x13
 4312 0163 11       		.uleb128 0x11
 4313 0164 01       		.uleb128 0x1
 4314 0165 12       		.uleb128 0x12
 4315 0166 06       		.uleb128 0x6
 4316 0167 40       		.uleb128 0x40
 4317 0168 18       		.uleb128 0x18
 4318 0169 9742     		.uleb128 0x2117
 4319 016b 19       		.uleb128 0x19
 4320 016c 01       		.uleb128 0x1
 4321 016d 13       		.uleb128 0x13
 4322 016e 00       		.byte	0
 4323 016f 00       		.byte	0
 4324 0170 1C       		.uleb128 0x1c
 4325 0171 05       		.uleb128 0x5
 4326 0172 00       		.byte	0
 4327 0173 03       		.uleb128 0x3
 4328 0174 0E       		.uleb128 0xe
 4329 0175 3A       		.uleb128 0x3a
 4330 0176 0B       		.uleb128 0xb
 4331 0177 3B       		.uleb128 0x3b
 4332 0178 05       		.uleb128 0x5
 4333 0179 49       		.uleb128 0x49
 4334 017a 13       		.uleb128 0x13
 4335 017b 02       		.uleb128 0x2
 4336 017c 17       		.uleb128 0x17
 4337 017d 00       		.byte	0
 4338 017e 00       		.byte	0
 4339 017f 1D       		.uleb128 0x1d
 4340 0180 34       		.uleb128 0x34
 4341 0181 00       		.byte	0
 4342 0182 03       		.uleb128 0x3
 4343 0183 0E       		.uleb128 0xe
 4344 0184 3A       		.uleb128 0x3a
 4345 0185 0B       		.uleb128 0xb
ARM GAS  e:\temp\ccrFbtw8.s 			page 94


 4346 0186 3B       		.uleb128 0x3b
 4347 0187 05       		.uleb128 0x5
 4348 0188 49       		.uleb128 0x49
 4349 0189 13       		.uleb128 0x13
 4350 018a 02       		.uleb128 0x2
 4351 018b 17       		.uleb128 0x17
 4352 018c 00       		.byte	0
 4353 018d 00       		.byte	0
 4354 018e 1E       		.uleb128 0x1e
 4355 018f 05       		.uleb128 0x5
 4356 0190 00       		.byte	0
 4357 0191 03       		.uleb128 0x3
 4358 0192 08       		.uleb128 0x8
 4359 0193 3A       		.uleb128 0x3a
 4360 0194 0B       		.uleb128 0xb
 4361 0195 3B       		.uleb128 0x3b
 4362 0196 05       		.uleb128 0x5
 4363 0197 49       		.uleb128 0x49
 4364 0198 13       		.uleb128 0x13
 4365 0199 02       		.uleb128 0x2
 4366 019a 18       		.uleb128 0x18
 4367 019b 00       		.byte	0
 4368 019c 00       		.byte	0
 4369 019d 1F       		.uleb128 0x1f
 4370 019e 898201   		.uleb128 0x4109
 4371 01a1 01       		.byte	0x1
 4372 01a2 11       		.uleb128 0x11
 4373 01a3 01       		.uleb128 0x1
 4374 01a4 31       		.uleb128 0x31
 4375 01a5 13       		.uleb128 0x13
 4376 01a6 00       		.byte	0
 4377 01a7 00       		.byte	0
 4378 01a8 20       		.uleb128 0x20
 4379 01a9 8A8201   		.uleb128 0x410a
 4380 01ac 00       		.byte	0
 4381 01ad 02       		.uleb128 0x2
 4382 01ae 18       		.uleb128 0x18
 4383 01af 9142     		.uleb128 0x2111
 4384 01b1 18       		.uleb128 0x18
 4385 01b2 00       		.byte	0
 4386 01b3 00       		.byte	0
 4387 01b4 21       		.uleb128 0x21
 4388 01b5 2E       		.uleb128 0x2e
 4389 01b6 01       		.byte	0x1
 4390 01b7 03       		.uleb128 0x3
 4391 01b8 0E       		.uleb128 0xe
 4392 01b9 3A       		.uleb128 0x3a
 4393 01ba 0B       		.uleb128 0xb
 4394 01bb 3B       		.uleb128 0x3b
 4395 01bc 05       		.uleb128 0x5
 4396 01bd 27       		.uleb128 0x27
 4397 01be 19       		.uleb128 0x19
 4398 01bf 11       		.uleb128 0x11
 4399 01c0 01       		.uleb128 0x1
 4400 01c1 12       		.uleb128 0x12
 4401 01c2 06       		.uleb128 0x6
 4402 01c3 40       		.uleb128 0x40
ARM GAS  e:\temp\ccrFbtw8.s 			page 95


 4403 01c4 18       		.uleb128 0x18
 4404 01c5 9742     		.uleb128 0x2117
 4405 01c7 19       		.uleb128 0x19
 4406 01c8 01       		.uleb128 0x1
 4407 01c9 13       		.uleb128 0x13
 4408 01ca 00       		.byte	0
 4409 01cb 00       		.byte	0
 4410 01cc 22       		.uleb128 0x22
 4411 01cd 898201   		.uleb128 0x4109
 4412 01d0 00       		.byte	0
 4413 01d1 11       		.uleb128 0x11
 4414 01d2 01       		.uleb128 0x1
 4415 01d3 31       		.uleb128 0x31
 4416 01d4 13       		.uleb128 0x13
 4417 01d5 00       		.byte	0
 4418 01d6 00       		.byte	0
 4419 01d7 23       		.uleb128 0x23
 4420 01d8 898201   		.uleb128 0x4109
 4421 01db 01       		.byte	0x1
 4422 01dc 11       		.uleb128 0x11
 4423 01dd 01       		.uleb128 0x1
 4424 01de 31       		.uleb128 0x31
 4425 01df 13       		.uleb128 0x13
 4426 01e0 01       		.uleb128 0x1
 4427 01e1 13       		.uleb128 0x13
 4428 01e2 00       		.byte	0
 4429 01e3 00       		.byte	0
 4430 01e4 24       		.uleb128 0x24
 4431 01e5 34       		.uleb128 0x34
 4432 01e6 00       		.byte	0
 4433 01e7 03       		.uleb128 0x3
 4434 01e8 08       		.uleb128 0x8
 4435 01e9 3A       		.uleb128 0x3a
 4436 01ea 0B       		.uleb128 0xb
 4437 01eb 3B       		.uleb128 0x3b
 4438 01ec 05       		.uleb128 0x5
 4439 01ed 49       		.uleb128 0x49
 4440 01ee 13       		.uleb128 0x13
 4441 01ef 02       		.uleb128 0x2
 4442 01f0 17       		.uleb128 0x17
 4443 01f1 00       		.byte	0
 4444 01f2 00       		.byte	0
 4445 01f3 25       		.uleb128 0x25
 4446 01f4 898201   		.uleb128 0x4109
 4447 01f7 01       		.byte	0x1
 4448 01f8 11       		.uleb128 0x11
 4449 01f9 01       		.uleb128 0x1
 4450 01fa 01       		.uleb128 0x1
 4451 01fb 13       		.uleb128 0x13
 4452 01fc 00       		.byte	0
 4453 01fd 00       		.byte	0
 4454 01fe 26       		.uleb128 0x26
 4455 01ff 2E       		.uleb128 0x2e
 4456 0200 01       		.byte	0x1
 4457 0201 3F       		.uleb128 0x3f
 4458 0202 19       		.uleb128 0x19
 4459 0203 03       		.uleb128 0x3
ARM GAS  e:\temp\ccrFbtw8.s 			page 96


 4460 0204 0E       		.uleb128 0xe
 4461 0205 3A       		.uleb128 0x3a
 4462 0206 0B       		.uleb128 0xb
 4463 0207 3B       		.uleb128 0x3b
 4464 0208 05       		.uleb128 0x5
 4465 0209 27       		.uleb128 0x27
 4466 020a 19       		.uleb128 0x19
 4467 020b 11       		.uleb128 0x11
 4468 020c 01       		.uleb128 0x1
 4469 020d 12       		.uleb128 0x12
 4470 020e 06       		.uleb128 0x6
 4471 020f 40       		.uleb128 0x40
 4472 0210 18       		.uleb128 0x18
 4473 0211 9742     		.uleb128 0x2117
 4474 0213 19       		.uleb128 0x19
 4475 0214 01       		.uleb128 0x1
 4476 0215 13       		.uleb128 0x13
 4477 0216 00       		.byte	0
 4478 0217 00       		.byte	0
 4479 0218 27       		.uleb128 0x27
 4480 0219 2E       		.uleb128 0x2e
 4481 021a 01       		.byte	0x1
 4482 021b 3F       		.uleb128 0x3f
 4483 021c 19       		.uleb128 0x19
 4484 021d 03       		.uleb128 0x3
 4485 021e 0E       		.uleb128 0xe
 4486 021f 3A       		.uleb128 0x3a
 4487 0220 0B       		.uleb128 0xb
 4488 0221 3B       		.uleb128 0x3b
 4489 0222 05       		.uleb128 0x5
 4490 0223 27       		.uleb128 0x27
 4491 0224 19       		.uleb128 0x19
 4492 0225 49       		.uleb128 0x49
 4493 0226 13       		.uleb128 0x13
 4494 0227 11       		.uleb128 0x11
 4495 0228 01       		.uleb128 0x1
 4496 0229 12       		.uleb128 0x12
 4497 022a 06       		.uleb128 0x6
 4498 022b 40       		.uleb128 0x40
 4499 022c 18       		.uleb128 0x18
 4500 022d 9742     		.uleb128 0x2117
 4501 022f 19       		.uleb128 0x19
 4502 0230 01       		.uleb128 0x1
 4503 0231 13       		.uleb128 0x13
 4504 0232 00       		.byte	0
 4505 0233 00       		.byte	0
 4506 0234 28       		.uleb128 0x28
 4507 0235 05       		.uleb128 0x5
 4508 0236 00       		.byte	0
 4509 0237 03       		.uleb128 0x3
 4510 0238 08       		.uleb128 0x8
 4511 0239 3A       		.uleb128 0x3a
 4512 023a 0B       		.uleb128 0xb
 4513 023b 3B       		.uleb128 0x3b
 4514 023c 05       		.uleb128 0x5
 4515 023d 49       		.uleb128 0x49
 4516 023e 13       		.uleb128 0x13
ARM GAS  e:\temp\ccrFbtw8.s 			page 97


 4517 023f 02       		.uleb128 0x2
 4518 0240 17       		.uleb128 0x17
 4519 0241 00       		.byte	0
 4520 0242 00       		.byte	0
 4521 0243 29       		.uleb128 0x29
 4522 0244 0B       		.uleb128 0xb
 4523 0245 01       		.byte	0x1
 4524 0246 11       		.uleb128 0x11
 4525 0247 01       		.uleb128 0x1
 4526 0248 12       		.uleb128 0x12
 4527 0249 06       		.uleb128 0x6
 4528 024a 01       		.uleb128 0x1
 4529 024b 13       		.uleb128 0x13
 4530 024c 00       		.byte	0
 4531 024d 00       		.byte	0
 4532 024e 2A       		.uleb128 0x2a
 4533 024f 2E       		.uleb128 0x2e
 4534 0250 01       		.byte	0x1
 4535 0251 3F       		.uleb128 0x3f
 4536 0252 19       		.uleb128 0x19
 4537 0253 03       		.uleb128 0x3
 4538 0254 0E       		.uleb128 0xe
 4539 0255 3A       		.uleb128 0x3a
 4540 0256 0B       		.uleb128 0xb
 4541 0257 3B       		.uleb128 0x3b
 4542 0258 05       		.uleb128 0x5
 4543 0259 27       		.uleb128 0x27
 4544 025a 19       		.uleb128 0x19
 4545 025b 49       		.uleb128 0x49
 4546 025c 13       		.uleb128 0x13
 4547 025d 11       		.uleb128 0x11
 4548 025e 01       		.uleb128 0x1
 4549 025f 12       		.uleb128 0x12
 4550 0260 06       		.uleb128 0x6
 4551 0261 40       		.uleb128 0x40
 4552 0262 18       		.uleb128 0x18
 4553 0263 9642     		.uleb128 0x2116
 4554 0265 19       		.uleb128 0x19
 4555 0266 01       		.uleb128 0x1
 4556 0267 13       		.uleb128 0x13
 4557 0268 00       		.byte	0
 4558 0269 00       		.byte	0
 4559 026a 2B       		.uleb128 0x2b
 4560 026b 0B       		.uleb128 0xb
 4561 026c 01       		.byte	0x1
 4562 026d 55       		.uleb128 0x55
 4563 026e 17       		.uleb128 0x17
 4564 026f 01       		.uleb128 0x1
 4565 0270 13       		.uleb128 0x13
 4566 0271 00       		.byte	0
 4567 0272 00       		.byte	0
 4568 0273 2C       		.uleb128 0x2c
 4569 0274 2E       		.uleb128 0x2e
 4570 0275 00       		.byte	0
 4571 0276 3F       		.uleb128 0x3f
 4572 0277 19       		.uleb128 0x19
 4573 0278 03       		.uleb128 0x3
ARM GAS  e:\temp\ccrFbtw8.s 			page 98


 4574 0279 0E       		.uleb128 0xe
 4575 027a 3A       		.uleb128 0x3a
 4576 027b 0B       		.uleb128 0xb
 4577 027c 3B       		.uleb128 0x3b
 4578 027d 05       		.uleb128 0x5
 4579 027e 27       		.uleb128 0x27
 4580 027f 19       		.uleb128 0x19
 4581 0280 49       		.uleb128 0x49
 4582 0281 13       		.uleb128 0x13
 4583 0282 11       		.uleb128 0x11
 4584 0283 01       		.uleb128 0x1
 4585 0284 12       		.uleb128 0x12
 4586 0285 06       		.uleb128 0x6
 4587 0286 40       		.uleb128 0x40
 4588 0287 18       		.uleb128 0x18
 4589 0288 9742     		.uleb128 0x2117
 4590 028a 19       		.uleb128 0x19
 4591 028b 00       		.byte	0
 4592 028c 00       		.byte	0
 4593 028d 2D       		.uleb128 0x2d
 4594 028e 34       		.uleb128 0x34
 4595 028f 00       		.byte	0
 4596 0290 03       		.uleb128 0x3
 4597 0291 0E       		.uleb128 0xe
 4598 0292 3A       		.uleb128 0x3a
 4599 0293 0B       		.uleb128 0xb
 4600 0294 3B       		.uleb128 0x3b
 4601 0295 0B       		.uleb128 0xb
 4602 0296 49       		.uleb128 0x49
 4603 0297 13       		.uleb128 0x13
 4604 0298 02       		.uleb128 0x2
 4605 0299 18       		.uleb128 0x18
 4606 029a 00       		.byte	0
 4607 029b 00       		.byte	0
 4608 029c 2E       		.uleb128 0x2e
 4609 029d 2E       		.uleb128 0x2e
 4610 029e 00       		.byte	0
 4611 029f 3F       		.uleb128 0x3f
 4612 02a0 19       		.uleb128 0x19
 4613 02a1 3C       		.uleb128 0x3c
 4614 02a2 19       		.uleb128 0x19
 4615 02a3 6E       		.uleb128 0x6e
 4616 02a4 0E       		.uleb128 0xe
 4617 02a5 03       		.uleb128 0x3
 4618 02a6 0E       		.uleb128 0xe
 4619 02a7 3A       		.uleb128 0x3a
 4620 02a8 0B       		.uleb128 0xb
 4621 02a9 3B       		.uleb128 0x3b
 4622 02aa 0B       		.uleb128 0xb
 4623 02ab 00       		.byte	0
 4624 02ac 00       		.byte	0
 4625 02ad 00       		.byte	0
 4626              		.section	.debug_loc,"",%progbits
 4627              	.Ldebug_loc0:
 4628              	.LLST0:
 4629 0000 1C000000 		.4byte	.LVL0
 4630 0004 30000000 		.4byte	.LVL1
ARM GAS  e:\temp\ccrFbtw8.s 			page 99


 4631 0008 0100     		.2byte	0x1
 4632 000a 52       		.byte	0x52
 4633 000b 30000000 		.4byte	.LVL1
 4634 000f 5C000000 		.4byte	.LVL5
 4635 0013 0100     		.2byte	0x1
 4636 0015 51       		.byte	0x51
 4637 0016 5C000000 		.4byte	.LVL5
 4638 001a 80000000 		.4byte	.LFE32
 4639 001e 0700     		.2byte	0x7
 4640 0020 70       		.byte	0x70
 4641 0021 00       		.sleb128 0
 4642 0022 40       		.byte	0x40
 4643 0023 24       		.byte	0x24
 4644 0024 40       		.byte	0x40
 4645 0025 25       		.byte	0x25
 4646 0026 9F       		.byte	0x9f
 4647 0027 00000000 		.4byte	0
 4648 002b 00000000 		.4byte	0
 4649              	.LLST1:
 4650 002f 4A000000 		.4byte	.LVL2
 4651 0033 56000000 		.4byte	.LVL4
 4652 0037 0100     		.2byte	0x1
 4653 0039 53       		.byte	0x53
 4654 003a 00000000 		.4byte	0
 4655 003e 00000000 		.4byte	0
 4656              	.LLST2:
 4657 0042 00000000 		.4byte	.LVL6
 4658 0046 14000000 		.4byte	.LVL11
 4659 004a 0100     		.2byte	0x1
 4660 004c 50       		.byte	0x50
 4661 004d 14000000 		.4byte	.LVL11
 4662 0051 16000000 		.4byte	.LFE38
 4663 0055 0400     		.2byte	0x4
 4664 0057 F3       		.byte	0xf3
 4665 0058 01       		.uleb128 0x1
 4666 0059 50       		.byte	0x50
 4667 005a 9F       		.byte	0x9f
 4668 005b 00000000 		.4byte	0
 4669 005f 00000000 		.4byte	0
 4670              	.LLST3:
 4671 0063 00000000 		.4byte	.LVL6
 4672 0067 06000000 		.4byte	.LVL7
 4673 006b 0100     		.2byte	0x1
 4674 006d 51       		.byte	0x51
 4675 006e 06000000 		.4byte	.LVL7
 4676 0072 08000000 		.4byte	.LVL8
 4677 0076 0400     		.2byte	0x4
 4678 0078 F3       		.byte	0xf3
 4679 0079 01       		.uleb128 0x1
 4680 007a 51       		.byte	0x51
 4681 007b 9F       		.byte	0x9f
 4682 007c 08000000 		.4byte	.LVL8
 4683 0080 0A000000 		.4byte	.LVL9
 4684 0084 0100     		.2byte	0x1
 4685 0086 51       		.byte	0x51
 4686 0087 0A000000 		.4byte	.LVL9
 4687 008b 16000000 		.4byte	.LFE38
ARM GAS  e:\temp\ccrFbtw8.s 			page 100


 4688 008f 0400     		.2byte	0x4
 4689 0091 F3       		.byte	0xf3
 4690 0092 01       		.uleb128 0x1
 4691 0093 51       		.byte	0x51
 4692 0094 9F       		.byte	0x9f
 4693 0095 00000000 		.4byte	0
 4694 0099 00000000 		.4byte	0
 4695              	.LLST4:
 4696 009d 06000000 		.4byte	.LVL7
 4697 00a1 08000000 		.4byte	.LVL8
 4698 00a5 0100     		.2byte	0x1
 4699 00a7 51       		.byte	0x51
 4700 00a8 12000000 		.4byte	.LVL10
 4701 00ac 16000000 		.4byte	.LFE38
 4702 00b0 0100     		.2byte	0x1
 4703 00b2 51       		.byte	0x51
 4704 00b3 00000000 		.4byte	0
 4705 00b7 00000000 		.4byte	0
 4706              	.LLST5:
 4707 00bb 00000000 		.4byte	.LVL12
 4708 00bf 2E000000 		.4byte	.LVL16
 4709 00c3 0100     		.2byte	0x1
 4710 00c5 50       		.byte	0x50
 4711 00c6 2E000000 		.4byte	.LVL16
 4712 00ca 30000000 		.4byte	.LVL17
 4713 00ce 0400     		.2byte	0x4
 4714 00d0 F3       		.byte	0xf3
 4715 00d1 01       		.uleb128 0x1
 4716 00d2 50       		.byte	0x50
 4717 00d3 9F       		.byte	0x9f
 4718 00d4 30000000 		.4byte	.LVL17
 4719 00d8 32000000 		.4byte	.LVL18
 4720 00dc 0100     		.2byte	0x1
 4721 00de 50       		.byte	0x50
 4722 00df 32000000 		.4byte	.LVL18
 4723 00e3 34000000 		.4byte	.LVL19
 4724 00e7 0400     		.2byte	0x4
 4725 00e9 F3       		.byte	0xf3
 4726 00ea 01       		.uleb128 0x1
 4727 00eb 50       		.byte	0x50
 4728 00ec 9F       		.byte	0x9f
 4729 00ed 34000000 		.4byte	.LVL19
 4730 00f1 36000000 		.4byte	.LVL20
 4731 00f5 0100     		.2byte	0x1
 4732 00f7 50       		.byte	0x50
 4733 00f8 36000000 		.4byte	.LVL20
 4734 00fc 3C000000 		.4byte	.LFE40
 4735 0100 0400     		.2byte	0x4
 4736 0102 F3       		.byte	0xf3
 4737 0103 01       		.uleb128 0x1
 4738 0104 50       		.byte	0x50
 4739 0105 9F       		.byte	0x9f
 4740 0106 00000000 		.4byte	0
 4741 010a 00000000 		.4byte	0
 4742              	.LLST6:
 4743 010e 0A000000 		.4byte	.LVL13
 4744 0112 26000000 		.4byte	.LVL14
ARM GAS  e:\temp\ccrFbtw8.s 			page 101


 4745 0116 0100     		.2byte	0x1
 4746 0118 52       		.byte	0x52
 4747 0119 28000000 		.4byte	.LVL15
 4748 011d 30000000 		.4byte	.LVL17
 4749 0121 0100     		.2byte	0x1
 4750 0123 52       		.byte	0x52
 4751 0124 34000000 		.4byte	.LVL19
 4752 0128 36000000 		.4byte	.LVL20
 4753 012c 0100     		.2byte	0x1
 4754 012e 52       		.byte	0x52
 4755 012f 00000000 		.4byte	0
 4756 0133 00000000 		.4byte	0
 4757              	.LLST7:
 4758 0137 00000000 		.4byte	.LVL22
 4759 013b 1E000000 		.4byte	.LVL24
 4760 013f 0100     		.2byte	0x1
 4761 0141 50       		.byte	0x50
 4762 0142 1E000000 		.4byte	.LVL24
 4763 0146 4C000000 		.4byte	.LFE43
 4764 014a 0400     		.2byte	0x4
 4765 014c F3       		.byte	0xf3
 4766 014d 01       		.uleb128 0x1
 4767 014e 50       		.byte	0x50
 4768 014f 9F       		.byte	0x9f
 4769 0150 00000000 		.4byte	0
 4770 0154 00000000 		.4byte	0
 4771              	.LLST8:
 4772 0158 00000000 		.4byte	.LVL22
 4773 015c 06000000 		.4byte	.LVL23
 4774 0160 0100     		.2byte	0x1
 4775 0162 51       		.byte	0x51
 4776 0163 06000000 		.4byte	.LVL23
 4777 0167 4C000000 		.4byte	.LFE43
 4778 016b 0400     		.2byte	0x4
 4779 016d F3       		.byte	0xf3
 4780 016e 01       		.uleb128 0x1
 4781 016f 51       		.byte	0x51
 4782 0170 9F       		.byte	0x9f
 4783 0171 00000000 		.4byte	0
 4784 0175 00000000 		.4byte	0
 4785              	.LLST9:
 4786 0179 00000000 		.4byte	.LVL29
 4787 017d 1A000000 		.4byte	.LVL30
 4788 0181 0100     		.2byte	0x1
 4789 0183 50       		.byte	0x50
 4790 0184 1A000000 		.4byte	.LVL30
 4791 0188 34000000 		.4byte	.LFE37
 4792 018c 0400     		.2byte	0x4
 4793 018e F3       		.byte	0xf3
 4794 018f 01       		.uleb128 0x1
 4795 0190 50       		.byte	0x50
 4796 0191 9F       		.byte	0x9f
 4797 0192 00000000 		.4byte	0
 4798 0196 00000000 		.4byte	0
 4799              	.LLST10:
 4800 019a 30000000 		.4byte	.LVL37
 4801 019e 06010000 		.4byte	.LVL40
ARM GAS  e:\temp\ccrFbtw8.s 			page 102


 4802 01a2 0100     		.2byte	0x1
 4803 01a4 54       		.byte	0x54
 4804 01a5 08010000 		.4byte	.LVL41
 4805 01a9 0A010000 		.4byte	.LVL42
 4806 01ad 0100     		.2byte	0x1
 4807 01af 54       		.byte	0x54
 4808 01b0 0C010000 		.4byte	.LVL43
 4809 01b4 14010000 		.4byte	.LVL45
 4810 01b8 0100     		.2byte	0x1
 4811 01ba 54       		.byte	0x54
 4812 01bb 28010000 		.4byte	.LVL47
 4813 01bf 64010000 		.4byte	.LVL49
 4814 01c3 0100     		.2byte	0x1
 4815 01c5 53       		.byte	0x53
 4816 01c6 66010000 		.4byte	.LVL50
 4817 01ca 68010000 		.4byte	.LVL51
 4818 01ce 0100     		.2byte	0x1
 4819 01d0 53       		.byte	0x53
 4820 01d1 6A010000 		.4byte	.LVL52
 4821 01d5 74010000 		.4byte	.LVL55
 4822 01d9 0100     		.2byte	0x1
 4823 01db 53       		.byte	0x53
 4824 01dc 00000000 		.4byte	0
 4825 01e0 00000000 		.4byte	0
 4826              	.LLST11:
 4827 01e4 2C000000 		.4byte	.LVL36
 4828 01e8 30000000 		.4byte	.LVL37
 4829 01ec 0200     		.2byte	0x2
 4830 01ee 30       		.byte	0x30
 4831 01ef 9F       		.byte	0x9f
 4832 01f0 30000000 		.4byte	.LVL37
 4833 01f4 12010000 		.4byte	.LVL44
 4834 01f8 0100     		.2byte	0x1
 4835 01fa 55       		.byte	0x55
 4836 01fb 14010000 		.4byte	.LVL45
 4837 01ff 70010000 		.4byte	.LVL53
 4838 0203 0100     		.2byte	0x1
 4839 0205 55       		.byte	0x55
 4840 0206 72010000 		.4byte	.LVL54
 4841 020a 82010000 		.4byte	.LVL57
 4842 020e 0100     		.2byte	0x1
 4843 0210 55       		.byte	0x55
 4844 0211 00000000 		.4byte	0
 4845 0215 00000000 		.4byte	0
 4846              	.LLST12:
 4847 0219 4A000000 		.4byte	.LVL38
 4848 021d 03010000 		.4byte	.LVL39-1
 4849 0221 0100     		.2byte	0x1
 4850 0223 51       		.byte	0x51
 4851 0224 00000000 		.4byte	0
 4852 0228 00000000 		.4byte	0
 4853              	.LLST13:
 4854 022c 1A000000 		.4byte	.LVL33
 4855 0230 30000000 		.4byte	.LVL37
 4856 0234 0100     		.2byte	0x1
 4857 0236 54       		.byte	0x54
 4858 0237 00000000 		.4byte	0
ARM GAS  e:\temp\ccrFbtw8.s 			page 103


 4859 023b 00000000 		.4byte	0
 4860              	.LLST14:
 4861 023f 2A000000 		.4byte	.LVL35
 4862 0243 30000000 		.4byte	.LVL37
 4863 0247 0100     		.2byte	0x1
 4864 0249 50       		.byte	0x50
 4865 024a 30000000 		.4byte	.LVL37
 4866 024e 18010000 		.4byte	.LVL46
 4867 0252 0100     		.2byte	0x1
 4868 0254 5A       		.byte	0x5a
 4869 0255 18010000 		.4byte	.LVL46
 4870 0259 90010000 		.4byte	.LVL59
 4871 025d 0200     		.2byte	0x2
 4872 025f 30       		.byte	0x30
 4873 0260 9F       		.byte	0x9f
 4874 0261 90010000 		.4byte	.LVL59
 4875 0265 92010000 		.4byte	.LVL60
 4876 0269 0100     		.2byte	0x1
 4877 026b 50       		.byte	0x50
 4878 026c 92010000 		.4byte	.LVL60
 4879 0270 A4010000 		.4byte	.LVL62
 4880 0274 0300     		.2byte	0x3
 4881 0276 70       		.byte	0x70
 4882 0277 7B       		.sleb128 -5
 4883 0278 9F       		.byte	0x9f
 4884 0279 00000000 		.4byte	0
 4885 027d 00000000 		.4byte	0
 4886              	.LLST15:
 4887 0281 18010000 		.4byte	.LVL46
 4888 0285 28010000 		.4byte	.LVL47
 4889 0289 0400     		.2byte	0x4
 4890 028b 0A       		.byte	0xa
 4891 028c C0FF     		.2byte	0xffc0
 4892 028e 9F       		.byte	0x9f
 4893 028f 28010000 		.4byte	.LVL47
 4894 0293 74010000 		.4byte	.LVL55
 4895 0297 0100     		.2byte	0x1
 4896 0299 54       		.byte	0x54
 4897 029a 74010000 		.4byte	.LVL55
 4898 029e 78010000 		.4byte	.LVL56
 4899 02a2 0400     		.2byte	0x4
 4900 02a4 0A       		.byte	0xa
 4901 02a5 C0FF     		.2byte	0xffc0
 4902 02a7 9F       		.byte	0x9f
 4903 02a8 78010000 		.4byte	.LVL56
 4904 02ac 9A010000 		.4byte	.LVL61
 4905 02b0 0100     		.2byte	0x1
 4906 02b2 54       		.byte	0x54
 4907 02b3 00000000 		.4byte	0
 4908 02b7 00000000 		.4byte	0
 4909              	.LLST16:
 4910 02bb 02000000 		.4byte	.LVL67
 4911 02bf 06000000 		.4byte	.LVL68
 4912 02c3 0200     		.2byte	0x2
 4913 02c5 30       		.byte	0x30
 4914 02c6 9F       		.byte	0x9f
 4915 02c7 06000000 		.4byte	.LVL68
ARM GAS  e:\temp\ccrFbtw8.s 			page 104


 4916 02cb 34000000 		.4byte	.LVL74
 4917 02cf 0100     		.2byte	0x1
 4918 02d1 54       		.byte	0x54
 4919 02d2 36000000 		.4byte	.LVL75
 4920 02d6 46000000 		.4byte	.LVL77
 4921 02da 0100     		.2byte	0x1
 4922 02dc 54       		.byte	0x54
 4923 02dd 00000000 		.4byte	0
 4924 02e1 00000000 		.4byte	0
 4925              	.LLST17:
 4926 02e5 06000000 		.4byte	.LVL68
 4927 02e9 1E000000 		.4byte	.LVL69
 4928 02ed 0100     		.2byte	0x1
 4929 02ef 52       		.byte	0x52
 4930 02f0 20000000 		.4byte	.LVL70
 4931 02f4 22000000 		.4byte	.LVL71
 4932 02f8 0100     		.2byte	0x1
 4933 02fa 52       		.byte	0x52
 4934 02fb 24000000 		.4byte	.LVL72
 4935 02ff 30000000 		.4byte	.LVL73
 4936 0303 0100     		.2byte	0x1
 4937 0305 52       		.byte	0x52
 4938 0306 00000000 		.4byte	0
 4939 030a 00000000 		.4byte	0
 4940              	.LLST18:
 4941 030e 00000000 		.4byte	.LVL78
 4942 0312 1B000000 		.4byte	.LVL80-1
 4943 0316 0100     		.2byte	0x1
 4944 0318 50       		.byte	0x50
 4945 0319 1B000000 		.4byte	.LVL80-1
 4946 031d 76010000 		.4byte	.LVL109
 4947 0321 0400     		.2byte	0x4
 4948 0323 F3       		.byte	0xf3
 4949 0324 01       		.uleb128 0x1
 4950 0325 50       		.byte	0x50
 4951 0326 9F       		.byte	0x9f
 4952 0327 76010000 		.4byte	.LVL109
 4953 032b 78010000 		.4byte	.LVL110
 4954 032f 0100     		.2byte	0x1
 4955 0331 50       		.byte	0x50
 4956 0332 78010000 		.4byte	.LVL110
 4957 0336 7A010000 		.4byte	.LVL111
 4958 033a 0400     		.2byte	0x4
 4959 033c F3       		.byte	0xf3
 4960 033d 01       		.uleb128 0x1
 4961 033e 50       		.byte	0x50
 4962 033f 9F       		.byte	0x9f
 4963 0340 7A010000 		.4byte	.LVL111
 4964 0344 7C010000 		.4byte	.LVL112
 4965 0348 0100     		.2byte	0x1
 4966 034a 50       		.byte	0x50
 4967 034b 7C010000 		.4byte	.LVL112
 4968 034f 8C010000 		.4byte	.LFE41
 4969 0353 0400     		.2byte	0x4
 4970 0355 F3       		.byte	0xf3
 4971 0356 01       		.uleb128 0x1
 4972 0357 50       		.byte	0x50
ARM GAS  e:\temp\ccrFbtw8.s 			page 105


 4973 0358 9F       		.byte	0x9f
 4974 0359 00000000 		.4byte	0
 4975 035d 00000000 		.4byte	0
 4976              	.LLST19:
 4977 0361 00000000 		.4byte	.LVL78
 4978 0365 1B000000 		.4byte	.LVL80-1
 4979 0369 0100     		.2byte	0x1
 4980 036b 51       		.byte	0x51
 4981 036c 1B000000 		.4byte	.LVL80-1
 4982 0370 76010000 		.4byte	.LVL109
 4983 0374 0400     		.2byte	0x4
 4984 0376 F3       		.byte	0xf3
 4985 0377 01       		.uleb128 0x1
 4986 0378 51       		.byte	0x51
 4987 0379 9F       		.byte	0x9f
 4988 037a 76010000 		.4byte	.LVL109
 4989 037e 7C010000 		.4byte	.LVL112
 4990 0382 0100     		.2byte	0x1
 4991 0384 51       		.byte	0x51
 4992 0385 7C010000 		.4byte	.LVL112
 4993 0389 8C010000 		.4byte	.LFE41
 4994 038d 0400     		.2byte	0x4
 4995 038f F3       		.byte	0xf3
 4996 0390 01       		.uleb128 0x1
 4997 0391 51       		.byte	0x51
 4998 0392 9F       		.byte	0x9f
 4999 0393 00000000 		.4byte	0
 5000 0397 00000000 		.4byte	0
 5001              	.LLST20:
 5002 039b 00000000 		.4byte	.LVL78
 5003 039f 1B000000 		.4byte	.LVL80-1
 5004 03a3 0100     		.2byte	0x1
 5005 03a5 52       		.byte	0x52
 5006 03a6 1B000000 		.4byte	.LVL80-1
 5007 03aa 76010000 		.4byte	.LVL109
 5008 03ae 0400     		.2byte	0x4
 5009 03b0 F3       		.byte	0xf3
 5010 03b1 01       		.uleb128 0x1
 5011 03b2 52       		.byte	0x52
 5012 03b3 9F       		.byte	0x9f
 5013 03b4 76010000 		.4byte	.LVL109
 5014 03b8 7C010000 		.4byte	.LVL112
 5015 03bc 0100     		.2byte	0x1
 5016 03be 52       		.byte	0x52
 5017 03bf 7C010000 		.4byte	.LVL112
 5018 03c3 8C010000 		.4byte	.LFE41
 5019 03c7 0400     		.2byte	0x4
 5020 03c9 F3       		.byte	0xf3
 5021 03ca 01       		.uleb128 0x1
 5022 03cb 52       		.byte	0x52
 5023 03cc 9F       		.byte	0x9f
 5024 03cd 00000000 		.4byte	0
 5025 03d1 00000000 		.4byte	0
 5026              	.LLST21:
 5027 03d5 00000000 		.4byte	.LVL78
 5028 03d9 1B000000 		.4byte	.LVL80-1
 5029 03dd 0100     		.2byte	0x1
ARM GAS  e:\temp\ccrFbtw8.s 			page 106


 5030 03df 53       		.byte	0x53
 5031 03e0 1B000000 		.4byte	.LVL80-1
 5032 03e4 76010000 		.4byte	.LVL109
 5033 03e8 0200     		.2byte	0x2
 5034 03ea 91       		.byte	0x91
 5035 03eb 60       		.sleb128 -32
 5036 03ec 76010000 		.4byte	.LVL109
 5037 03f0 7C010000 		.4byte	.LVL112
 5038 03f4 0100     		.2byte	0x1
 5039 03f6 53       		.byte	0x53
 5040 03f7 7C010000 		.4byte	.LVL112
 5041 03fb 8C010000 		.4byte	.LFE41
 5042 03ff 0200     		.2byte	0x2
 5043 0401 91       		.byte	0x91
 5044 0402 60       		.sleb128 -32
 5045 0403 00000000 		.4byte	0
 5046 0407 00000000 		.4byte	0
 5047              	.LLST22:
 5048 040b 1E000000 		.4byte	.LVL81
 5049 040f 24000000 		.4byte	.LVL82
 5050 0413 0200     		.2byte	0x2
 5051 0415 4E       		.byte	0x4e
 5052 0416 9F       		.byte	0x9f
 5053 0417 24000000 		.4byte	.LVL82
 5054 041b 66000000 		.4byte	.LVL85
 5055 041f 0100     		.2byte	0x1
 5056 0421 53       		.byte	0x53
 5057 0422 66000000 		.4byte	.LVL85
 5058 0426 7C000000 		.4byte	.LVL86
 5059 042a 0100     		.2byte	0x1
 5060 042c 50       		.byte	0x50
 5061 042d 7C000000 		.4byte	.LVL86
 5062 0431 7E000000 		.4byte	.LVL87
 5063 0435 0100     		.2byte	0x1
 5064 0437 53       		.byte	0x53
 5065 0438 80000000 		.4byte	.LVL88
 5066 043c 84000000 		.4byte	.LVL89
 5067 0440 0100     		.2byte	0x1
 5068 0442 53       		.byte	0x53
 5069 0443 00000000 		.4byte	0
 5070 0447 00000000 		.4byte	0
 5071              	.LLST23:
 5072 044b 1E000000 		.4byte	.LVL81
 5073 044f 76010000 		.4byte	.LVL109
 5074 0453 0200     		.2byte	0x2
 5075 0455 91       		.byte	0x91
 5076 0456 64       		.sleb128 -28
 5077 0457 00000000 		.4byte	0
 5078 045b 00000000 		.4byte	0
 5079              	.LLST24:
 5080 045f 0C000000 		.4byte	.LVL79
 5081 0463 66010000 		.4byte	.LVL105
 5082 0467 0200     		.2byte	0x2
 5083 0469 30       		.byte	0x30
 5084 046a 9F       		.byte	0x9f
 5085 046b 66010000 		.4byte	.LVL105
 5086 046f 6A010000 		.4byte	.LVL106
ARM GAS  e:\temp\ccrFbtw8.s 			page 107


 5087 0473 0200     		.2byte	0x2
 5088 0475 31       		.byte	0x31
 5089 0476 9F       		.byte	0x9f
 5090 0477 6A010000 		.4byte	.LVL106
 5091 047b 6C010000 		.4byte	.LVL107
 5092 047f 0200     		.2byte	0x2
 5093 0481 30       		.byte	0x30
 5094 0482 9F       		.byte	0x9f
 5095 0483 6C010000 		.4byte	.LVL107
 5096 0487 76010000 		.4byte	.LVL109
 5097 048b 0100     		.2byte	0x1
 5098 048d 54       		.byte	0x54
 5099 048e 76010000 		.4byte	.LVL109
 5100 0492 7C010000 		.4byte	.LVL112
 5101 0496 0200     		.2byte	0x2
 5102 0498 30       		.byte	0x30
 5103 0499 9F       		.byte	0x9f
 5104 049a 00000000 		.4byte	0
 5105 049e 00000000 		.4byte	0
 5106              	.LLST25:
 5107 04a2 0C000000 		.4byte	.LVL79
 5108 04a6 24000000 		.4byte	.LVL82
 5109 04aa 0300     		.2byte	0x3
 5110 04ac 09       		.byte	0x9
 5111 04ad FF       		.byte	0xff
 5112 04ae 9F       		.byte	0x9f
 5113 04af 24000000 		.4byte	.LVL82
 5114 04b3 90000000 		.4byte	.LVL90
 5115 04b7 0100     		.2byte	0x1
 5116 04b9 50       		.byte	0x50
 5117 04ba 6A010000 		.4byte	.LVL106
 5118 04be 6C010000 		.4byte	.LVL107
 5119 04c2 0100     		.2byte	0x1
 5120 04c4 50       		.byte	0x50
 5121 04c5 76010000 		.4byte	.LVL109
 5122 04c9 7C010000 		.4byte	.LVL112
 5123 04cd 0300     		.2byte	0x3
 5124 04cf 09       		.byte	0x9
 5125 04d0 FF       		.byte	0xff
 5126 04d1 9F       		.byte	0x9f
 5127 04d2 00000000 		.4byte	0
 5128 04d6 00000000 		.4byte	0
 5129              	.LLST26:
 5130 04da D0000000 		.4byte	.LVL94
 5131 04de E6000000 		.4byte	.LVL95
 5132 04e2 0100     		.2byte	0x1
 5133 04e4 50       		.byte	0x50
 5134 04e5 32010000 		.4byte	.LVL98
 5135 04e9 3C010000 		.4byte	.LVL100
 5136 04ed 0100     		.2byte	0x1
 5137 04ef 53       		.byte	0x53
 5138 04f0 00000000 		.4byte	0
 5139 04f4 00000000 		.4byte	0
 5140              	.LLST27:
 5141 04f8 BA000000 		.4byte	.LVL92
 5142 04fc CA000000 		.4byte	.LVL93
 5143 0500 0100     		.2byte	0x1
ARM GAS  e:\temp\ccrFbtw8.s 			page 108


 5144 0502 50       		.byte	0x50
 5145 0503 18010000 		.4byte	.LVL97
 5146 0507 40010000 		.4byte	.LVL101
 5147 050b 0100     		.2byte	0x1
 5148 050d 50       		.byte	0x50
 5149 050e 40010000 		.4byte	.LVL101
 5150 0512 42010000 		.4byte	.LVL102
 5151 0516 0500     		.2byte	0x5
 5152 0518 03       		.byte	0x3
 5153 0519 F2020000 		.4byte	gl_start_tick
 5154 051d 00000000 		.4byte	0
 5155 0521 00000000 		.4byte	0
 5156              	.LLST28:
 5157 0525 00000000 		.4byte	.LVL113
 5158 0529 07000000 		.4byte	.LVL114-1
 5159 052d 0100     		.2byte	0x1
 5160 052f 50       		.byte	0x50
 5161 0530 07000000 		.4byte	.LVL114-1
 5162 0534 0A000000 		.4byte	.LFE42
 5163 0538 0400     		.2byte	0x4
 5164 053a F3       		.byte	0xf3
 5165 053b 01       		.uleb128 0x1
 5166 053c 50       		.byte	0x50
 5167 053d 9F       		.byte	0x9f
 5168 053e 00000000 		.4byte	0
 5169 0542 00000000 		.4byte	0
 5170              	.LLST29:
 5171 0546 00000000 		.4byte	.LVL113
 5172 054a 07000000 		.4byte	.LVL114-1
 5173 054e 0100     		.2byte	0x1
 5174 0550 51       		.byte	0x51
 5175 0551 07000000 		.4byte	.LVL114-1
 5176 0555 0A000000 		.4byte	.LFE42
 5177 0559 0400     		.2byte	0x4
 5178 055b F3       		.byte	0xf3
 5179 055c 01       		.uleb128 0x1
 5180 055d 51       		.byte	0x51
 5181 055e 9F       		.byte	0x9f
 5182 055f 00000000 		.4byte	0
 5183 0563 00000000 		.4byte	0
 5184              	.LLST30:
 5185 0567 00000000 		.4byte	.LVL113
 5186 056b 07000000 		.4byte	.LVL114-1
 5187 056f 0100     		.2byte	0x1
 5188 0571 52       		.byte	0x52
 5189 0572 07000000 		.4byte	.LVL114-1
 5190 0576 0A000000 		.4byte	.LFE42
 5191 057a 0400     		.2byte	0x4
 5192 057c F3       		.byte	0xf3
 5193 057d 01       		.uleb128 0x1
 5194 057e 52       		.byte	0x52
 5195 057f 9F       		.byte	0x9f
 5196 0580 00000000 		.4byte	0
 5197 0584 00000000 		.4byte	0
 5198              	.LLST31:
 5199 0588 00000000 		.4byte	.LVL115
 5200 058c 09000000 		.4byte	.LVL116-1
ARM GAS  e:\temp\ccrFbtw8.s 			page 109


 5201 0590 0100     		.2byte	0x1
 5202 0592 50       		.byte	0x50
 5203 0593 09000000 		.4byte	.LVL116-1
 5204 0597 28000000 		.4byte	.LFE44
 5205 059b 0400     		.2byte	0x4
 5206 059d F3       		.byte	0xf3
 5207 059e 01       		.uleb128 0x1
 5208 059f 50       		.byte	0x50
 5209 05a0 9F       		.byte	0x9f
 5210 05a1 00000000 		.4byte	0
 5211 05a5 00000000 		.4byte	0
 5212              	.LLST32:
 5213 05a9 00000000 		.4byte	.LVL115
 5214 05ad 09000000 		.4byte	.LVL116-1
 5215 05b1 0100     		.2byte	0x1
 5216 05b3 51       		.byte	0x51
 5217 05b4 09000000 		.4byte	.LVL116-1
 5218 05b8 28000000 		.4byte	.LFE44
 5219 05bc 0400     		.2byte	0x4
 5220 05be F3       		.byte	0xf3
 5221 05bf 01       		.uleb128 0x1
 5222 05c0 51       		.byte	0x51
 5223 05c1 9F       		.byte	0x9f
 5224 05c2 00000000 		.4byte	0
 5225 05c6 00000000 		.4byte	0
 5226              	.LLST33:
 5227 05ca 14000000 		.4byte	.LVL118
 5228 05ce 1C000000 		.4byte	.LVL119
 5229 05d2 0100     		.2byte	0x1
 5230 05d4 50       		.byte	0x50
 5231 05d5 00000000 		.4byte	0
 5232 05d9 00000000 		.4byte	0
 5233              	.LLST34:
 5234 05dd 0C000000 		.4byte	.LVL117
 5235 05e1 26000000 		.4byte	.LVL122
 5236 05e5 0100     		.2byte	0x1
 5237 05e7 55       		.byte	0x55
 5238 05e8 00000000 		.4byte	0
 5239 05ec 00000000 		.4byte	0
 5240              	.LLST35:
 5241 05f0 00000000 		.4byte	.LVL123
 5242 05f4 07000000 		.4byte	.LVL124-1
 5243 05f8 0100     		.2byte	0x1
 5244 05fa 50       		.byte	0x50
 5245 05fb 07000000 		.4byte	.LVL124-1
 5246 05ff 44000000 		.4byte	.LFE45
 5247 0603 0400     		.2byte	0x4
 5248 0605 F3       		.byte	0xf3
 5249 0606 01       		.uleb128 0x1
 5250 0607 50       		.byte	0x50
 5251 0608 9F       		.byte	0x9f
 5252 0609 00000000 		.4byte	0
 5253 060d 00000000 		.4byte	0
 5254              	.LLST36:
 5255 0611 0A000000 		.4byte	.LVL125
 5256 0615 0E000000 		.4byte	.LVL126
 5257 0619 0200     		.2byte	0x2
ARM GAS  e:\temp\ccrFbtw8.s 			page 110


 5258 061b 30       		.byte	0x30
 5259 061c 9F       		.byte	0x9f
 5260 061d 0E000000 		.4byte	.LVL126
 5261 0621 32000000 		.4byte	.LVL128
 5262 0625 0100     		.2byte	0x1
 5263 0627 55       		.byte	0x55
 5264 0628 34000000 		.4byte	.LVL129
 5265 062c 3E000000 		.4byte	.LVL132
 5266 0630 0100     		.2byte	0x1
 5267 0632 55       		.byte	0x55
 5268 0633 00000000 		.4byte	0
 5269 0637 00000000 		.4byte	0
 5270              	.LLST37:
 5271 063b 0A000000 		.4byte	.LVL125
 5272 063f 3E000000 		.4byte	.LVL131
 5273 0643 0100     		.2byte	0x1
 5274 0645 54       		.byte	0x54
 5275 0646 00000000 		.4byte	0
 5276 064a 00000000 		.4byte	0
 5277              	.LLST38:
 5278 064e 00000000 		.4byte	.LVL133
 5279 0652 15000000 		.4byte	.LVL134-1
 5280 0656 0100     		.2byte	0x1
 5281 0658 50       		.byte	0x50
 5282 0659 15000000 		.4byte	.LVL134-1
 5283 065d 58000000 		.4byte	.LFE46
 5284 0661 0400     		.2byte	0x4
 5285 0663 F3       		.byte	0xf3
 5286 0664 01       		.uleb128 0x1
 5287 0665 50       		.byte	0x50
 5288 0666 9F       		.byte	0x9f
 5289 0667 00000000 		.4byte	0
 5290 066b 00000000 		.4byte	0
 5291              	.LLST39:
 5292 066f 00000000 		.4byte	.LVL133
 5293 0673 15000000 		.4byte	.LVL134-1
 5294 0677 0100     		.2byte	0x1
 5295 0679 51       		.byte	0x51
 5296 067a 15000000 		.4byte	.LVL134-1
 5297 067e 58000000 		.4byte	.LFE46
 5298 0682 0400     		.2byte	0x4
 5299 0684 F3       		.byte	0xf3
 5300 0685 01       		.uleb128 0x1
 5301 0686 51       		.byte	0x51
 5302 0687 9F       		.byte	0x9f
 5303 0688 00000000 		.4byte	0
 5304 068c 00000000 		.4byte	0
 5305              	.LLST40:
 5306 0690 00000000 		.4byte	.LVL133
 5307 0694 15000000 		.4byte	.LVL134-1
 5308 0698 0100     		.2byte	0x1
 5309 069a 52       		.byte	0x52
 5310 069b 15000000 		.4byte	.LVL134-1
 5311 069f 58000000 		.4byte	.LFE46
 5312 06a3 0400     		.2byte	0x4
 5313 06a5 F3       		.byte	0xf3
 5314 06a6 01       		.uleb128 0x1
ARM GAS  e:\temp\ccrFbtw8.s 			page 111


 5315 06a7 52       		.byte	0x52
 5316 06a8 9F       		.byte	0x9f
 5317 06a9 00000000 		.4byte	0
 5318 06ad 00000000 		.4byte	0
 5319              	.LLST41:
 5320 06b1 18000000 		.4byte	.LVL135
 5321 06b5 1C000000 		.4byte	.LVL136
 5322 06b9 0200     		.2byte	0x2
 5323 06bb 30       		.byte	0x30
 5324 06bc 9F       		.byte	0x9f
 5325 06bd 1C000000 		.4byte	.LVL136
 5326 06c1 44000000 		.4byte	.LVL139
 5327 06c5 0100     		.2byte	0x1
 5328 06c7 55       		.byte	0x55
 5329 06c8 46000000 		.4byte	.LVL140
 5330 06cc 50000000 		.4byte	.LVL141
 5331 06d0 0100     		.2byte	0x1
 5332 06d2 55       		.byte	0x55
 5333 06d3 00000000 		.4byte	0
 5334 06d7 00000000 		.4byte	0
 5335              	.LLST42:
 5336 06db 18000000 		.4byte	.LVL135
 5337 06df 50000000 		.4byte	.LVL141
 5338 06e3 0200     		.2byte	0x2
 5339 06e5 91       		.byte	0x91
 5340 06e6 64       		.sleb128 -28
 5341 06e7 00000000 		.4byte	0
 5342 06eb 00000000 		.4byte	0
 5343              	.LLST43:
 5344 06ef 32000000 		.4byte	.LVL137
 5345 06f3 41000000 		.4byte	.LVL138-1
 5346 06f7 0100     		.2byte	0x1
 5347 06f9 53       		.byte	0x53
 5348 06fa 00000000 		.4byte	0
 5349 06fe 00000000 		.4byte	0
 5350              	.LLST44:
 5351 0702 00000000 		.4byte	.LVL142
 5352 0706 05000000 		.4byte	.LVL143-1
 5353 070a 0100     		.2byte	0x1
 5354 070c 50       		.byte	0x50
 5355 070d 05000000 		.4byte	.LVL143-1
 5356 0711 12000000 		.4byte	.LFE47
 5357 0715 0400     		.2byte	0x4
 5358 0717 F3       		.byte	0xf3
 5359 0718 01       		.uleb128 0x1
 5360 0719 50       		.byte	0x50
 5361 071a 9F       		.byte	0x9f
 5362 071b 00000000 		.4byte	0
 5363 071f 00000000 		.4byte	0
 5364              	.LLST45:
 5365 0723 00000000 		.4byte	.LVL142
 5366 0727 05000000 		.4byte	.LVL143-1
 5367 072b 0100     		.2byte	0x1
 5368 072d 51       		.byte	0x51
 5369 072e 05000000 		.4byte	.LVL143-1
 5370 0732 12000000 		.4byte	.LFE47
 5371 0736 0400     		.2byte	0x4
ARM GAS  e:\temp\ccrFbtw8.s 			page 112


 5372 0738 F3       		.byte	0xf3
 5373 0739 01       		.uleb128 0x1
 5374 073a 51       		.byte	0x51
 5375 073b 9F       		.byte	0x9f
 5376 073c 00000000 		.4byte	0
 5377 0740 00000000 		.4byte	0
 5378              	.LLST46:
 5379 0744 06000000 		.4byte	.LVL143
 5380 0748 0C000000 		.4byte	.LVL144
 5381 074c 0100     		.2byte	0x1
 5382 074e 50       		.byte	0x50
 5383 074f 0E000000 		.4byte	.LVL145
 5384 0753 10000000 		.4byte	.LVL146
 5385 0757 0100     		.2byte	0x1
 5386 0759 50       		.byte	0x50
 5387 075a 00000000 		.4byte	0
 5388 075e 00000000 		.4byte	0
 5389              	.LLST47:
 5390 0762 00000000 		.4byte	.LVL147
 5391 0766 04000000 		.4byte	.LVL148
 5392 076a 0100     		.2byte	0x1
 5393 076c 50       		.byte	0x50
 5394 076d 04000000 		.4byte	.LVL148
 5395 0771 10000000 		.4byte	.LFE48
 5396 0775 0400     		.2byte	0x4
 5397 0777 F3       		.byte	0xf3
 5398 0778 01       		.uleb128 0x1
 5399 0779 50       		.byte	0x50
 5400 077a 9F       		.byte	0x9f
 5401 077b 00000000 		.4byte	0
 5402 077f 00000000 		.4byte	0
 5403              	.LLST48:
 5404 0783 00000000 		.4byte	.LVL149
 5405 0787 09000000 		.4byte	.LVL151-1
 5406 078b 0100     		.2byte	0x1
 5407 078d 50       		.byte	0x50
 5408 078e 09000000 		.4byte	.LVL151-1
 5409 0792 6C000000 		.4byte	.LFE49
 5410 0796 0400     		.2byte	0x4
 5411 0798 F3       		.byte	0xf3
 5412 0799 01       		.uleb128 0x1
 5413 079a 50       		.byte	0x50
 5414 079b 9F       		.byte	0x9f
 5415 079c 00000000 		.4byte	0
 5416 07a0 00000000 		.4byte	0
 5417              	.LLST49:
 5418 07a4 00000000 		.4byte	.LVL149
 5419 07a8 09000000 		.4byte	.LVL151-1
 5420 07ac 0100     		.2byte	0x1
 5421 07ae 51       		.byte	0x51
 5422 07af 09000000 		.4byte	.LVL151-1
 5423 07b3 6C000000 		.4byte	.LFE49
 5424 07b7 0400     		.2byte	0x4
 5425 07b9 F3       		.byte	0xf3
 5426 07ba 01       		.uleb128 0x1
 5427 07bb 51       		.byte	0x51
 5428 07bc 9F       		.byte	0x9f
ARM GAS  e:\temp\ccrFbtw8.s 			page 113


 5429 07bd 00000000 		.4byte	0
 5430 07c1 00000000 		.4byte	0
 5431              	.LLST50:
 5432 07c5 14000000 		.4byte	.LVL153
 5433 07c9 1C000000 		.4byte	.LVL154
 5434 07cd 0100     		.2byte	0x1
 5435 07cf 50       		.byte	0x50
 5436 07d0 52000000 		.4byte	.LVL161
 5437 07d4 56000000 		.4byte	.LVL162
 5438 07d8 0100     		.2byte	0x1
 5439 07da 50       		.byte	0x50
 5440 07db 00000000 		.4byte	0
 5441 07df 00000000 		.4byte	0
 5442              	.LLST51:
 5443 07e3 0C000000 		.4byte	.LVL152
 5444 07e7 60000000 		.4byte	.LVL165
 5445 07eb 0100     		.2byte	0x1
 5446 07ed 54       		.byte	0x54
 5447 07ee 00000000 		.4byte	0
 5448 07f2 00000000 		.4byte	0
 5449              	.LLST52:
 5450 07f6 06000000 		.4byte	.LVL150
 5451 07fa 40000000 		.4byte	.LVL157
 5452 07fe 0200     		.2byte	0x2
 5453 0800 30       		.byte	0x30
 5454 0801 9F       		.byte	0x9f
 5455 0802 40000000 		.4byte	.LVL157
 5456 0806 46000000 		.4byte	.LVL158
 5457 080a 0100     		.2byte	0x1
 5458 080c 50       		.byte	0x50
 5459 080d 50000000 		.4byte	.LVL160
 5460 0811 52000000 		.4byte	.LVL161
 5461 0815 0100     		.2byte	0x1
 5462 0817 50       		.byte	0x50
 5463 0818 52000000 		.4byte	.LVL161
 5464 081c 56000000 		.4byte	.LVL162
 5465 0820 0200     		.2byte	0x2
 5466 0822 30       		.byte	0x30
 5467 0823 9F       		.byte	0x9f
 5468 0824 56000000 		.4byte	.LVL162
 5469 0828 58000000 		.4byte	.LVL163
 5470 082c 0100     		.2byte	0x1
 5471 082e 50       		.byte	0x50
 5472 082f 58000000 		.4byte	.LVL163
 5473 0833 60000000 		.4byte	.LVL166
 5474 0837 0100     		.2byte	0x1
 5475 0839 55       		.byte	0x55
 5476 083a 00000000 		.4byte	0
 5477 083e 00000000 		.4byte	0
 5478              	.LLST53:
 5479 0842 2C000000 		.4byte	.LVL155
 5480 0846 52000000 		.4byte	.LVL161
 5481 084a 0100     		.2byte	0x1
 5482 084c 56       		.byte	0x56
 5483 084d 56000000 		.4byte	.LVL162
 5484 0851 58000000 		.4byte	.LVL163
 5485 0855 0100     		.2byte	0x1
ARM GAS  e:\temp\ccrFbtw8.s 			page 114


 5486 0857 56       		.byte	0x56
 5487 0858 00000000 		.4byte	0
 5488 085c 00000000 		.4byte	0
 5489              		.section	.debug_aranges,"",%progbits
 5490 0000 C4000000 		.4byte	0xc4
 5491 0004 0200     		.2byte	0x2
 5492 0006 00000000 		.4byte	.Ldebug_info0
 5493 000a 04       		.byte	0x4
 5494 000b 00       		.byte	0
 5495 000c 0000     		.2byte	0
 5496 000e 0000     		.2byte	0
 5497 0010 00000000 		.4byte	.LFB32
 5498 0014 80000000 		.4byte	.LFE32-.LFB32
 5499 0018 00000000 		.4byte	.LFB36
 5500 001c 0C000000 		.4byte	.LFE36-.LFB36
 5501 0020 00000000 		.4byte	.LFB38
 5502 0024 16000000 		.4byte	.LFE38-.LFB38
 5503 0028 00000000 		.4byte	.LFB40
 5504 002c 3C000000 		.4byte	.LFE40-.LFB40
 5505 0030 00000000 		.4byte	.LFB35
 5506 0034 0A000000 		.4byte	.LFE35-.LFB35
 5507 0038 00000000 		.4byte	.LFB43
 5508 003c 4C000000 		.4byte	.LFE43-.LFB43
 5509 0040 00000000 		.4byte	.LFB33
 5510 0044 3C000000 		.4byte	.LFE33-.LFB33
 5511 0048 00000000 		.4byte	.LFB37
 5512 004c 34000000 		.4byte	.LFE37-.LFB37
 5513 0050 00000000 		.4byte	.LFB52
 5514 0054 D8010000 		.4byte	.LFE52-.LFB52
 5515 0058 00000000 		.4byte	.LFB53
 5516 005c 14000000 		.4byte	.LFE53-.LFB53
 5517 0060 00000000 		.4byte	.LFB34
 5518 0064 0A000000 		.4byte	.LFE34-.LFB34
 5519 0068 00000000 		.4byte	.LFB39
 5520 006c 50000000 		.4byte	.LFE39-.LFB39
 5521 0070 00000000 		.4byte	.LFB41
 5522 0074 8C010000 		.4byte	.LFE41-.LFB41
 5523 0078 00000000 		.4byte	.LFB42
 5524 007c 0A000000 		.4byte	.LFE42-.LFB42
 5525 0080 00000000 		.4byte	.LFB44
 5526 0084 28000000 		.4byte	.LFE44-.LFB44
 5527 0088 00000000 		.4byte	.LFB45
 5528 008c 44000000 		.4byte	.LFE45-.LFB45
 5529 0090 00000000 		.4byte	.LFB46
 5530 0094 58000000 		.4byte	.LFE46-.LFB46
 5531 0098 00000000 		.4byte	.LFB47
 5532 009c 12000000 		.4byte	.LFE47-.LFB47
 5533 00a0 00000000 		.4byte	.LFB48
 5534 00a4 10000000 		.4byte	.LFE48-.LFB48
 5535 00a8 00000000 		.4byte	.LFB49
 5536 00ac 6C000000 		.4byte	.LFE49-.LFB49
 5537 00b0 00000000 		.4byte	.LFB50
 5538 00b4 0C000000 		.4byte	.LFE50-.LFB50
 5539 00b8 00000000 		.4byte	.LFB51
 5540 00bc 30000000 		.4byte	.LFE51-.LFB51
 5541 00c0 00000000 		.4byte	0
 5542 00c4 00000000 		.4byte	0
ARM GAS  e:\temp\ccrFbtw8.s 			page 115


 5543              		.section	.debug_ranges,"",%progbits
 5544              	.Ldebug_ranges0:
 5545 0000 18000000 		.4byte	.LBB4
 5546 0004 52000000 		.4byte	.LBE4
 5547 0008 56000000 		.4byte	.LBB5
 5548 000c 58000000 		.4byte	.LBE5
 5549 0010 00000000 		.4byte	0
 5550 0014 00000000 		.4byte	0
 5551 0018 00000000 		.4byte	.LFB32
 5552 001c 80000000 		.4byte	.LFE32
 5553 0020 00000000 		.4byte	.LFB36
 5554 0024 0C000000 		.4byte	.LFE36
 5555 0028 00000000 		.4byte	.LFB38
 5556 002c 16000000 		.4byte	.LFE38
 5557 0030 00000000 		.4byte	.LFB40
 5558 0034 3C000000 		.4byte	.LFE40
 5559 0038 00000000 		.4byte	.LFB35
 5560 003c 0A000000 		.4byte	.LFE35
 5561 0040 00000000 		.4byte	.LFB43
 5562 0044 4C000000 		.4byte	.LFE43
 5563 0048 00000000 		.4byte	.LFB33
 5564 004c 3C000000 		.4byte	.LFE33
 5565 0050 00000000 		.4byte	.LFB37
 5566 0054 34000000 		.4byte	.LFE37
 5567 0058 00000000 		.4byte	.LFB52
 5568 005c D8010000 		.4byte	.LFE52
 5569 0060 00000000 		.4byte	.LFB53
 5570 0064 14000000 		.4byte	.LFE53
 5571 0068 00000000 		.4byte	.LFB34
 5572 006c 0A000000 		.4byte	.LFE34
 5573 0070 00000000 		.4byte	.LFB39
 5574 0074 50000000 		.4byte	.LFE39
 5575 0078 00000000 		.4byte	.LFB41
 5576 007c 8C010000 		.4byte	.LFE41
 5577 0080 00000000 		.4byte	.LFB42
 5578 0084 0A000000 		.4byte	.LFE42
 5579 0088 00000000 		.4byte	.LFB44
 5580 008c 28000000 		.4byte	.LFE44
 5581 0090 00000000 		.4byte	.LFB45
 5582 0094 44000000 		.4byte	.LFE45
 5583 0098 00000000 		.4byte	.LFB46
 5584 009c 58000000 		.4byte	.LFE46
 5585 00a0 00000000 		.4byte	.LFB47
 5586 00a4 12000000 		.4byte	.LFE47
 5587 00a8 00000000 		.4byte	.LFB48
 5588 00ac 10000000 		.4byte	.LFE48
 5589 00b0 00000000 		.4byte	.LFB49
 5590 00b4 6C000000 		.4byte	.LFE49
 5591 00b8 00000000 		.4byte	.LFB50
 5592 00bc 0C000000 		.4byte	.LFE50
 5593 00c0 00000000 		.4byte	.LFB51
 5594 00c4 30000000 		.4byte	.LFE51
 5595 00c8 00000000 		.4byte	0
 5596 00cc 00000000 		.4byte	0
 5597              		.section	.debug_line,"",%progbits
 5598              	.Ldebug_line0:
 5599 0000 32040000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  e:\temp\ccrFbtw8.s 			page 116


 5599      02003D01 
 5599      00000201 
 5599      FB0E0D00 
 5599      01010101 
 5600              	.LASF154:
 5601 0000 636F756E 		.ascii	"count\000"
 5601      7400
 5602              	.LASF105:
 5603 0006 69637072 		.ascii	"icpr\000"
 5603      00
 5604              	.LASF202:
 5605 000b 43794578 		.ascii	"CyExitCriticalSection\000"
 5605      69744372 
 5605      69746963 
 5605      616C5365 
 5605      6374696F 
 5606              	.LASF137:
 5607 0021 726F6D5F 		.ascii	"rom_bpu\000"
 5607      62707500 
 5608              	.LASF181:
 5609 0029 74696D65 		.ascii	"timer_stop\000"
 5609      725F7374 
 5609      6F7000
 5610              	.LASF32:
 5611 0034 636C6B5F 		.ascii	"clk_select\000"
 5611      73656C65 
 5611      637400
 5612              	.LASF156:
 5613 003f 6363675F 		.ascii	"ccg_timer_t\000"
 5613      74696D65 
 5613      725F7400 
 5614              	.LASF115:
 5615 004b 73686373 		.ascii	"shcsr\000"
 5615      7200
 5616              	.LASF57:
 5617 0051 6477745F 		.ascii	"dwt_mask0\000"
 5617      6D61736B 
 5617      3000
 5618              	.LASF61:
 5619 005b 6477745F 		.ascii	"dwt_mask1\000"
 5619      6D61736B 
 5619      3100
 5620              	.LASF1:
 5621 0065 5F5F7569 		.ascii	"__uint8_t\000"
 5621      6E74385F 
 5621      7400
 5622              	.LASF157:
 5623 006f 73746172 		.ascii	"start_count\000"
 5623      745F636F 
 5623      756E7400 
 5624              	.LASF23:
 5625 007b 7077725F 		.ascii	"pwr_key_delay\000"
 5625      6B65795F 
 5625      64656C61 
 5625      7900
 5626              	.LASF155:
 5627 0089 70657269 		.ascii	"period\000"
ARM GAS  e:\temp\ccrFbtw8.s 			page 117


 5627      6F6400
 5628              	.LASF189:
 5629 0090 676C5F6D 		.ascii	"gl_multiplier\000"
 5629      756C7469 
 5629      706C6965 
 5629      7200
 5630              	.LASF103:
 5631 009e 69737072 		.ascii	"ispr\000"
 5631      00
 5632              	.LASF11:
 5633 00a3 6C6F6E67 		.ascii	"long long unsigned int\000"
 5633      206C6F6E 
 5633      6720756E 
 5633      7369676E 
 5633      65642069 
 5634              	.LASF51:
 5635 00ba 7077725F 		.ascii	"pwr_pwrsys_trim1\000"
 5635      70777273 
 5635      79735F74 
 5635      72696D31 
 5635      00
 5636              	.LASF31:
 5637 00cb 7473745F 		.ascii	"tst_adft_ctrl\000"
 5637      61646674 
 5637      5F637472 
 5637      6C00
 5638              	.LASF101:
 5639 00d9 69636572 		.ascii	"icer\000"
 5639      00
 5640              	.LASF0:
 5641 00de 5F5F696E 		.ascii	"__int8_t\000"
 5641      74385F74 
 5641      00
 5642              	.LASF96:
 5643 00e7 73797374 		.ascii	"syst_cvr\000"
 5643      5F637672 
 5643      00
 5644              	.LASF173:
 5645 00f0 7764745F 		.ascii	"wdt_interrupt_handler\000"
 5645      696E7465 
 5645      72727570 
 5645      745F6861 
 5645      6E646C65 
 5646              	.LASF164:
 5647 0106 696E7374 		.ascii	"instance\000"
 5647      616E6365 
 5647      00
 5648              	.LASF10:
 5649 010f 6C6F6E67 		.ascii	"long long int\000"
 5649      206C6F6E 
 5649      6720696E 
 5649      7400
 5650              	.LASF2:
 5651 011d 7369676E 		.ascii	"signed char\000"
 5651      65642063 
 5651      68617200 
 5652              	.LASF120:
ARM GAS  e:\temp\ccrFbtw8.s 			page 118


 5653 0129 64637273 		.ascii	"dcrsr\000"
 5653      7200
 5654              	.LASF29:
 5655 012f 7473745F 		.ascii	"tst_trim_cntr1\000"
 5655      7472696D 
 5655      5F636E74 
 5655      723100
 5656              	.LASF30:
 5657 013e 7473745F 		.ascii	"tst_trim_cntr2\000"
 5657      7472696D 
 5657      5F636E74 
 5657      723200
 5658              	.LASF53:
 5659 014d 50535253 		.ascii	"PSRSSLT_REGS_T\000"
 5659      534C545F 
 5659      52454753 
 5659      5F5400
 5660              	.LASF121:
 5661 015c 64637264 		.ascii	"dcrdr\000"
 5661      7200
 5662              	.LASF193:
 5663 0162 676C5F74 		.ascii	"gl_timer_handle\000"
 5663      696D6572 
 5663      5F68616E 
 5663      646C6500 
 5664              	.LASF140:
 5665 0172 726F6D5F 		.ascii	"rom_csmt\000"
 5665      63736D74 
 5665      00
 5666              	.LASF138:
 5667 017b 726F6D5F 		.ascii	"rom_end\000"
 5667      656E6400 
 5668              	.LASF175:
 5669 0183 73746174 		.ascii	"state\000"
 5669      6500
 5670              	.LASF182:
 5671 0189 74696D65 		.ascii	"timer_stop_all\000"
 5671      725F7374 
 5671      6F705F61 
 5671      6C6C00
 5672              	.LASF7:
 5673 0198 6C6F6E67 		.ascii	"long int\000"
 5673      20696E74 
 5673      00
 5674              	.LASF197:
 5675 01a1 4379496E 		.ascii	"CyIntDisable\000"
 5675      74446973 
 5675      61626C65 
 5675      00
 5676              	.LASF132:
 5677 01ae 7363735F 		.ascii	"scs_cid2\000"
 5677      63696432 
 5677      00
 5678              	.LASF108:
 5679 01b7 63707569 		.ascii	"cpuid\000"
 5679      6400
 5680              	.LASF142:
ARM GAS  e:\temp\ccrFbtw8.s 			page 119


 5681 01bd 72737276 		.ascii	"rsrvd23\000"
 5681      64323300 
 5682              	.LASF100:
 5683 01c5 72737276 		.ascii	"rsrvd10\000"
 5683      64313000 
 5684              	.LASF4:
 5685 01cd 73686F72 		.ascii	"short int\000"
 5685      7420696E 
 5685      7400
 5686              	.LASF106:
 5687 01d7 72737276 		.ascii	"rsrvd13\000"
 5687      64313300 
 5688              	.LASF15:
 5689 01df 75696E74 		.ascii	"uint16_t\000"
 5689      31365F74 
 5689      00
 5690              	.LASF107:
 5691 01e8 72737276 		.ascii	"rsrvd14\000"
 5691      64313400 
 5692              	.LASF18:
 5693 01f0 646F7562 		.ascii	"double\000"
 5693      6C6500
 5694              	.LASF110:
 5695 01f7 72737276 		.ascii	"rsrvd15\000"
 5695      64313500 
 5696              	.LASF112:
 5697 01ff 72737276 		.ascii	"rsrvd16\000"
 5697      64313600 
 5698              	.LASF145:
 5699 0207 726F6D5F 		.ascii	"rom_pid2\000"
 5699      70696432 
 5699      00
 5700              	.LASF56:
 5701 0210 6477745F 		.ascii	"dwt_comp0\000"
 5701      636F6D70 
 5701      3000
 5702              	.LASF6:
 5703 021a 73686F72 		.ascii	"short unsigned int\000"
 5703      7420756E 
 5703      7369676E 
 5703      65642069 
 5703      6E7400
 5704              	.LASF141:
 5705 022d 726F6D5F 		.ascii	"rom_pid4\000"
 5705      70696434 
 5705      00
 5706              	.LASF161:
 5707 0236 696E7465 		.ascii	"interval\000"
 5707      7276616C 
 5707      00
 5708              	.LASF187:
 5709 023f 74656D70 		.ascii	"temp_count\000"
 5709      5F636F75 
 5709      6E7400
 5710              	.LASF206:
 5711 024a 68775F74 		.ascii	"hw_timer_get_count\000"
 5711      696D6572 
ARM GAS  e:\temp\ccrFbtw8.s 			page 120


 5711      5F676574 
 5711      5F636F75 
 5711      6E7400
 5712              	.LASF8:
 5713 025d 5F5F7569 		.ascii	"__uint32_t\000"
 5713      6E743332 
 5713      5F7400
 5714              	.LASF46:
 5715 0268 7077725F 		.ascii	"pwr_bg_trim1\000"
 5715      62675F74 
 5715      72696D31 
 5715      00
 5716              	.LASF47:
 5717 0275 7077725F 		.ascii	"pwr_bg_trim2\000"
 5717      62675F74 
 5717      72696D32 
 5717      00
 5718              	.LASF76:
 5719 0282 62705F63 		.ascii	"bp_comp0\000"
 5719      6F6D7030 
 5719      00
 5720              	.LASF77:
 5721 028b 62705F63 		.ascii	"bp_comp1\000"
 5721      6F6D7031 
 5721      00
 5722              	.LASF78:
 5723 0294 62705F63 		.ascii	"bp_comp2\000"
 5723      6F6D7032 
 5723      00
 5724              	.LASF79:
 5725 029d 62705F63 		.ascii	"bp_comp3\000"
 5725      6F6D7033 
 5725      00
 5726              	.LASF169:
 5727 02a6 68775F74 		.ascii	"hw_timer_init\000"
 5727      696D6572 
 5727      5F696E69 
 5727      7400
 5728              	.LASF205:
 5729 02b4 433A5C55 		.ascii	"C:\\Users\\Admin\\Desktop\\_FIRMWARE\\DBARLite\\CYP"
 5729      73657273 
 5729      5C41646D 
 5729      696E5C44 
 5729      65736B74 
 5730 02e1 44353232 		.ascii	"D5225\\CYPD5225-96BZXI_notebook\\CYPD5225-96BZXI_no"
 5730      355C4359 
 5730      50443532 
 5730      32352D39 
 5730      36425A58 
 5731 0312 7465626F 		.ascii	"tebook.cydsn\\noboot.cydsn\000"
 5731      6F6B2E63 
 5731      7964736E 
 5731      5C6E6F62 
 5731      6F6F742E 
 5732              	.LASF170:
 5733 032c 68775F74 		.ascii	"hw_timer_load_period\000"
 5733      696D6572 
ARM GAS  e:\temp\ccrFbtw8.s 			page 121


 5733      5F6C6F61 
 5733      645F7065 
 5733      72696F64 
 5734              	.LASF119:
 5735 0341 64686373 		.ascii	"dhcsr\000"
 5735      7200
 5736              	.LASF12:
 5737 0347 756E7369 		.ascii	"unsigned int\000"
 5737      676E6564 
 5737      20696E74 
 5737      00
 5738              	.LASF58:
 5739 0354 6477745F 		.ascii	"dwt_function0\000"
 5739      66756E63 
 5739      74696F6E 
 5739      3000
 5740              	.LASF62:
 5741 0362 6477745F 		.ascii	"dwt_function1\000"
 5741      66756E63 
 5741      74696F6E 
 5741      3100
 5742              	.LASF9:
 5743 0370 6C6F6E67 		.ascii	"long unsigned int\000"
 5743      20756E73 
 5743      69676E65 
 5743      6420696E 
 5743      7400
 5744              	.LASF74:
 5745 0382 62705F63 		.ascii	"bp_ctrl\000"
 5745      74726C00 
 5746              	.LASF201:
 5747 038a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5747      74657243 
 5747      72697469 
 5747      63616C53 
 5747      65637469 
 5748              	.LASF109:
 5749 03a1 69637372 		.ascii	"icsr\000"
 5749      00
 5750              	.LASF151:
 5751 03a6 50434D30 		.ascii	"PCM0_REGS_T\000"
 5751      5F524547 
 5751      535F5400 
 5752              	.LASF117:
 5753 03b2 64667372 		.ascii	"dfsr\000"
 5753      00
 5754              	.LASF87:
 5755 03b7 62705F63 		.ascii	"bp_cid0\000"
 5755      69643000 
 5756              	.LASF88:
 5757 03bf 62705F63 		.ascii	"bp_cid1\000"
 5757      69643100 
 5758              	.LASF90:
 5759 03c7 62705F63 		.ascii	"bp_cid3\000"
 5759      69643300 
 5760              	.LASF198:
 5761 03cf 4379496E 		.ascii	"CyIntSetVector\000"
ARM GAS  e:\temp\ccrFbtw8.s 			page 122


 5761      74536574 
 5761      56656374 
 5761      6F7200
 5762              	.LASF95:
 5763 03de 73797374 		.ascii	"syst_rvr\000"
 5763      5F727672 
 5763      00
 5764              	.LASF147:
 5765 03e7 726F6D5F 		.ascii	"rom_cid0\000"
 5765      63696430 
 5765      00
 5766              	.LASF148:
 5767 03f0 726F6D5F 		.ascii	"rom_cid1\000"
 5767      63696431 
 5767      00
 5768              	.LASF149:
 5769 03f9 726F6D5F 		.ascii	"rom_cid2\000"
 5769      63696432 
 5769      00
 5770              	.LASF150:
 5771 0402 726F6D5F 		.ascii	"rom_cid3\000"
 5771      63696433 
 5771      00
 5772              	.LASF89:
 5773 040b 62705F63 		.ascii	"bp_cid2\000"
 5773      69643200 
 5774              	.LASF158:
 5775 0413 656E645F 		.ascii	"end_count\000"
 5775      636F756E 
 5775      7400
 5776              	.LASF153:
 5777 041d 74696D65 		.ascii	"timer_cb_t\000"
 5777      725F6362 
 5777      5F7400
 5778              	.LASF180:
 5779 0428 74696D65 		.ascii	"timer_init\000"
 5779      725F696E 
 5779      697400
 5780              	.LASF113:
 5781 0433 73687072 		.ascii	"shpr2\000"
 5781      3200
 5782              	.LASF114:
 5783 0439 73687072 		.ascii	"shpr3\000"
 5783      3300
 5784              	.LASF167:
 5785 043f 68775F74 		.ascii	"hw_timer_stop\000"
 5785      696D6572 
 5785      5F73746F 
 5785      7000
 5786              	.LASF41:
 5787 044d 73727373 		.ascii	"srss_intr_mask\000"
 5787      5F696E74 
 5787      725F6D61 
 5787      736B00
 5788              	.LASF82:
 5789 045c 72737276 		.ascii	"rsrvd6\000"
 5789      643600
ARM GAS  e:\temp\ccrFbtw8.s 			page 123


 5790              	.LASF91:
 5791 0463 72737276 		.ascii	"rsrvd7\000"
 5791      643700
 5792              	.LASF35:
 5793 046a 636C6B5F 		.ascii	"clk_dft_select\000"
 5793      6466745F 
 5793      73656C65 
 5793      637400
 5794              	.LASF185:
 5795 0479 74696D65 		.ascii	"timer_num_active\000"
 5795      725F6E75 
 5795      6D5F6163 
 5795      74697665 
 5795      00
 5796              	.LASF196:
 5797 048a 676C5F69 		.ascii	"gl_is_callback\000"
 5797      735F6361 
 5797      6C6C6261 
 5797      636B00
 5798              	.LASF66:
 5799 0499 6477745F 		.ascii	"dwt_pid0\000"
 5799      70696430 
 5799      00
 5800              	.LASF67:
 5801 04a2 6477745F 		.ascii	"dwt_pid1\000"
 5801      70696431 
 5801      00
 5802              	.LASF68:
 5803 04ab 6477745F 		.ascii	"dwt_pid2\000"
 5803      70696432 
 5803      00
 5804              	.LASF69:
 5805 04b4 6477745F 		.ascii	"dwt_pid3\000"
 5805      70696433 
 5805      00
 5806              	.LASF64:
 5807 04bd 6477745F 		.ascii	"dwt_pid4\000"
 5807      70696434 
 5807      00
 5808              	.LASF111:
 5809 04c6 61697263 		.ascii	"aircr\000"
 5809      7200
 5810              	.LASF21:
 5811 04cc 73697A65 		.ascii	"sizetype\000"
 5811      74797065 
 5811      00
 5812              	.LASF172:
 5813 04d5 6375725F 		.ascii	"cur_count\000"
 5813      636F756E 
 5813      7400
 5814              	.LASF174:
 5815 04df 68775F74 		.ascii	"hw_timer_start\000"
 5815      696D6572 
 5815      5F737461 
 5815      727400
 5816              	.LASF45:
 5817 04ee 72737276 		.ascii	"rsrvd0\000"
ARM GAS  e:\temp\ccrFbtw8.s 			page 124


 5817      643000
 5818              	.LASF59:
 5819 04f5 72737276 		.ascii	"rsrvd1\000"
 5819      643100
 5820              	.LASF63:
 5821 04fc 72737276 		.ascii	"rsrvd2\000"
 5821      643200
 5822              	.LASF65:
 5823 0503 72737276 		.ascii	"rsrvd3\000"
 5823      643300
 5824              	.LASF75:
 5825 050a 72737276 		.ascii	"rsrvd4\000"
 5825      643400
 5826              	.LASF80:
 5827 0511 72737276 		.ascii	"rsrvd5\000"
 5827      643500
 5828              	.LASF22:
 5829 0518 7077725F 		.ascii	"pwr_control\000"
 5829      636F6E74 
 5829      726F6C00 
 5830              	.LASF27:
 5831 0524 7473745F 		.ascii	"tst_mode\000"
 5831      6D6F6465 
 5831      00
 5832              	.LASF93:
 5833 052d 72737276 		.ascii	"rsrvd8\000"
 5833      643800
 5834              	.LASF98:
 5835 0534 72737276 		.ascii	"rsrvd9\000"
 5835      643900
 5836              	.LASF28:
 5837 053b 7473745F 		.ascii	"tst_ddft_ctrl\000"
 5837      64646674 
 5837      5F637472 
 5837      6C00
 5838              	.LASF60:
 5839 0549 6477745F 		.ascii	"dwt_comp1\000"
 5839      636F6D70 
 5839      3100
 5840              	.LASF135:
 5841 0553 726F6D5F 		.ascii	"rom_scs\000"
 5841      73637300 
 5842              	.LASF162:
 5843 055b 68775F74 		.ascii	"hw_timer_get_tick_interval\000"
 5843      696D6572 
 5843      5F676574 
 5843      5F746963 
 5843      6B5F696E 
 5844              	.LASF26:
 5845 0576 7077725F 		.ascii	"pwr_ddft_xres\000"
 5845      64646674 
 5845      5F787265 
 5845      7300
 5846              	.LASF160:
 5847 0584 63757272 		.ascii	"current\000"
 5847      656E7400 
 5848              	.LASF179:
ARM GAS  e:\temp\ccrFbtw8.s 			page 125


 5849 058c 74696D65 		.ascii	"timer_start_wocb\000"
 5849      725F7374 
 5849      6172745F 
 5849      776F6362 
 5849      00
 5850              	.LASF171:
 5851 059d 74696D65 		.ascii	"timer_interrupt_handler\000"
 5851      725F696E 
 5851      74657272 
 5851      7570745F 
 5851      68616E64 
 5852              	.LASF17:
 5853 05b5 666C6F61 		.ascii	"float\000"
 5853      7400
 5854              	.LASF38:
 5855 05bb 7764745F 		.ascii	"wdt_match\000"
 5855      6D617463 
 5855      6800
 5856              	.LASF191:
 5857 05c5 676C5F74 		.ascii	"gl_tick_time\000"
 5857      69636B5F 
 5857      74696D65 
 5857      00
 5858              	.LASF194:
 5859 05d2 676C5F6E 		.ascii	"gl_num_active\000"
 5859      756D5F61 
 5859      63746976 
 5859      6500
 5860              	.LASF203:
 5861 05e0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5861      43313120 
 5861      352E342E 
 5861      31203230 
 5861      31363036 
 5862 0613 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5862      20726576 
 5862      6973696F 
 5862      6E203233 
 5862      37373135 
 5863 0646 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects -finline-fu"
 5863      66756E63 
 5863      74696F6E 
 5863      2D736563 
 5863      74696F6E 
 5864 0679 6E637469 		.ascii	"nctions -fno-strict-aliasing\000"
 5864      6F6E7320 
 5864      2D666E6F 
 5864      2D737472 
 5864      6963742D 
 5865              	.LASF126:
 5866 0696 7363735F 		.ascii	"scs_pid0\000"
 5866      70696430 
 5866      00
 5867              	.LASF102:
 5868 069f 72737276 		.ascii	"rsrvd11\000"
 5868      64313100 
 5869              	.LASF99:
ARM GAS  e:\temp\ccrFbtw8.s 			page 126


 5870 06a7 69736572 		.ascii	"iser\000"
 5870      00
 5871              	.LASF177:
 5872 06ac 5F426F6F 		.ascii	"_Bool\000"
 5872      6C00
 5873              	.LASF128:
 5874 06b2 7363735F 		.ascii	"scs_pid2\000"
 5874      70696432 
 5874      00
 5875              	.LASF3:
 5876 06bb 756E7369 		.ascii	"unsigned char\000"
 5876      676E6564 
 5876      20636861 
 5876      7200
 5877              	.LASF129:
 5878 06c9 7363735F 		.ascii	"scs_pid3\000"
 5878      70696433 
 5878      00
 5879              	.LASF116:
 5880 06d2 72737276 		.ascii	"rsrvd17\000"
 5880      64313700 
 5881              	.LASF118:
 5882 06da 72737276 		.ascii	"rsrvd18\000"
 5882      64313800 
 5883              	.LASF123:
 5884 06e2 72737276 		.ascii	"rsrvd19\000"
 5884      64313900 
 5885              	.LASF36:
 5886 06ea 7764745F 		.ascii	"wdt_disable_key\000"
 5886      64697361 
 5886      626C655F 
 5886      6B657900 
 5887              	.LASF43:
 5888 06fa 7265735F 		.ascii	"res_cause\000"
 5888      63617573 
 5888      6500
 5889              	.LASF55:
 5890 0704 6477745F 		.ascii	"dwt_pcsr\000"
 5890      70637372 
 5890      00
 5891              	.LASF200:
 5892 070d 4379496E 		.ascii	"CyIntEnable\000"
 5892      74456E61 
 5892      626C6500 
 5893              	.LASF42:
 5894 0719 73727373 		.ascii	"srss_adft_control\000"
 5894      5F616466 
 5894      745F636F 
 5894      6E74726F 
 5894      6C00
 5895              	.LASF192:
 5896 072b 676C5F6D 		.ascii	"gl_match\000"
 5896      61746368 
 5896      00
 5897              	.LASF163:
 5898 0734 74696D65 		.ascii	"timer_get_index\000"
 5898      725F6765 
ARM GAS  e:\temp\ccrFbtw8.s 			page 127


 5898      745F696E 
 5898      64657800 
 5899              	.LASF168:
 5900 0744 74696D65 		.ascii	"timer_stop_internal\000"
 5900      725F7374 
 5900      6F705F69 
 5900      6E746572 
 5900      6E616C00 
 5901              	.LASF199:
 5902 0758 43794465 		.ascii	"CyDelayUs\000"
 5902      6C617955 
 5902      7300
 5903              	.LASF166:
 5904 0762 7764745F 		.ascii	"wdt_calibrate\000"
 5904      63616C69 
 5904      62726174 
 5904      6500
 5905              	.LASF94:
 5906 0770 73797374 		.ascii	"syst_csr\000"
 5906      5F637372 
 5906      00
 5907              	.LASF122:
 5908 0779 64656D63 		.ascii	"demcr\000"
 5908      7200
 5909              	.LASF190:
 5910 077f 676C5F73 		.ascii	"gl_start_tick\000"
 5910      74617274 
 5910      5F746963 
 5910      6B00
 5911              	.LASF48:
 5912 078d 636C6B5F 		.ascii	"clk_imo_select\000"
 5912      696D6F5F 
 5912      73656C65 
 5912      637400
 5913              	.LASF188:
 5914 079c 74696D65 		.ascii	"timer_enter_sleep\000"
 5914      725F656E 
 5914      7465725F 
 5914      736C6565 
 5914      7000
 5915              	.LASF136:
 5916 07ae 726F6D5F 		.ascii	"rom_dwt\000"
 5916      64777400 
 5917              	.LASF127:
 5918 07b6 7363735F 		.ascii	"scs_pid1\000"
 5918      70696431 
 5918      00
 5919              	.LASF207:
 5920 07bf 74696D65 		.ascii	"timer_get_multiplier\000"
 5920      725F6765 
 5920      745F6D75 
 5920      6C746970 
 5920      6C696572 
 5921              	.LASF20:
 5922 07d4 6C6F6E67 		.ascii	"long double\000"
 5922      20646F75 
 5922      626C6500 
ARM GAS  e:\temp\ccrFbtw8.s 			page 128


 5923              	.LASF19:
 5924 07e0 63686172 		.ascii	"char\000"
 5924      00
 5925              	.LASF124:
 5926 07e5 7363735F 		.ascii	"scs_pid4\000"
 5926      70696434 
 5926      00
 5927              	.LASF125:
 5928 07ee 72737276 		.ascii	"rsrvd20\000"
 5928      64323000 
 5929              	.LASF134:
 5930 07f6 72737276 		.ascii	"rsrvd21\000"
 5930      64323100 
 5931              	.LASF139:
 5932 07fe 72737276 		.ascii	"rsrvd22\000"
 5932      64323200 
 5933              	.LASF39:
 5934 0806 73727373 		.ascii	"srss_intr\000"
 5934      5F696E74 
 5934      7200
 5935              	.LASF33:
 5936 0810 636C6B5F 		.ascii	"clk_ilo_config\000"
 5936      696C6F5F 
 5936      636F6E66 
 5936      696700
 5937              	.LASF5:
 5938 081f 5F5F7569 		.ascii	"__uint16_t\000"
 5938      6E743136 
 5938      5F7400
 5939              	.LASF165:
 5940 082a 696E6465 		.ascii	"index\000"
 5940      7800
 5941              	.LASF178:
 5942 0830 74696D65 		.ascii	"timer_start\000"
 5942      725F7374 
 5942      61727400 
 5943              	.LASF104:
 5944 083c 72737276 		.ascii	"rsrvd12\000"
 5944      64313200 
 5945              	.LASF37:
 5946 0844 7764745F 		.ascii	"wdt_counter\000"
 5946      636F756E 
 5946      74657200 
 5947              	.LASF13:
 5948 0850 696E7438 		.ascii	"int8_t\000"
 5948      5F7400
 5949              	.LASF25:
 5950 0857 7077725F 		.ascii	"pwr_ddft_select\000"
 5950      64646674 
 5950      5F73656C 
 5950      65637400 
 5951              	.LASF44:
 5952 0867 7265735F 		.ascii	"res_dft\000"
 5952      64667400 
 5953              	.LASF85:
 5954 086f 62705F70 		.ascii	"bp_pid2\000"
 5954      69643200 
ARM GAS  e:\temp\ccrFbtw8.s 			page 129


 5955              	.LASF16:
 5956 0877 75696E74 		.ascii	"uint32_t\000"
 5956      33325F74 
 5956      00
 5957              	.LASF81:
 5958 0880 62705F70 		.ascii	"bp_pid4\000"
 5958      69643400 
 5959              	.LASF176:
 5960 0888 73746174 		.ascii	"status\000"
 5960      757300
 5961              	.LASF183:
 5962 088f 74696D65 		.ascii	"timer_stop_range\000"
 5962      725F7374 
 5962      6F705F72 
 5962      616E6765 
 5962      00
 5963              	.LASF54:
 5964 08a0 6477745F 		.ascii	"dwt_ctrl\000"
 5964      6374726C 
 5964      00
 5965              	.LASF14:
 5966 08a9 75696E74 		.ascii	"uint8_t\000"
 5966      385F7400 
 5967              	.LASF186:
 5968 08b1 74696D65 		.ascii	"timer_get_count\000"
 5968      725F6765 
 5968      745F636F 
 5968      756E7400 
 5969              	.LASF24:
 5970 08c1 7077725F 		.ascii	"pwr_adft_select\000"
 5970      61646674 
 5970      5F73656C 
 5970      65637400 
 5971              	.LASF97:
 5972 08d1 73797374 		.ascii	"syst_calib\000"
 5972      5F63616C 
 5972      696200
 5973              	.LASF70:
 5974 08dc 6477745F 		.ascii	"dwt_cid0\000"
 5974      63696430 
 5974      00
 5975              	.LASF152:
 5976 08e5 74696D65 		.ascii	"timer_id_t\000"
 5976      725F6964 
 5976      5F7400
 5977              	.LASF72:
 5978 08f0 6477745F 		.ascii	"dwt_cid2\000"
 5978      63696432 
 5978      00
 5979              	.LASF73:
 5980 08f9 6477745F 		.ascii	"dwt_cid3\000"
 5980      63696433 
 5980      00
 5981              	.LASF34:
 5982 0902 636C6B5F 		.ascii	"clk_imo_config\000"
 5982      696D6F5F 
 5982      636F6E66 
ARM GAS  e:\temp\ccrFbtw8.s 			page 130


 5982      696700
 5983              	.LASF204:
 5984 0911 2E2E5C73 		.ascii	"..\\src\\system\\timer.c\000"
 5984      72635C73 
 5984      79737465 
 5984      6D5C7469 
 5984      6D65722E 
 5985              	.LASF184:
 5986 0927 74696D65 		.ascii	"timer_is_running\000"
 5986      725F6973 
 5986      5F72756E 
 5986      6E696E67 
 5986      00
 5987              	.LASF71:
 5988 0938 6477745F 		.ascii	"dwt_cid1\000"
 5988      63696431 
 5988      00
 5989              	.LASF83:
 5990 0941 62705F70 		.ascii	"bp_pid0\000"
 5990      69643000 
 5991              	.LASF84:
 5992 0949 62705F70 		.ascii	"bp_pid1\000"
 5992      69643100 
 5993              	.LASF159:
 5994 0951 73746172 		.ascii	"start\000"
 5994      7400
 5995              	.LASF86:
 5996 0957 62705F70 		.ascii	"bp_pid3\000"
 5996      69643300 
 5997              	.LASF130:
 5998 095f 7363735F 		.ascii	"scs_cid0\000"
 5998      63696430 
 5998      00
 5999              	.LASF131:
 6000 0968 7363735F 		.ascii	"scs_cid1\000"
 6000      63696431 
 6000      00
 6001              	.LASF195:
 6002 0971 676C5F74 		.ascii	"gl_total_active\000"
 6002      6F74616C 
 6002      5F616374 
 6002      69766500 
 6003              	.LASF133:
 6004 0981 7363735F 		.ascii	"scs_cid3\000"
 6004      63696433 
 6004      00
 6005              	.LASF143:
 6006 098a 726F6D5F 		.ascii	"rom_pid0\000"
 6006      70696430 
 6006      00
 6007              	.LASF144:
 6008 0993 726F6D5F 		.ascii	"rom_pid1\000"
 6008      70696431 
 6008      00
 6009              	.LASF92:
 6010 099c 6163746C 		.ascii	"actlr\000"
 6010      7200
ARM GAS  e:\temp\ccrFbtw8.s 			page 131


 6011              	.LASF146:
 6012 09a2 726F6D5F 		.ascii	"rom_pid3\000"
 6012      70696433 
 6012      00
 6013              	.LASF49:
 6014 09ab 636C6B5F 		.ascii	"clk_imo_trim1\000"
 6014      696D6F5F 
 6014      7472696D 
 6014      3100
 6015              	.LASF50:
 6016 09b9 636C6B5F 		.ascii	"clk_imo_trim2\000"
 6016      696D6F5F 
 6016      7472696D 
 6016      3200
 6017              	.LASF52:
 6018 09c7 636C6B5F 		.ascii	"clk_imo_trim3\000"
 6018      696D6F5F 
 6018      7472696D 
 6018      3300
 6019              	.LASF40:
 6020 09d5 73727373 		.ascii	"srss_intr_set\000"
 6020      5F696E74 
 6020      725F7365 
 6020      7400
 6021              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

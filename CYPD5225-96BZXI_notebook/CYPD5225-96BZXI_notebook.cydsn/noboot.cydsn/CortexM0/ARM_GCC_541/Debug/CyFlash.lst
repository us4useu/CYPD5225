ARM GAS  e:\temp\cciA1G8G.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyFlash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysFlashClockBackup,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysFlashClockBackup, %function
  24              	CySysFlashClockBackup:
  25              	.LFB2:
  26              		.file 1 "Generated_Source\\PSoC4\\CyFlash.c"
   1:Generated_Source\PSoC4/CyFlash.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyFlash.c **** * \file CyFlash.c
   3:Generated_Source\PSoC4/CyFlash.c **** * \version 5.70
   4:Generated_Source\PSoC4/CyFlash.c **** *
   5:Generated_Source\PSoC4/CyFlash.c **** * \brief Provides an API for the FLASH.
   6:Generated_Source\PSoC4/CyFlash.c **** *
   7:Generated_Source\PSoC4/CyFlash.c **** * \note This code is endian agnostic.
   8:Generated_Source\PSoC4/CyFlash.c **** *
   9:Generated_Source\PSoC4/CyFlash.c **** * \note Documentation of the API's in this file is located in the System
  10:Generated_Source\PSoC4/CyFlash.c **** * Reference Guide provided with PSoC Creator.
  11:Generated_Source\PSoC4/CyFlash.c **** *
  12:Generated_Source\PSoC4/CyFlash.c **** ********************************************************************************
  13:Generated_Source\PSoC4/CyFlash.c **** * \copyright
  14:Generated_Source\PSoC4/CyFlash.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  15:Generated_Source\PSoC4/CyFlash.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:Generated_Source\PSoC4/CyFlash.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:Generated_Source\PSoC4/CyFlash.c **** * the software package with which this file was provided.
  18:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  19:Generated_Source\PSoC4/CyFlash.c **** 
  20:Generated_Source\PSoC4/CyFlash.c **** #include "CyFlash.h"
  21:Generated_Source\PSoC4/CyFlash.c **** 
  22:Generated_Source\PSoC4/CyFlash.c **** 
  23:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  24:Generated_Source\PSoC4/CyFlash.c **** * Cypress identified a defect with the Flash write functionality of the
  25:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4000, PSoC 4000U, PSoC 4100, and PSoC 4200 devices. The 
  26:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashWriteRow() function now checks the data to be written and, if 
  27:Generated_Source\PSoC4/CyFlash.c **** * necessary, modifies it to have a non-zero checksum. After writing to Flash, 
  28:Generated_Source\PSoC4/CyFlash.c **** * the modified data is replaced (Flash program) with 
  29:Generated_Source\PSoC4/CyFlash.c **** * the correct (original) data.
  30:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  31:Generated_Source\PSoC4/CyFlash.c **** #define CY_FLASH_CHECKSUM_WORKAROUND    (CY_PSOC4_4000 || CY_PSOC4_4100 || CY_PSOC4_4200 || CY_PSOC
ARM GAS  e:\temp\cciA1G8G.s 			page 2


  32:Generated_Source\PSoC4/CyFlash.c **** 
  33:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_4000)
  34:Generated_Source\PSoC4/CyFlash.c ****     static CY_SYS_FLASH_CLOCK_BACKUP_STRUCT cySysFlashBackup;
  35:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FM || ((!CY_PSOC4_4000) && CY_IP_SPCIF_SYNCHRONOUS) || (!CY_IP_FM) && CY_PSOC4_400
  36:Generated_Source\PSoC4/CyFlash.c **** 
  37:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void);
  38:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void);
  39:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
  40:Generated_Source\PSoC4/CyFlash.c ****     static cystatus CySysFlashClockConfig(void);
  41:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
  42:Generated_Source\PSoC4/CyFlash.c **** 
  43:Generated_Source\PSoC4/CyFlash.c **** 
  44:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
  45:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashWriteRow
  46:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
  47:Generated_Source\PSoC4/CyFlash.c **** *
  48:Generated_Source\PSoC4/CyFlash.c **** * Erases a row of Flash and programs it with the new data.
  49:Generated_Source\PSoC4/CyFlash.c **** *
  50:Generated_Source\PSoC4/CyFlash.c **** * The IMO must be enabled before calling this function. The operation of the
  51:Generated_Source\PSoC4/CyFlash.c **** * flash writing hardware is dependent on the IMO.
  52:Generated_Source\PSoC4/CyFlash.c **** *
  53:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000, PSoC 4100 BLE and PSoC 4200 BLE devices (PSoC 4100 BLE and
  54:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200 BLE devices with 256K of Flash memory are not affected), this API
  55:Generated_Source\PSoC4/CyFlash.c **** * will automatically modify the clock settings for the device. Writing to
  56:Generated_Source\PSoC4/CyFlash.c **** * flash requires that changes be made to the IMO and HFCLK settings. The
  57:Generated_Source\PSoC4/CyFlash.c **** * configuration is restored before returning. This will impact the operation
  58:Generated_Source\PSoC4/CyFlash.c **** * of most of the hardware in the device.
  59:Generated_Source\PSoC4/CyFlash.c **** *
  60:Generated_Source\PSoC4/CyFlash.c **** * For PSoC 4000 devices this API will automatically modify the clock settings
  61:Generated_Source\PSoC4/CyFlash.c **** * for the device. Writing to flash requires that changes be made to the IMO
  62:Generated_Source\PSoC4/CyFlash.c **** * and HFCLK settings. The configuration is restored before returning. HFCLK
  63:Generated_Source\PSoC4/CyFlash.c **** * will have several frequency changes during the operation of this API between
  64:Generated_Source\PSoC4/CyFlash.c **** * a minimum frequency of the current IMO frequency divided by 8 and a maximum
  65:Generated_Source\PSoC4/CyFlash.c **** * frequency of 12 MHz. This will impact the operation of most of the hardware
  66:Generated_Source\PSoC4/CyFlash.c **** * in the device.
  67:Generated_Source\PSoC4/CyFlash.c **** *
  68:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
  69:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
  70:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
  71:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
  72:Generated_Source\PSoC4/CyFlash.c **** *
  73:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
  74:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
  75:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
  76:Generated_Source\PSoC4/CyFlash.c **** * details.
  77:Generated_Source\PSoC4/CyFlash.c **** *
  78:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
  79:Generated_Source\PSoC4/CyFlash.c **** *
  80:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
  81:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashWriteRow(uint32 rowNum, const uint8 rowData[])
  82:Generated_Source\PSoC4/CyFlash.c **** {
  83:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
  84:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
  85:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
  86:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
  87:Generated_Source\PSoC4/CyFlash.c **** 
  88:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_FLASH_CHECKSUM_WORKAROUND)
ARM GAS  e:\temp\cciA1G8G.s 			page 3


  89:Generated_Source\PSoC4/CyFlash.c ****         uint32 needChecksumWorkaround = 0u;
  90:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedIndex = 0u;
  91:Generated_Source\PSoC4/CyFlash.c ****         uint32 savedValue = 0u;
  92:Generated_Source\PSoC4/CyFlash.c ****         uint32 checksum = 0u;
  93:Generated_Source\PSoC4/CyFlash.c ****         uint32 bits = 0u;
  94:Generated_Source\PSoC4/CyFlash.c ****         uint32 i;
  95:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
  96:Generated_Source\PSoC4/CyFlash.c **** 
  97:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
  98:Generated_Source\PSoC4/CyFlash.c ****     {
  99:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 100:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 101:Generated_Source\PSoC4/CyFlash.c **** 
 102:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_FLASH_CHECKSUM_WORKAROUND)
 103:Generated_Source\PSoC4/CyFlash.c **** 
 104:Generated_Source\PSoC4/CyFlash.c ****             for (i = 2u; i < ((CY_FLASH_SIZEOF_ROW / sizeof(uint32)) + 2u); i++)
 105:Generated_Source\PSoC4/CyFlash.c ****             {
 106:Generated_Source\PSoC4/CyFlash.c ****                 uint32 tmp = parameters[i];
 107:Generated_Source\PSoC4/CyFlash.c ****                 if (tmp != 0u)
 108:Generated_Source\PSoC4/CyFlash.c ****                 {
 109:Generated_Source\PSoC4/CyFlash.c ****                     checksum += tmp;
 110:Generated_Source\PSoC4/CyFlash.c ****                     bits |= tmp;
 111:Generated_Source\PSoC4/CyFlash.c ****                     savedIndex = i;
 112:Generated_Source\PSoC4/CyFlash.c ****                 }
 113:Generated_Source\PSoC4/CyFlash.c ****             }
 114:Generated_Source\PSoC4/CyFlash.c **** 
 115:Generated_Source\PSoC4/CyFlash.c ****             needChecksumWorkaround = ((checksum == 0u) && (bits != 0u)) ? 1u : 0u;
 116:Generated_Source\PSoC4/CyFlash.c ****             if (needChecksumWorkaround != 0u)
 117:Generated_Source\PSoC4/CyFlash.c ****             {
 118:Generated_Source\PSoC4/CyFlash.c ****                 savedValue = parameters[savedIndex];
 119:Generated_Source\PSoC4/CyFlash.c ****                 parameters[savedIndex] = 0u;
 120:Generated_Source\PSoC4/CyFlash.c ****             }
 121:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 122:Generated_Source\PSoC4/CyFlash.c **** 
 123:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 124:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 125:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 126:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 127:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 128:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 129:Generated_Source\PSoC4/CyFlash.c **** 
 130:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 131:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 132:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 133:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 134:Generated_Source\PSoC4/CyFlash.c **** 
 135:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 136:Generated_Source\PSoC4/CyFlash.c ****         {
 137:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 138:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 139:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 140:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 141:Generated_Source\PSoC4/CyFlash.c ****             * context.
 142:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 143:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 144:Generated_Source\PSoC4/CyFlash.c **** 
 145:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
ARM GAS  e:\temp\cciA1G8G.s 			page 4


 146:Generated_Source\PSoC4/CyFlash.c **** 
 147:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 148:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 149:Generated_Source\PSoC4/CyFlash.c ****             {
 150:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 151:Generated_Source\PSoC4/CyFlash.c ****             }
 152:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 153:Generated_Source\PSoC4/CyFlash.c **** 
 154:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 155:Generated_Source\PSoC4/CyFlash.c ****             {
 156:Generated_Source\PSoC4/CyFlash.c ****                 /* Write Row */
 157:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_RO
 158:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 159:Generated_Source\PSoC4/CyFlash.c **** 
 160:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 161:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_RO
 162:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 163:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 164:Generated_Source\PSoC4/CyFlash.c ****             }
 165:Generated_Source\PSoC4/CyFlash.c **** 
 166:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_FLASH_CHECKSUM_WORKAROUND)
 167:Generated_Source\PSoC4/CyFlash.c **** 
 168:Generated_Source\PSoC4/CyFlash.c ****                 if ((retValue == CYRET_SUCCESS) && (needChecksumWorkaround != 0u))
 169:Generated_Source\PSoC4/CyFlash.c ****                 {
 170:Generated_Source\PSoC4/CyFlash.c ****                     (void)memset((void *)&parameters[2u], 0, CY_FLASH_SIZEOF_ROW);
 171:Generated_Source\PSoC4/CyFlash.c ****                     parameters[savedIndex] = savedValue;
 172:Generated_Source\PSoC4/CyFlash.c **** 
 173:Generated_Source\PSoC4/CyFlash.c ****                     /* Load Flash Bytes */
 174:Generated_Source\PSoC4/CyFlash.c ****                     parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLA
 175:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLA
 176:Generated_Source\PSoC4/CyFlash.c ****                                      (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLA
 177:Generated_Source\PSoC4/CyFlash.c ****                                      CY_FLASH_KEY_ONE;
 178:Generated_Source\PSoC4/CyFlash.c ****                     parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 179:Generated_Source\PSoC4/CyFlash.c **** 
 180:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 181:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD
 182:Generated_Source\PSoC4/CyFlash.c ****                     CY_NOP;
 183:Generated_Source\PSoC4/CyFlash.c ****                     retValue = CY_FLASH_API_RETURN;
 184:Generated_Source\PSoC4/CyFlash.c **** 
 185:Generated_Source\PSoC4/CyFlash.c **** 
 186:Generated_Source\PSoC4/CyFlash.c ****                     if(retValue == CY_SYS_FLASH_SUCCESS)
 187:Generated_Source\PSoC4/CyFlash.c ****                     {
 188:Generated_Source\PSoC4/CyFlash.c ****                         /* Program Row */
 189:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u]  =
 190:Generated_Source\PSoC4/CyFlash.c ****                             (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_PROGRAM_ROW) <
 191:Generated_Source\PSoC4/CyFlash.c ****                                                     CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_O
 192:Generated_Source\PSoC4/CyFlash.c ****                         parameters[0u] |= (uint32)(rowNum << 16u);
 193:Generated_Source\PSoC4/CyFlash.c **** 
 194:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 195:Generated_Source\PSoC4/CyFlash.c ****                         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_
 196:Generated_Source\PSoC4/CyFlash.c ****                         CY_NOP;
 197:Generated_Source\PSoC4/CyFlash.c ****                         retValue = CY_FLASH_API_RETURN;
 198:Generated_Source\PSoC4/CyFlash.c ****                     }
 199:Generated_Source\PSoC4/CyFlash.c ****                 }
 200:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_FLASH_CHECKSUM_WORKAROUND) */
 201:Generated_Source\PSoC4/CyFlash.c **** 
 202:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
ARM GAS  e:\temp\cciA1G8G.s 			page 5


 203:Generated_Source\PSoC4/CyFlash.c ****             {
 204:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 205:Generated_Source\PSoC4/CyFlash.c **** 
 206:Generated_Source\PSoC4/CyFlash.c ****                 if(clkCnfRetValue != CY_SYS_FLASH_SUCCESS)
 207:Generated_Source\PSoC4/CyFlash.c ****                 {
 208:Generated_Source\PSoC4/CyFlash.c ****                     retValue = clkCnfRetValue;
 209:Generated_Source\PSoC4/CyFlash.c ****                 }
 210:Generated_Source\PSoC4/CyFlash.c ****             }
 211:Generated_Source\PSoC4/CyFlash.c **** 
 212:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 213:Generated_Source\PSoC4/CyFlash.c ****         }
 214:Generated_Source\PSoC4/CyFlash.c ****     }
 215:Generated_Source\PSoC4/CyFlash.c ****     else
 216:Generated_Source\PSoC4/CyFlash.c ****     {
 217:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 218:Generated_Source\PSoC4/CyFlash.c ****     }
 219:Generated_Source\PSoC4/CyFlash.c **** 
 220:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 221:Generated_Source\PSoC4/CyFlash.c **** }
 222:Generated_Source\PSoC4/CyFlash.c **** 
 223:Generated_Source\PSoC4/CyFlash.c **** 
 224:Generated_Source\PSoC4/CyFlash.c **** 
 225:Generated_Source\PSoC4/CyFlash.c **** #if (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u))
 226:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 227:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashStartWriteRow
 228:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 229:Generated_Source\PSoC4/CyFlash.c **** *
 230:Generated_Source\PSoC4/CyFlash.c **** * Initiates a write to a row of Flash. A call to this API is non-blocking. 
 231:Generated_Source\PSoC4/CyFlash.c **** * Use CySysFlashResumeWriteRow() to resume flash writes and 
 232:Generated_Source\PSoC4/CyFlash.c **** * CySysFlashGetWriteRowStatus() to ascertain status of the write operation.
 233:Generated_Source\PSoC4/CyFlash.c **** *
 234:Generated_Source\PSoC4/CyFlash.c **** * The devices require HFCLK to be sourced by 48 MHz IMO during flash write.
 235:Generated_Source\PSoC4/CyFlash.c **** * This API will modify IMO configuration; it can be later restored to original
 236:Generated_Source\PSoC4/CyFlash.c **** * configuration by calling \ref CySysFlashGetWriteRowStatus().
 237:Generated_Source\PSoC4/CyFlash.c **** *
 238:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 239:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 240:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 241:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 242:Generated_Source\PSoC4/CyFlash.c **** *    
 243:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The number of the flash rows is defined by
 244:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_NUMBER_ROWS macro for the selected device. Refer to the
 245:Generated_Source\PSoC4/CyFlash.c **** * device datasheet for the details.
 246:Generated_Source\PSoC4/CyFlash.c **** * \note The target flash array is calculated based on the specified flash row.
 247:Generated_Source\PSoC4/CyFlash.c **** *
 248:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 249:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 250:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_FLASH_SIZEOF_ROW macro. Refer to the device datasheet for the
 251:Generated_Source\PSoC4/CyFlash.c **** * details.
 252:Generated_Source\PSoC4/CyFlash.c **** *
 253:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 254:Generated_Source\PSoC4/CyFlash.c **** *
 255:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashStartWriteRow(uint32 rowNum, const uint8 rowData[])
 257:Generated_Source\PSoC4/CyFlash.c **** {
 258:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 259:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
ARM GAS  e:\temp\cciA1G8G.s 			page 6


 260:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 261:Generated_Source\PSoC4/CyFlash.c **** 
 262:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 263:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 264:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */    
 265:Generated_Source\PSoC4/CyFlash.c **** 
 266:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_FLASH_NUMBER_ROWS) && (rowData != 0u))
 267:Generated_Source\PSoC4/CyFlash.c ****     {
 268:Generated_Source\PSoC4/CyFlash.c ****         /* Copy data to be written into internal variable */
 269:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 270:Generated_Source\PSoC4/CyFlash.c **** 
 271:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 272:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 273:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 274:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 275:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 276:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 277:Generated_Source\PSoC4/CyFlash.c **** 
 278:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 279:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 280:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 281:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 282:Generated_Source\PSoC4/CyFlash.c **** 
 283:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 284:Generated_Source\PSoC4/CyFlash.c ****         {
 285:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 286:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 287:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 288:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 289:Generated_Source\PSoC4/CyFlash.c ****             * context.
 290:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 291:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 292:Generated_Source\PSoC4/CyFlash.c **** 
 293:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 294:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 295:Generated_Source\PSoC4/CyFlash.c ****             
 296:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 297:Generated_Source\PSoC4/CyFlash.c ****             {
 298:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 299:Generated_Source\PSoC4/CyFlash.c ****             }
 300:Generated_Source\PSoC4/CyFlash.c ****         #else
 301:Generated_Source\PSoC4/CyFlash.c ****             (void)CySysFlashClockBackup();
 302:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 303:Generated_Source\PSoC4/CyFlash.c **** 
 304:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 305:Generated_Source\PSoC4/CyFlash.c ****             {
 306:Generated_Source\PSoC4/CyFlash.c ****                 /* Non-blocking Write Row */
 307:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_NON_BLOC
 308:Generated_Source\PSoC4/CyFlash.c ****                                                         CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_K
 309:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 310:Generated_Source\PSoC4/CyFlash.c **** 
 311:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 312:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_NON_BLOC
 313:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 314:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 315:Generated_Source\PSoC4/CyFlash.c ****             }
 316:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  e:\temp\cciA1G8G.s 			page 7


 317:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 318:Generated_Source\PSoC4/CyFlash.c ****         }
 319:Generated_Source\PSoC4/CyFlash.c ****     }
 320:Generated_Source\PSoC4/CyFlash.c ****     else
 321:Generated_Source\PSoC4/CyFlash.c ****     {
 322:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 323:Generated_Source\PSoC4/CyFlash.c ****     }
 324:Generated_Source\PSoC4/CyFlash.c **** 
 325:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 326:Generated_Source\PSoC4/CyFlash.c **** }
 327:Generated_Source\PSoC4/CyFlash.c **** 
 328:Generated_Source\PSoC4/CyFlash.c **** 
 329:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 330:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashGetWriteRowStatus
 331:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 332:Generated_Source\PSoC4/CyFlash.c **** *
 333:Generated_Source\PSoC4/CyFlash.c **** * Returns the current status of the flash write operation.
 334:Generated_Source\PSoC4/CyFlash.c **** *
 335:Generated_Source\PSoC4/CyFlash.c **** ** \note The non-blocking operation does not return success status 
 336:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last \ref CySysFlashResumeWriteRow API 
 337:Generated_Source\PSoC4/CyFlash.c **** * is complete. The CPUSS_SYSARG register will be reflecting the SRAM address 
 338:Generated_Source\PSoC4/CyFlash.c **** * during an ongoing non-blocking operation.
 339:Generated_Source\PSoC4/CyFlash.c **** * Calling this API before starting a non-blocking write row operation 
 340:Generated_Source\PSoC4/CyFlash.c **** * using the \ref CySysFlashStartWriteRow() API will cause improper operation.
 341:Generated_Source\PSoC4/CyFlash.c **** *
 342:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 343:Generated_Source\PSoC4/CyFlash.c **** *
 344:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 345:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashGetWriteRowStatus(void)
 346:Generated_Source\PSoC4/CyFlash.c **** {
 347:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 348:Generated_Source\PSoC4/CyFlash.c **** 
 349:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 350:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 351:Generated_Source\PSoC4/CyFlash.c **** 
 352:Generated_Source\PSoC4/CyFlash.c ****     (void) CySysFlashClockRestore();
 353:Generated_Source\PSoC4/CyFlash.c **** 
 354:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 355:Generated_Source\PSoC4/CyFlash.c **** }
 356:Generated_Source\PSoC4/CyFlash.c **** 
 357:Generated_Source\PSoC4/CyFlash.c **** 
 358:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 359:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashResumeWriteRow
 360:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 361:Generated_Source\PSoC4/CyFlash.c **** *
 362:Generated_Source\PSoC4/CyFlash.c **** * This API must be called, once the SPC interrupt is triggered to complete the
 363:Generated_Source\PSoC4/CyFlash.c **** * non-blocking operation. It is advised not to prolong calling this API for
 364:Generated_Source\PSoC4/CyFlash.c **** * more than 25 ms.
 365:Generated_Source\PSoC4/CyFlash.c **** *
 366:Generated_Source\PSoC4/CyFlash.c **** * The non-blocking write row API \ref CySysFlashStartWriteRow() requires that
 367:Generated_Source\PSoC4/CyFlash.c **** * this API be called 3 times to complete the write. This can be done by
 368:Generated_Source\PSoC4/CyFlash.c **** * configuring SPCIF interrupt and placing a call to this API.
 369:Generated_Source\PSoC4/CyFlash.c **** *
 370:Generated_Source\PSoC4/CyFlash.c **** * For CM0 based device, a non-blocking call to program a row of macro 0
 371:Generated_Source\PSoC4/CyFlash.c **** * requires the user to set the CPUSS_CONFIG.VECS_IN_RAM bit so that the
 372:Generated_Source\PSoC4/CyFlash.c **** * interrupt vector for the SPC is fetched from the SRAM rather than the FLASH.
 373:Generated_Source\PSoC4/CyFlash.c **** *
ARM GAS  e:\temp\cciA1G8G.s 			page 8


 374:Generated_Source\PSoC4/CyFlash.c **** * For CM0+ based device, if the user wants to keep the vector table in flash
 375:Generated_Source\PSoC4/CyFlash.c **** * when performing non-blocking flash write then they need to make sure the
 376:Generated_Source\PSoC4/CyFlash.c **** * vector table is placed in the flash macro which is not getting programmed by
 377:Generated_Source\PSoC4/CyFlash.c **** * configuring the VTOR register.
 378:Generated_Source\PSoC4/CyFlash.c **** *
 379:Generated_Source\PSoC4/CyFlash.c **** * \note The non-blocking operation does not return success status 
 380:Generated_Source\PSoC4/CyFlash.c **** * CY_SYS_FLASH_SUCCESS until the last Resume API is complete. 
 381:Generated_Source\PSoC4/CyFlash.c **** * The CPUSS_SYSARG register will be reflecting the SRAM address during an 
 382:Generated_Source\PSoC4/CyFlash.c **** * ongoing non-blocking operation.
 383:Generated_Source\PSoC4/CyFlash.c **** *
 384:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
 385:Generated_Source\PSoC4/CyFlash.c **** *
 386:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 387:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysFlashResumeWriteRow(void)
 388:Generated_Source\PSoC4/CyFlash.c **** {
 389:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 390:Generated_Source\PSoC4/CyFlash.c ****     static volatile uint32 parameters[1u];
 391:Generated_Source\PSoC4/CyFlash.c **** 
 392:Generated_Source\PSoC4/CyFlash.c ****     /* Resume */
 393:Generated_Source\PSoC4/CyFlash.c ****     parameters[0u] = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING) 
 394:Generated_Source\PSoC4/CyFlash.c ****                                          CY_FLASH_PARAM_KEY_TWO_OFFSET) | CY_FLASH_KEY_ONE);
 395:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 396:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_RESUME_NON_BLOCKING;
 397:Generated_Source\PSoC4/CyFlash.c ****     
 398:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 399:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 400:Generated_Source\PSoC4/CyFlash.c ****     
 401:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 402:Generated_Source\PSoC4/CyFlash.c **** }
 403:Generated_Source\PSoC4/CyFlash.c **** 
 404:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_IP_FLASH_PARALLEL_PGM_EN && (CY_IP_FLASH_MACROS > 1u)) */
 405:Generated_Source\PSoC4/CyFlash.c **** 
 406:Generated_Source\PSoC4/CyFlash.c **** 
 407:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 408:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashSetWaitCycles
 409:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 410:Generated_Source\PSoC4/CyFlash.c **** *
 411:Generated_Source\PSoC4/CyFlash.c **** * Sets the number of clock cycles the cache will wait before it samples data
 412:Generated_Source\PSoC4/CyFlash.c **** * coming back from Flash. This function must be called before increasing the
 413:Generated_Source\PSoC4/CyFlash.c **** * SYSCLK clock frequency. It can optionally be called after lowering SYSCLK
 414:Generated_Source\PSoC4/CyFlash.c **** * clock frequency in order to improve the CPU performance.
 415:Generated_Source\PSoC4/CyFlash.c **** *
 416:Generated_Source\PSoC4/CyFlash.c **** * \param freq The System clock frequency in MHz.
 417:Generated_Source\PSoC4/CyFlash.c **** *
 418:Generated_Source\PSoC4/CyFlash.c **** * \note Invalid frequency will be ignored in Release mode and the CPU will be
 419:Generated_Source\PSoC4/CyFlash.c **** * halted if project is compiled in Debug mode.
 420:Generated_Source\PSoC4/CyFlash.c **** *
 421:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 422:Generated_Source\PSoC4/CyFlash.c **** void CySysFlashSetWaitCycles(uint32 freq)
 423:Generated_Source\PSoC4/CyFlash.c **** {
 424:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 425:Generated_Source\PSoC4/CyFlash.c **** 
 426:Generated_Source\PSoC4/CyFlash.c ****     interruptState = CyEnterCriticalSection();
 427:Generated_Source\PSoC4/CyFlash.c **** 
 428:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_IP_CPUSS)
 429:Generated_Source\PSoC4/CyFlash.c **** 
 430:Generated_Source\PSoC4/CyFlash.c ****         if ( freq <= CY_FLASH_SYSCLK_BOUNDARY_MHZ )
ARM GAS  e:\temp\cciA1G8G.s 			page 9


 431:Generated_Source\PSoC4/CyFlash.c ****         {
 432:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG &= (uint32)(~CY_FLASH_WAIT_STATE_EN);
 433:Generated_Source\PSoC4/CyFlash.c ****         }
 434:Generated_Source\PSoC4/CyFlash.c ****         else
 435:Generated_Source\PSoC4/CyFlash.c ****         {
 436:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG |= CY_FLASH_WAIT_STATE_EN;
 437:Generated_Source\PSoC4/CyFlash.c ****         }
 438:Generated_Source\PSoC4/CyFlash.c ****     #else
 439:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_CPUSS_FLASHC_PRESENT)
 440:Generated_Source\PSoC4/CyFlash.c ****             /* CY_IP_FM and CY_IP_FS */
 441:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_0_FREQ_MAX)
 442:Generated_Source\PSoC4/CyFlash.c ****             {
 443:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_0_V
 444:Generated_Source\PSoC4/CyFlash.c ****             } else
 445:Generated_Source\PSoC4/CyFlash.c ****             if (freq <= CY_FLASH_CTL_WS_1_FREQ_MAX)
 446:Generated_Source\PSoC4/CyFlash.c ****             {
 447:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS_1_V
 448:Generated_Source\PSoC4/CyFlash.c ****             } else
 449:Generated_Source\PSoC4/CyFlash.c ****             #if (CY_IP_FMLT || CY_IP_FSLT)
 450:Generated_Source\PSoC4/CyFlash.c ****                 if (freq <= CY_FLASH_CTL_WS_2_FREQ_MAX)
 451:Generated_Source\PSoC4/CyFlash.c ****                 {
 452:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_CTL_REG = (CY_FLASH_CTL_REG & ~CY_FLASH_CTL_WS_MASK) | CY_FLASH_CTL_WS
 453:Generated_Source\PSoC4/CyFlash.c ****                 }
 454:Generated_Source\PSoC4/CyFlash.c ****                 else
 455:Generated_Source\PSoC4/CyFlash.c ****             #endif  /* (CY_IP_FMLT || CY_IP_FSLT) */
 456:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_CPUSS_FLASHC_PRESENT) */
 457:Generated_Source\PSoC4/CyFlash.c ****         {
 458:Generated_Source\PSoC4/CyFlash.c ****             /* Halt CPU in debug mode if frequency is invalid */
 459:Generated_Source\PSoC4/CyFlash.c ****             CYASSERT(0u != 0u);
 460:Generated_Source\PSoC4/CyFlash.c ****         }
 461:Generated_Source\PSoC4/CyFlash.c **** 
 462:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_IP_CPUSS) */
 463:Generated_Source\PSoC4/CyFlash.c **** 
 464:Generated_Source\PSoC4/CyFlash.c ****     CyExitCriticalSection(interruptState);
 465:Generated_Source\PSoC4/CyFlash.c **** }
 466:Generated_Source\PSoC4/CyFlash.c **** 
 467:Generated_Source\PSoC4/CyFlash.c **** 
 468:Generated_Source\PSoC4/CyFlash.c **** #if (CY_SFLASH_XTRA_ROWS)
 469:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 470:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysSFlashWriteUserRow
 471:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 472:Generated_Source\PSoC4/CyFlash.c **** *
 473:Generated_Source\PSoC4/CyFlash.c **** * Writes data to a row of SFlash user configurable area.
 474:Generated_Source\PSoC4/CyFlash.c **** *
 475:Generated_Source\PSoC4/CyFlash.c **** * This API is applicable for PSoC 4100 BLE, PSoC 4200 BLE, PSoC 4100M,
 476:Generated_Source\PSoC4/CyFlash.c **** * PSoC 4200M, and PSoC 4200L family of devices.
 477:Generated_Source\PSoC4/CyFlash.c **** *
 478:Generated_Source\PSoC4/CyFlash.c **** * \param rowNum The flash row number. The flash row number. The number of the
 479:Generated_Source\PSoC4/CyFlash.c **** * flash rows is defined by the CY_SFLASH_NUMBER_USERROWS macro for the selected
 480:Generated_Source\PSoC4/CyFlash.c **** * device. Valid range is 0-3. Refer to the device TRM for details.
 481:Generated_Source\PSoC4/CyFlash.c **** *
 482:Generated_Source\PSoC4/CyFlash.c **** * \param rowData Array of bytes to write. The size of the array must be equal to
 483:Generated_Source\PSoC4/CyFlash.c **** * the flash row size. The flash row size for the selected device is defined by
 484:Generated_Source\PSoC4/CyFlash.c **** * the \ref CY_SFLASH_SIZEOF_USERROW macro. Refer to the device TRM for the
 485:Generated_Source\PSoC4/CyFlash.c **** * details.
 486:Generated_Source\PSoC4/CyFlash.c **** *
 487:Generated_Source\PSoC4/CyFlash.c **** * \return \ref group_flash_status_codes
ARM GAS  e:\temp\cciA1G8G.s 			page 10


 488:Generated_Source\PSoC4/CyFlash.c **** *
 489:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 490:Generated_Source\PSoC4/CyFlash.c **** uint32 CySysSFlashWriteUserRow(uint32 rowNum, const uint8 rowData[])
 491:Generated_Source\PSoC4/CyFlash.c **** {
 492:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 493:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 494:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA)/4u];
 495:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 496:Generated_Source\PSoC4/CyFlash.c **** 
 497:Generated_Source\PSoC4/CyFlash.c **** 
 498:Generated_Source\PSoC4/CyFlash.c ****     if ((rowNum < CY_SFLASH_NUMBER_USERROWS) && (rowData != 0u))
 499:Generated_Source\PSoC4/CyFlash.c ****     {
 500:Generated_Source\PSoC4/CyFlash.c ****         /* Load Flash Bytes */
 501:Generated_Source\PSoC4/CyFlash.c ****         parameters[0u] = (uint32) (CY_FLASH_GET_MACRO_FROM_ROW(rowNum)        << CY_FLASH_PARAM_MAC
 502:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 503:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_LOAD) << CY_FLASH_PARAM_KEY
 504:Generated_Source\PSoC4/CyFlash.c ****                          CY_FLASH_KEY_ONE;
 505:Generated_Source\PSoC4/CyFlash.c ****         parameters[1u] = CY_FLASH_SIZEOF_ROW - 1u;
 506:Generated_Source\PSoC4/CyFlash.c **** 
 507:Generated_Source\PSoC4/CyFlash.c ****         (void)memcpy((void *)&parameters[2u], rowData, CY_FLASH_SIZEOF_ROW);
 508:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 509:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 510:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 511:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 512:Generated_Source\PSoC4/CyFlash.c **** 
 513:Generated_Source\PSoC4/CyFlash.c ****         if(retValue == CY_SYS_FLASH_SUCCESS)
 514:Generated_Source\PSoC4/CyFlash.c ****         {
 515:Generated_Source\PSoC4/CyFlash.c ****             /***************************************************************
 516:Generated_Source\PSoC4/CyFlash.c ****             * Mask all the exceptions to guarantee that Flash write will
 517:Generated_Source\PSoC4/CyFlash.c ****             * occur in the atomic way. It will not affect system call
 518:Generated_Source\PSoC4/CyFlash.c ****             * execution (flash row write) since it is executed in the NMI
 519:Generated_Source\PSoC4/CyFlash.c ****             * context.
 520:Generated_Source\PSoC4/CyFlash.c ****             ***************************************************************/
 521:Generated_Source\PSoC4/CyFlash.c ****             interruptState = CyEnterCriticalSection();
 522:Generated_Source\PSoC4/CyFlash.c **** 
 523:Generated_Source\PSoC4/CyFlash.c ****             clkCnfRetValue = CySysFlashClockBackup();
 524:Generated_Source\PSoC4/CyFlash.c **** 
 525:Generated_Source\PSoC4/CyFlash.c ****         #if(CY_IP_SPCIF_SYNCHRONOUS)
 526:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
 527:Generated_Source\PSoC4/CyFlash.c ****             {
 528:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CySysFlashClockConfig();
 529:Generated_Source\PSoC4/CyFlash.c ****             }
 530:Generated_Source\PSoC4/CyFlash.c ****         #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 531:Generated_Source\PSoC4/CyFlash.c **** 
 532:Generated_Source\PSoC4/CyFlash.c ****             if(retValue == CY_SYS_FLASH_SUCCESS)
 533:Generated_Source\PSoC4/CyFlash.c ****             {
 534:Generated_Source\PSoC4/CyFlash.c ****                 /* Write User Sflash Row */
 535:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u]  = (uint32) (((uint32) CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_WRITE_SF
 536:Generated_Source\PSoC4/CyFlash.c ****                 parameters[1u] = (uint32) rowNum;
 537:Generated_Source\PSoC4/CyFlash.c **** 
 538:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 539:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_SF
 540:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 541:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 542:Generated_Source\PSoC4/CyFlash.c ****             }
 543:Generated_Source\PSoC4/CyFlash.c **** 
 544:Generated_Source\PSoC4/CyFlash.c ****             if(clkCnfRetValue == CY_SYS_FLASH_SUCCESS)
ARM GAS  e:\temp\cciA1G8G.s 			page 11


 545:Generated_Source\PSoC4/CyFlash.c ****             {
 546:Generated_Source\PSoC4/CyFlash.c ****                 clkCnfRetValue = CySysFlashClockRestore();
 547:Generated_Source\PSoC4/CyFlash.c ****             }
 548:Generated_Source\PSoC4/CyFlash.c ****             CyExitCriticalSection(interruptState);
 549:Generated_Source\PSoC4/CyFlash.c ****         }
 550:Generated_Source\PSoC4/CyFlash.c ****     }
 551:Generated_Source\PSoC4/CyFlash.c ****     else
 552:Generated_Source\PSoC4/CyFlash.c ****     {
 553:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_SYS_FLASH_INVALID_ADDR;
 554:Generated_Source\PSoC4/CyFlash.c ****     }
 555:Generated_Source\PSoC4/CyFlash.c **** 
 556:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 557:Generated_Source\PSoC4/CyFlash.c **** }
 558:Generated_Source\PSoC4/CyFlash.c **** #endif /* (CY_SFLASH_XTRA_ROWS) */
 559:Generated_Source\PSoC4/CyFlash.c **** 
 560:Generated_Source\PSoC4/CyFlash.c **** 
 561:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 562:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockBackup
 563:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 564:Generated_Source\PSoC4/CyFlash.c **** *
 565:Generated_Source\PSoC4/CyFlash.c **** * Backups the device clock configuration.
 566:Generated_Source\PSoC4/CyFlash.c **** *
 567:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 568:Generated_Source\PSoC4/CyFlash.c **** *
 569:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 570:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockBackup(void)
 571:Generated_Source\PSoC4/CyFlash.c **** {
  27              		.loc 1 571 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 8
  34              	.LVL0:
 572:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 573:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 574:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 575:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 576:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 577:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 578:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 579:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 580:Generated_Source\PSoC4/CyFlash.c **** 
 581:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 582:Generated_Source\PSoC4/CyFlash.c **** 
 583:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 584:Generated_Source\PSoC4/CyFlash.c ****     * Preserve IMO configuration that could be changed during
 585:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 586:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 587:Generated_Source\PSoC4/CyFlash.c ****     cySysFlashBackup.imoConfigReg = CY_SYS_CLK_IMO_CONFIG_REG;
 588:Generated_Source\PSoC4/CyFlash.c **** 
 589:Generated_Source\PSoC4/CyFlash.c **** #else   /* (CY_IP_FMLT) */
 590:Generated_Source\PSoC4/CyFlash.c **** 
 591:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 592:Generated_Source\PSoC4/CyFlash.c **** 
 593:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
ARM GAS  e:\temp\cciA1G8G.s 			page 12


 594:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings backup for the PSOC4 4000 devices (the
 595:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 596:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 597:Generated_Source\PSoC4/CyFlash.c **** 
 598:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 599:Generated_Source\PSoC4/CyFlash.c ****         * The registers listed below are modified by CySysFlashClockConfig().
 600:Generated_Source\PSoC4/CyFlash.c ****         *
 601:Generated_Source\PSoC4/CyFlash.c ****         * The registers to be saved:
 602:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_CONFIG_REG - IMO enable state.
 603:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_SELECT_REG     - HFCLK source, divider, pump source. Save
 604:Generated_Source\PSoC4/CyFlash.c ****         *                               entire register as it can be directly
 605:Generated_Source\PSoC4/CyFlash.c ****         *                               written on restore (no special
 606:Generated_Source\PSoC4/CyFlash.c ****         *                               requirements).
 607:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_SELECT_REG - Save IMO frequency.
 608:Generated_Source\PSoC4/CyFlash.c ****         *
 609:Generated_Source\PSoC4/CyFlash.c ****         * The registers not to be saved:
 610:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM1_REG  - No need to save. Function of frequency.
 611:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 612:Generated_Source\PSoC4/CyFlash.c ****         * - CY_SYS_CLK_IMO_TRIM3_REG  - No need to save. Function of frequency.
 613:Generated_Source\PSoC4/CyFlash.c ****         *                               Restored by CySysClkWriteImoFreq().
 614:Generated_Source\PSoC4/CyFlash.c ****         * - REG_CPUSS_FLASH_CTL       - Flash wait cycles. Unmodified due to system
 615:Generated_Source\PSoC4/CyFlash.c ****         *                               clock 16 MHz limit.
 616:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 617:Generated_Source\PSoC4/CyFlash.c **** 
 618:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkSelectReg = CY_SYS_CLK_SELECT_REG;
 619:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoEna    = CY_SYS_CLK_IMO_CONFIG_REG & CY_SYS_CLK_IMO_CONFIG_ENABLE;
 620:Generated_Source\PSoC4/CyFlash.c ****         cySysFlashBackup.clkImoFreq   = CY_SYS_CLK_IMO_MIN_FREQ_MHZ + (CY_SYS_CLK_IMO_SELECT_REG <<
 621:Generated_Source\PSoC4/CyFlash.c **** 
 622:Generated_Source\PSoC4/CyFlash.c ****     #else
 623:Generated_Source\PSoC4/CyFlash.c **** 
 624:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 625:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Backup System Call */
 626:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
  35              		.loc 1 626 0
  36 0002 134B     		ldr	r3, .L5
  37 0004 0093     		str	r3, [sp]
 627:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_BACKUP) <<  CY_FLASH_PARAM_KEY_
 628:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 629:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
  38              		.loc 1 629 0
  39 0006 134B     		ldr	r3, .L5+4
  40 0008 0193     		str	r3, [sp, #4]
 630:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
  41              		.loc 1 630 0
  42 000a 134B     		ldr	r3, .L5+8
  43 000c 6A46     		mov	r2, sp
  44 000e 1A60     		str	r2, [r3]
 631:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_BACKUP;
  45              		.loc 1 631 0
  46 0010 1249     		ldr	r1, .L5+12
  47 0012 134A     		ldr	r2, .L5+16
  48 0014 1160     		str	r1, [r2]
 632:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
  49              		.loc 1 632 0
  50              		.syntax divided
  51              	@ 632 "Generated_Source\PSoC4\CyFlash.c" 1
  52 0016 C046     		NOP
ARM GAS  e:\temp\cciA1G8G.s 			page 13


  53              	
  54              	@ 0 "" 2
 633:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
  55              		.loc 1 633 0
  56              		.thumb
  57              		.syntax unified
  58 0018 1B68     		ldr	r3, [r3]
  59 001a 1B0F     		lsrs	r3, r3, #28
  60 001c 1B07     		lsls	r3, r3, #28
  61 001e F022     		movs	r2, #240
  62 0020 1206     		lsls	r2, r2, #24
  63 0022 9342     		cmp	r3, r2
  64 0024 04D1     		bne	.L2
  65              		.loc 1 633 0 is_stmt 0 discriminator 1
  66 0026 0C4B     		ldr	r3, .L5+8
  67 0028 1B68     		ldr	r3, [r3]
  68 002a FF20     		movs	r0, #255
  69 002c 1840     		ands	r0, r3
  70 002e 0DE0     		b	.L3
  71              	.L2:
  72              		.loc 1 633 0 discriminator 2
  73 0030 094B     		ldr	r3, .L5+8
  74 0032 1B68     		ldr	r3, [r3]
  75 0034 1B0F     		lsrs	r3, r3, #28
  76 0036 1B07     		lsls	r3, r3, #28
  77 0038 A022     		movs	r2, #160
  78 003a 1206     		lsls	r2, r2, #24
  79 003c 9342     		cmp	r3, r2
  80 003e 04D0     		beq	.L4
  81              		.loc 1 633 0 discriminator 4
  82 0040 054B     		ldr	r3, .L5+8
  83 0042 1B68     		ldr	r3, [r3]
  84 0044 FF20     		movs	r0, #255
  85 0046 1840     		ands	r0, r3
  86 0048 00E0     		b	.L3
  87              	.L4:
  88              		.loc 1 633 0
  89 004a 0020     		movs	r0, #0
  90              	.L3:
  91              	.LVL1:
 634:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 635:Generated_Source\PSoC4/CyFlash.c **** 
 636:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 637:Generated_Source\PSoC4/CyFlash.c **** 
 638:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 639:Generated_Source\PSoC4/CyFlash.c **** 
 640:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 641:Generated_Source\PSoC4/CyFlash.c **** }
  92              		.loc 1 641 0 is_stmt 1 discriminator 8
  93 004c 02B0     		add	sp, sp, #8
  94              		@ sp needed
  95 004e 7047     		bx	lr
  96              	.L6:
  97              		.align	2
  98              	.L5:
  99 0050 B6E90000 		.word	59830
 100 0054 00000000 		.word	.LANCHOR0
ARM GAS  e:\temp\cciA1G8G.s 			page 14


 101 0058 08001040 		.word	1074790408
 102 005c 16000080 		.word	-2147483626
 103 0060 04001040 		.word	1074790404
 104              		.cfi_endproc
 105              	.LFE2:
 106              		.size	CySysFlashClockBackup, .-CySysFlashClockBackup
 107              		.section	.text.CySysFlashClockConfig,"ax",%progbits
 108              		.align	2
 109              		.code	16
 110              		.thumb_func
 111              		.type	CySysFlashClockConfig, %function
 112              	CySysFlashClockConfig:
 113              	.LFB3:
 642:Generated_Source\PSoC4/CyFlash.c **** 
 643:Generated_Source\PSoC4/CyFlash.c **** 
 644:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_SPCIF_SYNCHRONOUS)
 645:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockConfig
 647:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyFlash.c **** *
 649:Generated_Source\PSoC4/CyFlash.c **** * Configures the device clocks for the flash writing.
 650:Generated_Source\PSoC4/CyFlash.c **** *
 651:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 652:Generated_Source\PSoC4/CyFlash.c **** *
 653:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 654:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockConfig(void)
 655:Generated_Source\PSoC4/CyFlash.c **** {
 114              		.loc 1 655 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119              	.LVL2:
 656:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 657:Generated_Source\PSoC4/CyFlash.c **** 
 658:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 659:Generated_Source\PSoC4/CyFlash.c ****     * The FM-Lite IP uses the IMO at 48MHz for the pump clock and SPC timer
 660:Generated_Source\PSoC4/CyFlash.c ****     * clock. The PUMP_SEL and HF clock must be set to IMO before calling Flash
 661:Generated_Source\PSoC4/CyFlash.c ****     * write or erase operation.
 662:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 663:Generated_Source\PSoC4/CyFlash.c **** #if (CY_PSOC4_4000)
 664:Generated_Source\PSoC4/CyFlash.c **** 
 665:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************************
 666:Generated_Source\PSoC4/CyFlash.c ****     * Perform firmware clock settings setup for the PSOC4 4000 devices (the
 667:Generated_Source\PSoC4/CyFlash.c ****     * corresponding system call is not reliable):
 668:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO frequency should be 48 MHz
 669:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be source for the HFCLK
 670:Generated_Source\PSoC4/CyFlash.c ****     * - The IMO should be the source for the charge pump clock
 671:Generated_Source\PSoC4/CyFlash.c ****     *
 672:Generated_Source\PSoC4/CyFlash.c ****     * Note The structure members used below are initialized by
 673:Generated_Source\PSoC4/CyFlash.c ****     * the CySysFlashClockBackup() function.
 674:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************************/
 675:Generated_Source\PSoC4/CyFlash.c ****     if ((cySysFlashBackup.clkImoFreq != 48u) ||
 676:Generated_Source\PSoC4/CyFlash.c ****         ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCLK_IM
 677:Generated_Source\PSoC4/CyFlash.c ****         (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELECT_P
 678:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 679:Generated_Source\PSoC4/CyFlash.c ****     {
ARM GAS  e:\temp\cciA1G8G.s 			page 15


 680:Generated_Source\PSoC4/CyFlash.c ****         /***********************************************************************
 681:Generated_Source\PSoC4/CyFlash.c ****          Set HFCLK divider to divide-by-4 to ensure that System clock frequency
 682:Generated_Source\PSoC4/CyFlash.c ****         * is within the valid limit (16 MHz for the PSoC4 4000).
 683:Generated_Source\PSoC4/CyFlash.c ****         ***********************************************************************/
 684:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDiv(CY_SYS_CLK_HFCLK_DIV_4);
 685:Generated_Source\PSoC4/CyFlash.c **** 
 686:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO frequency should be 48 MHz */
 687:Generated_Source\PSoC4/CyFlash.c ****         if (cySysFlashBackup.clkImoFreq != 48u)
 688:Generated_Source\PSoC4/CyFlash.c ****         {
 689:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteImoFreq(48u);
 690:Generated_Source\PSoC4/CyFlash.c ****         }
 691:Generated_Source\PSoC4/CyFlash.c ****         CySysClkImoStart();
 692:Generated_Source\PSoC4/CyFlash.c **** 
 693:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be source for the HFCLK */
 694:Generated_Source\PSoC4/CyFlash.c ****         CySysClkWriteHfclkDirect(CY_SYS_CLK_HFCLK_IMO);
 695:Generated_Source\PSoC4/CyFlash.c **** 
 696:Generated_Source\PSoC4/CyFlash.c ****         /* The IMO should be the source for the charge pump clock */
 697:Generated_Source\PSoC4/CyFlash.c ****         CY_SYS_CLK_SELECT_REG =  (CY_SYS_CLK_SELECT_REG &
 698:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)~(uint32)(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT)
 699:Generated_Source\PSoC4/CyFlash.c ****             ((uint32)((uint32)1u << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT));
 700:Generated_Source\PSoC4/CyFlash.c ****     }
 701:Generated_Source\PSoC4/CyFlash.c **** 
 702:Generated_Source\PSoC4/CyFlash.c **** #else
 703:Generated_Source\PSoC4/CyFlash.c **** 
 704:Generated_Source\PSoC4/CyFlash.c ****     /* FM-Lite Clock Configuration */
 705:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSARG_REG =
 120              		.loc 1 705 0
 121 0000 104B     		ldr	r3, .L11
 122 0002 114A     		ldr	r2, .L11+4
 123 0004 1A60     		str	r2, [r3]
 706:Generated_Source\PSoC4/CyFlash.c ****         (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_CONFIG) <<  CY_FLASH_PARAM_KEY_TWO_OFFS
 707:Generated_Source\PSoC4/CyFlash.c ****                     CY_FLASH_KEY_ONE);
 708:Generated_Source\PSoC4/CyFlash.c ****     CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_CONFIG;
 124              		.loc 1 708 0
 125 0006 1149     		ldr	r1, .L11+8
 126 0008 114A     		ldr	r2, .L11+12
 127 000a 1160     		str	r1, [r2]
 709:Generated_Source\PSoC4/CyFlash.c ****     CY_NOP;
 128              		.loc 1 709 0
 129              		.syntax divided
 130              	@ 709 "Generated_Source\PSoC4\CyFlash.c" 1
 131 000c C046     		NOP
 132              	
 133              	@ 0 "" 2
 710:Generated_Source\PSoC4/CyFlash.c ****     retValue = CY_FLASH_API_RETURN;
 134              		.loc 1 710 0
 135              		.thumb
 136              		.syntax unified
 137 000e 1B68     		ldr	r3, [r3]
 138 0010 1B0F     		lsrs	r3, r3, #28
 139 0012 1B07     		lsls	r3, r3, #28
 140 0014 F022     		movs	r2, #240
 141 0016 1206     		lsls	r2, r2, #24
 142 0018 9342     		cmp	r3, r2
 143 001a 04D1     		bne	.L8
 144              		.loc 1 710 0 is_stmt 0 discriminator 1
 145 001c 094B     		ldr	r3, .L11
ARM GAS  e:\temp\cciA1G8G.s 			page 16


 146 001e 1B68     		ldr	r3, [r3]
 147 0020 FF20     		movs	r0, #255
 148 0022 1840     		ands	r0, r3
 149 0024 0DE0     		b	.L9
 150              	.L8:
 151              		.loc 1 710 0 discriminator 2
 152 0026 074B     		ldr	r3, .L11
 153 0028 1B68     		ldr	r3, [r3]
 154 002a 1B0F     		lsrs	r3, r3, #28
 155 002c 1B07     		lsls	r3, r3, #28
 156 002e A022     		movs	r2, #160
 157 0030 1206     		lsls	r2, r2, #24
 158 0032 9342     		cmp	r3, r2
 159 0034 04D0     		beq	.L10
 160              		.loc 1 710 0 discriminator 4
 161 0036 034B     		ldr	r3, .L11
 162 0038 1B68     		ldr	r3, [r3]
 163 003a FF20     		movs	r0, #255
 164 003c 1840     		ands	r0, r3
 165 003e 00E0     		b	.L9
 166              	.L10:
 167              		.loc 1 710 0
 168 0040 0020     		movs	r0, #0
 169              	.L9:
 170              	.LVL3:
 711:Generated_Source\PSoC4/CyFlash.c **** 
 712:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_PSOC4_4000) */
 713:Generated_Source\PSoC4/CyFlash.c **** 
 714:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 715:Generated_Source\PSoC4/CyFlash.c **** }
 171              		.loc 1 715 0 is_stmt 1 discriminator 8
 172              		@ sp needed
 173 0042 7047     		bx	lr
 174              	.L12:
 175              		.align	2
 176              	.L11:
 177 0044 08001040 		.word	1074790408
 178 0048 B6E80000 		.word	59574
 179 004c 15000080 		.word	-2147483627
 180 0050 04001040 		.word	1074790404
 181              		.cfi_endproc
 182              	.LFE3:
 183              		.size	CySysFlashClockConfig, .-CySysFlashClockConfig
 184              		.section	.text.CySysFlashClockRestore,"ax",%progbits
 185              		.align	2
 186              		.code	16
 187              		.thumb_func
 188              		.type	CySysFlashClockRestore, %function
 189              	CySysFlashClockRestore:
 190              	.LFB4:
 716:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_SPCIF_SYNCHRONOUS) */
 717:Generated_Source\PSoC4/CyFlash.c **** 
 718:Generated_Source\PSoC4/CyFlash.c **** 
 719:Generated_Source\PSoC4/CyFlash.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/CyFlash.c **** * Function Name: CySysFlashClockRestore
 721:Generated_Source\PSoC4/CyFlash.c **** ****************************************************************************//**
 722:Generated_Source\PSoC4/CyFlash.c **** *
ARM GAS  e:\temp\cciA1G8G.s 			page 17


 723:Generated_Source\PSoC4/CyFlash.c **** * Restores the device clock configuration.
 724:Generated_Source\PSoC4/CyFlash.c **** *
 725:Generated_Source\PSoC4/CyFlash.c **** * \return The same as \ref CySysFlashWriteRow().
 726:Generated_Source\PSoC4/CyFlash.c **** *
 727:Generated_Source\PSoC4/CyFlash.c **** *******************************************************************************/
 728:Generated_Source\PSoC4/CyFlash.c **** static cystatus CySysFlashClockRestore(void)
 729:Generated_Source\PSoC4/CyFlash.c **** {
 191              		.loc 1 729 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 8
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196 0000 82B0     		sub	sp, sp, #8
 197              		.cfi_def_cfa_offset 8
 198              	.LVL4:
 730:Generated_Source\PSoC4/CyFlash.c ****     cystatus retValue = CY_SYS_FLASH_SUCCESS;
 731:Generated_Source\PSoC4/CyFlash.c **** #if(!CY_IP_FM)
 732:Generated_Source\PSoC4/CyFlash.c ****     #if !(CY_PSOC4_4000)
 733:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 734:Generated_Source\PSoC4/CyFlash.c ****             volatile uint32   parameters[2u];
 735:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 736:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* !(CY_PSOC4_4000) */
 737:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (!CY_IP_FM) */
 738:Generated_Source\PSoC4/CyFlash.c **** 
 739:Generated_Source\PSoC4/CyFlash.c **** #if(CY_IP_FM)
 740:Generated_Source\PSoC4/CyFlash.c **** 
 741:Generated_Source\PSoC4/CyFlash.c ****     /***************************************************************
 742:Generated_Source\PSoC4/CyFlash.c ****     * Restore IMO configuration that could be changed during
 743:Generated_Source\PSoC4/CyFlash.c ****     * system call execution (Cypress ID #150448).
 744:Generated_Source\PSoC4/CyFlash.c ****     ***************************************************************/
 745:Generated_Source\PSoC4/CyFlash.c ****     CY_SYS_CLK_IMO_CONFIG_REG = cySysFlashBackup.imoConfigReg;
 746:Generated_Source\PSoC4/CyFlash.c **** 
 747:Generated_Source\PSoC4/CyFlash.c **** #else
 748:Generated_Source\PSoC4/CyFlash.c **** 
 749:Generated_Source\PSoC4/CyFlash.c ****     #if (CY_PSOC4_4000)
 750:Generated_Source\PSoC4/CyFlash.c **** 
 751:Generated_Source\PSoC4/CyFlash.c ****         /***************************************************************************
 752:Generated_Source\PSoC4/CyFlash.c ****         * Perform firmware clock settings restore for the PSOC4 4000 devices (the
 753:Generated_Source\PSoC4/CyFlash.c ****         * corresponding system call is not available).
 754:Generated_Source\PSoC4/CyFlash.c ****         ***************************************************************************/
 755:Generated_Source\PSoC4/CyFlash.c **** 
 756:Generated_Source\PSoC4/CyFlash.c ****         /* Restore clock settings */
 757:Generated_Source\PSoC4/CyFlash.c ****         if ((cySysFlashBackup.clkImoFreq != 48u) ||
 758:Generated_Source\PSoC4/CyFlash.c ****             ((cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK) != CY_SYS_CLK_HFCL
 759:Generated_Source\PSoC4/CyFlash.c ****             (((cySysFlashBackup.clkSelectReg >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & CY_SYS_CLK_SELE
 760:Generated_Source\PSoC4/CyFlash.c ****                 CY_SYS_CLK_SELECT_PUMP_SEL_IMO))
 761:Generated_Source\PSoC4/CyFlash.c ****         {
 762:Generated_Source\PSoC4/CyFlash.c ****             /* Restore IMO frequency if needed */
 763:Generated_Source\PSoC4/CyFlash.c ****             if (cySysFlashBackup.clkImoFreq != 48u)
 764:Generated_Source\PSoC4/CyFlash.c ****             {
 765:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkWriteImoFreq(cySysFlashBackup.clkImoFreq);
 766:Generated_Source\PSoC4/CyFlash.c ****             }
 767:Generated_Source\PSoC4/CyFlash.c **** 
 768:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK clock source */
 769:Generated_Source\PSoC4/CyFlash.c ****             CySysClkWriteHfclkDirect(cySysFlashBackup.clkSelectReg & CY_SYS_CLK_SELECT_DIRECT_SEL_M
 770:Generated_Source\PSoC4/CyFlash.c **** 
 771:Generated_Source\PSoC4/CyFlash.c ****             /* Restore HFCLK divider and source for pump  */
ARM GAS  e:\temp\cciA1G8G.s 			page 18


 772:Generated_Source\PSoC4/CyFlash.c ****             CY_SYS_CLK_SELECT_REG = cySysFlashBackup.clkSelectReg;
 773:Generated_Source\PSoC4/CyFlash.c **** 
 774:Generated_Source\PSoC4/CyFlash.c ****             /* Stop IMO if needed */
 775:Generated_Source\PSoC4/CyFlash.c ****             if (0u == cySysFlashBackup.clkImoEna)
 776:Generated_Source\PSoC4/CyFlash.c ****             {
 777:Generated_Source\PSoC4/CyFlash.c ****                 CySysClkImoStop();
 778:Generated_Source\PSoC4/CyFlash.c ****             }
 779:Generated_Source\PSoC4/CyFlash.c ****         }
 780:Generated_Source\PSoC4/CyFlash.c **** 
 781:Generated_Source\PSoC4/CyFlash.c ****     #else
 782:Generated_Source\PSoC4/CyFlash.c **** 
 783:Generated_Source\PSoC4/CyFlash.c ****         #if (CY_IP_SPCIF_SYNCHRONOUS)
 784:Generated_Source\PSoC4/CyFlash.c ****             /* FM-Lite Clock Restore */
 785:Generated_Source\PSoC4/CyFlash.c ****             parameters[0u] =
 199              		.loc 1 785 0
 200 0002 134B     		ldr	r3, .L17
 201 0004 0093     		str	r3, [sp]
 786:Generated_Source\PSoC4/CyFlash.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 787:Generated_Source\PSoC4/CyFlash.c ****                             CY_FLASH_KEY_ONE);
 788:Generated_Source\PSoC4/CyFlash.c ****             parameters[1u] = (uint32) &cySysFlashBackup.clockSettings[0u];
 202              		.loc 1 788 0
 203 0006 134B     		ldr	r3, .L17+4
 204 0008 0193     		str	r3, [sp, #4]
 789:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 205              		.loc 1 789 0
 206 000a 134B     		ldr	r3, .L17+8
 207 000c 6A46     		mov	r2, sp
 208 000e 1A60     		str	r2, [r3]
 790:Generated_Source\PSoC4/CyFlash.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 209              		.loc 1 790 0
 210 0010 1249     		ldr	r1, .L17+12
 211 0012 134A     		ldr	r2, .L17+16
 212 0014 1160     		str	r1, [r2]
 791:Generated_Source\PSoC4/CyFlash.c ****             CY_NOP;
 213              		.loc 1 791 0
 214              		.syntax divided
 215              	@ 791 "Generated_Source\PSoC4\CyFlash.c" 1
 216 0016 C046     		NOP
 217              	
 218              	@ 0 "" 2
 792:Generated_Source\PSoC4/CyFlash.c ****             retValue = CY_FLASH_API_RETURN;
 219              		.loc 1 792 0
 220              		.thumb
 221              		.syntax unified
 222 0018 1B68     		ldr	r3, [r3]
 223 001a 1B0F     		lsrs	r3, r3, #28
 224 001c 1B07     		lsls	r3, r3, #28
 225 001e F022     		movs	r2, #240
 226 0020 1206     		lsls	r2, r2, #24
 227 0022 9342     		cmp	r3, r2
 228 0024 04D1     		bne	.L14
 229              		.loc 1 792 0 is_stmt 0 discriminator 1
 230 0026 0C4B     		ldr	r3, .L17+8
 231 0028 1B68     		ldr	r3, [r3]
 232 002a FF20     		movs	r0, #255
 233 002c 1840     		ands	r0, r3
 234 002e 0DE0     		b	.L15
ARM GAS  e:\temp\cciA1G8G.s 			page 19


 235              	.L14:
 236              		.loc 1 792 0 discriminator 2
 237 0030 094B     		ldr	r3, .L17+8
 238 0032 1B68     		ldr	r3, [r3]
 239 0034 1B0F     		lsrs	r3, r3, #28
 240 0036 1B07     		lsls	r3, r3, #28
 241 0038 A022     		movs	r2, #160
 242 003a 1206     		lsls	r2, r2, #24
 243 003c 9342     		cmp	r3, r2
 244 003e 04D0     		beq	.L16
 245              		.loc 1 792 0 discriminator 4
 246 0040 054B     		ldr	r3, .L17+8
 247 0042 1B68     		ldr	r3, [r3]
 248 0044 FF20     		movs	r0, #255
 249 0046 1840     		ands	r0, r3
 250 0048 00E0     		b	.L15
 251              	.L16:
 252              		.loc 1 792 0
 253 004a 0020     		movs	r0, #0
 254              	.L15:
 255              	.LVL5:
 793:Generated_Source\PSoC4/CyFlash.c ****         #endif /* (CY_IP_SPCIF_SYNCHRONOUS) */
 794:Generated_Source\PSoC4/CyFlash.c **** 
 795:Generated_Source\PSoC4/CyFlash.c ****     #endif  /* (CY_PSOC4_4000) */
 796:Generated_Source\PSoC4/CyFlash.c **** 
 797:Generated_Source\PSoC4/CyFlash.c **** #endif  /* (CY_IP_FM) */
 798:Generated_Source\PSoC4/CyFlash.c **** 
 799:Generated_Source\PSoC4/CyFlash.c ****     return (retValue);
 800:Generated_Source\PSoC4/CyFlash.c **** }
 256              		.loc 1 800 0 is_stmt 1 discriminator 8
 257 004c 02B0     		add	sp, sp, #8
 258              		@ sp needed
 259 004e 7047     		bx	lr
 260              	.L18:
 261              		.align	2
 262              	.L17:
 263 0050 B6EA0000 		.word	60086
 264 0054 00000000 		.word	.LANCHOR0
 265 0058 08001040 		.word	1074790408
 266 005c 17000080 		.word	-2147483625
 267 0060 04001040 		.word	1074790404
 268              		.cfi_endproc
 269              	.LFE4:
 270              		.size	CySysFlashClockRestore, .-CySysFlashClockRestore
 271              		.section	.text.CySysFlashWriteRow,"ax",%progbits
 272              		.align	2
 273              		.global	CySysFlashWriteRow
 274              		.code	16
 275              		.thumb_func
 276              		.type	CySysFlashWriteRow, %function
 277              	CySysFlashWriteRow:
 278              	.LFB0:
  82:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 retValue = CY_SYS_FLASH_SUCCESS;
 279              		.loc 1 82 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 272
 282              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  e:\temp\cciA1G8G.s 			page 20


 283              	.LVL6:
 284 0000 30B5     		push	{r4, r5, lr}
 285              		.cfi_def_cfa_offset 12
 286              		.cfi_offset 4, -12
 287              		.cfi_offset 5, -8
 288              		.cfi_offset 14, -4
 289 0002 C5B0     		sub	sp, sp, #276
 290              		.cfi_def_cfa_offset 288
 291 0004 0400     		movs	r4, r0
  83:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 clkCnfRetValue = CY_SYS_FLASH_SUCCESS;
 292              		.loc 1 83 0
 293 0006 0023     		movs	r3, #0
 294 0008 4393     		str	r3, [sp, #268]
  84:Generated_Source\PSoC4/CyFlash.c ****     volatile uint32 parameters[(CY_FLASH_SIZEOF_ROW + CY_FLASH_SRAM_ROM_DATA) / sizeof(uint32)];
 295              		.loc 1 84 0
 296 000a 4293     		str	r3, [sp, #264]
  97:Generated_Source\PSoC4/CyFlash.c ****     {
 297              		.loc 1 97 0
 298 000c 3D4B     		ldr	r3, .L30
 299 000e 9842     		cmp	r0, r3
 300 0010 73D8     		bhi	.L20
  97:Generated_Source\PSoC4/CyFlash.c ****     {
 301              		.loc 1 97 0 is_stmt 0 discriminator 1
 302 0012 0029     		cmp	r1, #0
 303 0014 71D0     		beq	.L20
 100:Generated_Source\PSoC4/CyFlash.c **** 
 304              		.loc 1 100 0 is_stmt 1
 305 0016 8022     		movs	r2, #128
 306 0018 5200     		lsls	r2, r2, #1
 307 001a 02A8     		add	r0, sp, #8
 308              	.LVL7:
 309 001c FFF7FEFF 		bl	memcpy
 310              	.LVL8:
 124:Generated_Source\PSoC4/CyFlash.c ****                          (uint32) (CY_FLASH_PAGE_LATCH_START_ADDR             << CY_FLASH_PARAM_ADD
 311              		.loc 1 124 0
 312 0020 394B     		ldr	r3, .L30+4
 313 0022 0093     		str	r3, [sp]
 128:Generated_Source\PSoC4/CyFlash.c **** 
 314              		.loc 1 128 0
 315 0024 FF23     		movs	r3, #255
 316 0026 0193     		str	r3, [sp, #4]
 130:Generated_Source\PSoC4/CyFlash.c ****         CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_LOAD;
 317              		.loc 1 130 0
 318 0028 384B     		ldr	r3, .L30+8
 319 002a 6A46     		mov	r2, sp
 320 002c 1A60     		str	r2, [r3]
 131:Generated_Source\PSoC4/CyFlash.c ****         CY_NOP;
 321              		.loc 1 131 0
 322 002e 3849     		ldr	r1, .L30+12
 323 0030 384A     		ldr	r2, .L30+16
 324 0032 1160     		str	r1, [r2]
 132:Generated_Source\PSoC4/CyFlash.c ****         retValue = CY_FLASH_API_RETURN;
 325              		.loc 1 132 0
 326              		.syntax divided
 327              	@ 132 "Generated_Source\PSoC4\CyFlash.c" 1
 328 0034 C046     		NOP
 329              	
ARM GAS  e:\temp\cciA1G8G.s 			page 21


 330              	@ 0 "" 2
 133:Generated_Source\PSoC4/CyFlash.c **** 
 331              		.loc 1 133 0
 332              		.thumb
 333              		.syntax unified
 334 0036 1B68     		ldr	r3, [r3]
 335 0038 1B0F     		lsrs	r3, r3, #28
 336 003a 1B07     		lsls	r3, r3, #28
 337 003c F022     		movs	r2, #240
 338 003e 1206     		lsls	r2, r2, #24
 339 0040 9342     		cmp	r3, r2
 340 0042 04D1     		bne	.L21
 133:Generated_Source\PSoC4/CyFlash.c **** 
 341              		.loc 1 133 0 is_stmt 0 discriminator 1
 342 0044 314B     		ldr	r3, .L30+8
 343 0046 1B68     		ldr	r3, [r3]
 344 0048 FF22     		movs	r2, #255
 345 004a 1340     		ands	r3, r2
 346 004c 0DE0     		b	.L22
 347              	.L21:
 133:Generated_Source\PSoC4/CyFlash.c **** 
 348              		.loc 1 133 0 discriminator 2
 349 004e 2F4B     		ldr	r3, .L30+8
 350 0050 1B68     		ldr	r3, [r3]
 351 0052 1B0F     		lsrs	r3, r3, #28
 352 0054 1B07     		lsls	r3, r3, #28
 353 0056 A022     		movs	r2, #160
 354 0058 1206     		lsls	r2, r2, #24
 355 005a 9342     		cmp	r3, r2
 356 005c 04D0     		beq	.L29
 133:Generated_Source\PSoC4/CyFlash.c **** 
 357              		.loc 1 133 0 discriminator 4
 358 005e 2B4B     		ldr	r3, .L30+8
 359 0060 1B68     		ldr	r3, [r3]
 360 0062 FF22     		movs	r2, #255
 361 0064 1340     		ands	r3, r2
 362 0066 00E0     		b	.L22
 363              	.L29:
 133:Generated_Source\PSoC4/CyFlash.c **** 
 364              		.loc 1 133 0
 365 0068 0023     		movs	r3, #0
 366              	.L22:
 133:Generated_Source\PSoC4/CyFlash.c **** 
 367              		.loc 1 133 0 discriminator 8
 368 006a 4393     		str	r3, [sp, #268]
 135:Generated_Source\PSoC4/CyFlash.c ****         {
 369              		.loc 1 135 0 is_stmt 1 discriminator 8
 370 006c 439B     		ldr	r3, [sp, #268]
 371 006e 002B     		cmp	r3, #0
 372 0070 45D1     		bne	.L23
 143:Generated_Source\PSoC4/CyFlash.c **** 
 373              		.loc 1 143 0
 374 0072 FFF7FEFF 		bl	CyEnterCriticalSection
 375              	.LVL9:
 376 0076 0500     		movs	r5, r0
 377              	.LVL10:
 145:Generated_Source\PSoC4/CyFlash.c **** 
ARM GAS  e:\temp\cciA1G8G.s 			page 22


 378              		.loc 1 145 0
 379 0078 FFF7FEFF 		bl	CySysFlashClockBackup
 380              	.LVL11:
 381 007c 4290     		str	r0, [sp, #264]
 148:Generated_Source\PSoC4/CyFlash.c ****             {
 382              		.loc 1 148 0
 383 007e 429B     		ldr	r3, [sp, #264]
 384 0080 002B     		cmp	r3, #0
 385 0082 02D1     		bne	.L24
 150:Generated_Source\PSoC4/CyFlash.c ****             }
 386              		.loc 1 150 0
 387 0084 FFF7FEFF 		bl	CySysFlashClockConfig
 388              	.LVL12:
 389 0088 4390     		str	r0, [sp, #268]
 390              	.L24:
 154:Generated_Source\PSoC4/CyFlash.c ****             {
 391              		.loc 1 154 0
 392 008a 439B     		ldr	r3, [sp, #268]
 393 008c 002B     		cmp	r3, #0
 394 008e 25D1     		bne	.L25
 157:Generated_Source\PSoC4/CyFlash.c ****                 parameters[0u] |= (uint32)(rowNum << 16u);
 395              		.loc 1 157 0
 396 0090 214A     		ldr	r2, .L30+20
 397 0092 0092     		str	r2, [sp]
 158:Generated_Source\PSoC4/CyFlash.c **** 
 398              		.loc 1 158 0
 399 0094 009A     		ldr	r2, [sp]
 400 0096 2404     		lsls	r4, r4, #16
 401              	.LVL13:
 402 0098 1443     		orrs	r4, r2
 403 009a 0094     		str	r4, [sp]
 160:Generated_Source\PSoC4/CyFlash.c ****                 CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_WRITE_RO
 404              		.loc 1 160 0
 405 009c 1B4A     		ldr	r2, .L30+8
 406 009e 6946     		mov	r1, sp
 407 00a0 1160     		str	r1, [r2]
 161:Generated_Source\PSoC4/CyFlash.c ****                 CY_NOP;
 408              		.loc 1 161 0
 409 00a2 1E48     		ldr	r0, .L30+24
 410 00a4 1B49     		ldr	r1, .L30+16
 411 00a6 0860     		str	r0, [r1]
 162:Generated_Source\PSoC4/CyFlash.c ****                 retValue = CY_FLASH_API_RETURN;
 412              		.loc 1 162 0
 413              		.syntax divided
 414              	@ 162 "Generated_Source\PSoC4\CyFlash.c" 1
 415 00a8 C046     		NOP
 416              	
 417              	@ 0 "" 2
 163:Generated_Source\PSoC4/CyFlash.c ****             }
 418              		.loc 1 163 0
 419              		.thumb
 420              		.syntax unified
 421 00aa 1268     		ldr	r2, [r2]
 422 00ac 120F     		lsrs	r2, r2, #28
 423 00ae 1207     		lsls	r2, r2, #28
 424 00b0 F021     		movs	r1, #240
 425 00b2 0906     		lsls	r1, r1, #24
ARM GAS  e:\temp\cciA1G8G.s 			page 23


 426 00b4 8A42     		cmp	r2, r1
 427 00b6 04D1     		bne	.L26
 163:Generated_Source\PSoC4/CyFlash.c ****             }
 428              		.loc 1 163 0 is_stmt 0 discriminator 1
 429 00b8 144B     		ldr	r3, .L30+8
 430 00ba 1B68     		ldr	r3, [r3]
 431 00bc FF22     		movs	r2, #255
 432 00be 1340     		ands	r3, r2
 433 00c0 0BE0     		b	.L27
 434              	.L26:
 163:Generated_Source\PSoC4/CyFlash.c ****             }
 435              		.loc 1 163 0 discriminator 2
 436 00c2 124A     		ldr	r2, .L30+8
 437 00c4 1268     		ldr	r2, [r2]
 438 00c6 120F     		lsrs	r2, r2, #28
 439 00c8 1207     		lsls	r2, r2, #28
 440 00ca A021     		movs	r1, #160
 441 00cc 0906     		lsls	r1, r1, #24
 442 00ce 8A42     		cmp	r2, r1
 443 00d0 03D0     		beq	.L27
 163:Generated_Source\PSoC4/CyFlash.c ****             }
 444              		.loc 1 163 0 discriminator 4
 445 00d2 0E4B     		ldr	r3, .L30+8
 446 00d4 1B68     		ldr	r3, [r3]
 447 00d6 FF22     		movs	r2, #255
 448 00d8 1340     		ands	r3, r2
 449              	.L27:
 163:Generated_Source\PSoC4/CyFlash.c ****             }
 450              		.loc 1 163 0 discriminator 8
 451 00da 4393     		str	r3, [sp, #268]
 452              	.L25:
 202:Generated_Source\PSoC4/CyFlash.c ****             {
 453              		.loc 1 202 0 is_stmt 1
 454 00dc 429B     		ldr	r3, [sp, #264]
 455 00de 002B     		cmp	r3, #0
 456 00e0 07D1     		bne	.L28
 204:Generated_Source\PSoC4/CyFlash.c **** 
 457              		.loc 1 204 0
 458 00e2 FFF7FEFF 		bl	CySysFlashClockRestore
 459              	.LVL14:
 460 00e6 4290     		str	r0, [sp, #264]
 206:Generated_Source\PSoC4/CyFlash.c ****                 {
 461              		.loc 1 206 0
 462 00e8 429B     		ldr	r3, [sp, #264]
 463 00ea 002B     		cmp	r3, #0
 464 00ec 01D0     		beq	.L28
 208:Generated_Source\PSoC4/CyFlash.c ****                 }
 465              		.loc 1 208 0
 466 00ee 429B     		ldr	r3, [sp, #264]
 467 00f0 4393     		str	r3, [sp, #268]
 468              	.L28:
 212:Generated_Source\PSoC4/CyFlash.c ****         }
 469              		.loc 1 212 0
 470 00f2 2800     		movs	r0, r5
 471 00f4 FFF7FEFF 		bl	CyExitCriticalSection
 472              	.LVL15:
 473 00f8 01E0     		b	.L23
ARM GAS  e:\temp\cciA1G8G.s 			page 24


 474              	.LVL16:
 475              	.L20:
 217:Generated_Source\PSoC4/CyFlash.c ****     }
 476              		.loc 1 217 0
 477 00fa 0423     		movs	r3, #4
 478 00fc 4393     		str	r3, [sp, #268]
 479              	.LVL17:
 480              	.L23:
 220:Generated_Source\PSoC4/CyFlash.c **** }
 481              		.loc 1 220 0
 482 00fe 4398     		ldr	r0, [sp, #268]
 221:Generated_Source\PSoC4/CyFlash.c **** 
 483              		.loc 1 221 0
 484 0100 45B0     		add	sp, sp, #276
 485              		@ sp needed
 486 0102 30BD     		pop	{r4, r5, pc}
 487              	.L31:
 488              		.align	2
 489              	.L30:
 490 0104 FF010000 		.word	511
 491 0108 B6D70000 		.word	55222
 492 010c 08001040 		.word	1074790408
 493 0110 04000080 		.word	-2147483644
 494 0114 04001040 		.word	1074790404
 495 0118 B6D80000 		.word	55478
 496 011c 05000080 		.word	-2147483643
 497              		.cfi_endproc
 498              	.LFE0:
 499              		.size	CySysFlashWriteRow, .-CySysFlashWriteRow
 500              		.section	.text.CySysFlashSetWaitCycles,"ax",%progbits
 501              		.align	2
 502              		.global	CySysFlashSetWaitCycles
 503              		.code	16
 504              		.thumb_func
 505              		.type	CySysFlashSetWaitCycles, %function
 506              	CySysFlashSetWaitCycles:
 507              	.LFB1:
 423:Generated_Source\PSoC4/CyFlash.c ****     uint8  interruptState;
 508              		.loc 1 423 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              	.LVL18:
 513 0000 70B5     		push	{r4, r5, r6, lr}
 514              		.cfi_def_cfa_offset 16
 515              		.cfi_offset 4, -16
 516              		.cfi_offset 5, -12
 517              		.cfi_offset 6, -8
 518              		.cfi_offset 14, -4
 519 0002 0400     		movs	r4, r0
 426:Generated_Source\PSoC4/CyFlash.c **** 
 520              		.loc 1 426 0
 521 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 522              	.LVL19:
 523 0008 0500     		movs	r5, r0
 524              	.LVL20:
 441:Generated_Source\PSoC4/CyFlash.c ****             {
ARM GAS  e:\temp\cciA1G8G.s 			page 25


 525              		.loc 1 441 0
 526 000a 102C     		cmp	r4, #16
 527 000c 05D8     		bhi	.L33
 443:Generated_Source\PSoC4/CyFlash.c ****             } else
 528              		.loc 1 443 0
 529 000e 104A     		ldr	r2, .L37
 530 0010 1368     		ldr	r3, [r2]
 531 0012 0321     		movs	r1, #3
 532 0014 8B43     		bics	r3, r1
 533 0016 1360     		str	r3, [r2]
 534 0018 16E0     		b	.L34
 535              	.L33:
 445:Generated_Source\PSoC4/CyFlash.c ****             {
 536              		.loc 1 445 0
 537 001a 202C     		cmp	r4, #32
 538 001c 07D8     		bhi	.L35
 447:Generated_Source\PSoC4/CyFlash.c ****             } else
 539              		.loc 1 447 0
 540 001e 0C49     		ldr	r1, .L37
 541 0020 0B68     		ldr	r3, [r1]
 542 0022 0322     		movs	r2, #3
 543 0024 9343     		bics	r3, r2
 544 0026 023A     		subs	r2, r2, #2
 545 0028 1343     		orrs	r3, r2
 546 002a 0B60     		str	r3, [r1]
 547 002c 0CE0     		b	.L34
 548              	.L35:
 450:Generated_Source\PSoC4/CyFlash.c ****                 {
 549              		.loc 1 450 0
 550 002e 302C     		cmp	r4, #48
 551 0030 07D8     		bhi	.L36
 452:Generated_Source\PSoC4/CyFlash.c ****                 }
 552              		.loc 1 452 0
 553 0032 0749     		ldr	r1, .L37
 554 0034 0B68     		ldr	r3, [r1]
 555 0036 0322     		movs	r2, #3
 556 0038 9343     		bics	r3, r2
 557 003a 013A     		subs	r2, r2, #1
 558 003c 1343     		orrs	r3, r2
 559 003e 0B60     		str	r3, [r1]
 560 0040 02E0     		b	.L34
 561              	.L36:
 459:Generated_Source\PSoC4/CyFlash.c ****         }
 562              		.loc 1 459 0 discriminator 1
 563 0042 0020     		movs	r0, #0
 564 0044 FFF7FEFF 		bl	CyHalt
 565              	.LVL21:
 566              	.L34:
 464:Generated_Source\PSoC4/CyFlash.c **** }
 567              		.loc 1 464 0
 568 0048 2800     		movs	r0, r5
 569 004a FFF7FEFF 		bl	CyExitCriticalSection
 570              	.LVL22:
 465:Generated_Source\PSoC4/CyFlash.c **** 
 571              		.loc 1 465 0
 572              		@ sp needed
 573              	.LVL23:
ARM GAS  e:\temp\cciA1G8G.s 			page 26


 574              	.LVL24:
 575 004e 70BD     		pop	{r4, r5, r6, pc}
 576              	.L38:
 577              		.align	2
 578              	.L37:
 579 0050 30001040 		.word	1074790448
 580              		.cfi_endproc
 581              	.LFE1:
 582              		.size	CySysFlashSetWaitCycles, .-CySysFlashSetWaitCycles
 583              		.bss
 584              		.align	2
 585              		.set	.LANCHOR0,. + 0
 586              		.type	cySysFlashBackup, %object
 587              		.size	cySysFlashBackup, 24
 588              	cySysFlashBackup:
 589 0000 00000000 		.space	24
 589      00000000 
 589      00000000 
 589      00000000 
 589      00000000 
 590              		.text
 591              	.Letext0:
 592              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 593              		.file 3 "Generated_Source\\PSoC4\\CyFlash.h"
 594              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 595              		.section	.debug_info,"",%progbits
 596              	.Ldebug_info0:
 597 0000 40030000 		.4byte	0x340
 598 0004 0400     		.2byte	0x4
 599 0006 00000000 		.4byte	.Ldebug_abbrev0
 600 000a 04       		.byte	0x4
 601 000b 01       		.uleb128 0x1
 602 000c B2020000 		.4byte	.LASF34
 603 0010 0C       		.byte	0xc
 604 0011 07010000 		.4byte	.LASF35
 605 0015 72010000 		.4byte	.LASF36
 606 0019 00000000 		.4byte	.Ldebug_ranges0+0
 607 001d 00000000 		.4byte	0
 608 0021 00000000 		.4byte	.Ldebug_line0
 609 0025 02       		.uleb128 0x2
 610 0026 01       		.byte	0x1
 611 0027 06       		.byte	0x6
 612 0028 7B020000 		.4byte	.LASF0
 613 002c 02       		.uleb128 0x2
 614 002d 01       		.byte	0x1
 615 002e 08       		.byte	0x8
 616 002f 98000000 		.4byte	.LASF1
 617 0033 02       		.uleb128 0x2
 618 0034 02       		.byte	0x2
 619 0035 05       		.byte	0x5
 620 0036 D8000000 		.4byte	.LASF2
 621 003a 02       		.uleb128 0x2
 622 003b 02       		.byte	0x2
 623 003c 07       		.byte	0x7
 624 003d 5B000000 		.4byte	.LASF3
 625 0041 02       		.uleb128 0x2
 626 0042 04       		.byte	0x4
ARM GAS  e:\temp\cciA1G8G.s 			page 27


 627 0043 05       		.byte	0x5
 628 0044 61020000 		.4byte	.LASF4
 629 0048 02       		.uleb128 0x2
 630 0049 04       		.byte	0x4
 631 004a 07       		.byte	0x7
 632 004b B9000000 		.4byte	.LASF5
 633 004f 02       		.uleb128 0x2
 634 0050 08       		.byte	0x8
 635 0051 05       		.byte	0x5
 636 0052 5D010000 		.4byte	.LASF6
 637 0056 02       		.uleb128 0x2
 638 0057 08       		.byte	0x8
 639 0058 07       		.byte	0x7
 640 0059 81000000 		.4byte	.LASF7
 641 005d 03       		.uleb128 0x3
 642 005e 04       		.byte	0x4
 643 005f 05       		.byte	0x5
 644 0060 696E7400 		.ascii	"int\000"
 645 0064 02       		.uleb128 0x2
 646 0065 04       		.byte	0x4
 647 0066 07       		.byte	0x7
 648 0067 6E000000 		.4byte	.LASF8
 649 006b 04       		.uleb128 0x4
 650 006c CB000000 		.4byte	.LASF9
 651 0070 02       		.byte	0x2
 652 0071 E401     		.2byte	0x1e4
 653 0073 2C000000 		.4byte	0x2c
 654 0077 04       		.uleb128 0x4
 655 0078 E2000000 		.4byte	.LASF10
 656 007c 02       		.byte	0x2
 657 007d E501     		.2byte	0x1e5
 658 007f 3A000000 		.4byte	0x3a
 659 0083 04       		.uleb128 0x4
 660 0084 E9000000 		.4byte	.LASF11
 661 0088 02       		.byte	0x2
 662 0089 E601     		.2byte	0x1e6
 663 008b 48000000 		.4byte	0x48
 664 008f 02       		.uleb128 0x2
 665 0090 04       		.byte	0x4
 666 0091 04       		.byte	0x4
 667 0092 7B000000 		.4byte	.LASF12
 668 0096 02       		.uleb128 0x2
 669 0097 08       		.byte	0x8
 670 0098 04       		.byte	0x4
 671 0099 D1000000 		.4byte	.LASF13
 672 009d 02       		.uleb128 0x2
 673 009e 01       		.byte	0x1
 674 009f 08       		.byte	0x8
 675 00a0 6A020000 		.4byte	.LASF14
 676 00a4 04       		.uleb128 0x4
 677 00a5 00000000 		.4byte	.LASF15
 678 00a9 02       		.byte	0x2
 679 00aa 8602     		.2byte	0x286
 680 00ac 48000000 		.4byte	0x48
 681 00b0 04       		.uleb128 0x4
 682 00b1 09000000 		.4byte	.LASF16
 683 00b5 02       		.byte	0x2
ARM GAS  e:\temp\cciA1G8G.s 			page 28


 684 00b6 9002     		.2byte	0x290
 685 00b8 BC000000 		.4byte	0xbc
 686 00bc 05       		.uleb128 0x5
 687 00bd 83000000 		.4byte	0x83
 688 00c1 02       		.uleb128 0x2
 689 00c2 08       		.byte	0x8
 690 00c3 04       		.byte	0x4
 691 00c4 6F020000 		.4byte	.LASF17
 692 00c8 02       		.uleb128 0x2
 693 00c9 04       		.byte	0x4
 694 00ca 07       		.byte	0x7
 695 00cb 54010000 		.4byte	.LASF18
 696 00cf 06       		.uleb128 0x6
 697 00d0 2E000000 		.4byte	.LASF37
 698 00d4 18       		.byte	0x18
 699 00d5 03       		.byte	0x3
 700 00d6 D7       		.byte	0xd7
 701 00d7 E8000000 		.4byte	0xe8
 702 00db 07       		.uleb128 0x7
 703 00dc EF010000 		.4byte	.LASF38
 704 00e0 03       		.byte	0x3
 705 00e1 E7       		.byte	0xe7
 706 00e2 E8000000 		.4byte	0xe8
 707 00e6 00       		.byte	0
 708 00e7 00       		.byte	0
 709 00e8 08       		.uleb128 0x8
 710 00e9 83000000 		.4byte	0x83
 711 00ed F8000000 		.4byte	0xf8
 712 00f1 09       		.uleb128 0x9
 713 00f2 C8000000 		.4byte	0xc8
 714 00f6 05       		.byte	0x5
 715 00f7 00       		.byte	0
 716 00f8 0A       		.uleb128 0xa
 717 00f9 40020000 		.4byte	.LASF19
 718 00fd 03       		.byte	0x3
 719 00fe ED       		.byte	0xed
 720 00ff CF000000 		.4byte	0xcf
 721 0103 0B       		.uleb128 0xb
 722 0104 2A020000 		.4byte	.LASF22
 723 0108 01       		.byte	0x1
 724 0109 3A02     		.2byte	0x23a
 725 010b A4000000 		.4byte	0xa4
 726 010f 00000000 		.4byte	.LFB2
 727 0113 64000000 		.4byte	.LFE2-.LFB2
 728 0117 01       		.uleb128 0x1
 729 0118 9C       		.byte	0x9c
 730 0119 3D010000 		.4byte	0x13d
 731 011d 0C       		.uleb128 0xc
 732 011e 0F000000 		.4byte	.LASF20
 733 0122 01       		.byte	0x1
 734 0123 3C02     		.2byte	0x23c
 735 0125 A4000000 		.4byte	0xa4
 736 0129 00000000 		.4byte	.LLST0
 737 012d 0D       		.uleb128 0xd
 738 012e AE000000 		.4byte	.LASF21
 739 0132 01       		.byte	0x1
 740 0133 4002     		.2byte	0x240
ARM GAS  e:\temp\cciA1G8G.s 			page 29


 741 0135 4D010000 		.4byte	0x14d
 742 0139 02       		.uleb128 0x2
 743 013a 91       		.byte	0x91
 744 013b 78       		.sleb128 -8
 745 013c 00       		.byte	0
 746 013d 08       		.uleb128 0x8
 747 013e BC000000 		.4byte	0xbc
 748 0142 4D010000 		.4byte	0x14d
 749 0146 09       		.uleb128 0x9
 750 0147 C8000000 		.4byte	0xc8
 751 014b 01       		.byte	0x1
 752 014c 00       		.byte	0
 753 014d 05       		.uleb128 0x5
 754 014e 3D010000 		.4byte	0x13d
 755 0152 0B       		.uleb128 0xb
 756 0153 FD010000 		.4byte	.LASF23
 757 0157 01       		.byte	0x1
 758 0158 8E02     		.2byte	0x28e
 759 015a A4000000 		.4byte	0xa4
 760 015e 00000000 		.4byte	.LFB3
 761 0162 54000000 		.4byte	.LFE3-.LFB3
 762 0166 01       		.uleb128 0x1
 763 0167 9C       		.byte	0x9c
 764 0168 7D010000 		.4byte	0x17d
 765 016c 0C       		.uleb128 0xc
 766 016d 0F000000 		.4byte	.LASF20
 767 0171 01       		.byte	0x1
 768 0172 9002     		.2byte	0x290
 769 0174 A4000000 		.4byte	0xa4
 770 0178 1F000000 		.4byte	.LLST1
 771 017c 00       		.byte	0
 772 017d 0B       		.uleb128 0xb
 773 017e 13020000 		.4byte	.LASF24
 774 0182 01       		.byte	0x1
 775 0183 D802     		.2byte	0x2d8
 776 0185 A4000000 		.4byte	0xa4
 777 0189 00000000 		.4byte	.LFB4
 778 018d 64000000 		.4byte	.LFE4-.LFB4
 779 0191 01       		.uleb128 0x1
 780 0192 9C       		.byte	0x9c
 781 0193 B7010000 		.4byte	0x1b7
 782 0197 0C       		.uleb128 0xc
 783 0198 0F000000 		.4byte	.LASF20
 784 019c 01       		.byte	0x1
 785 019d DA02     		.2byte	0x2da
 786 019f A4000000 		.4byte	0xa4
 787 01a3 3E000000 		.4byte	.LLST2
 788 01a7 0D       		.uleb128 0xd
 789 01a8 AE000000 		.4byte	.LASF21
 790 01ac 01       		.byte	0x1
 791 01ad DE02     		.2byte	0x2de
 792 01af B7010000 		.4byte	0x1b7
 793 01b3 02       		.uleb128 0x2
 794 01b4 91       		.byte	0x91
 795 01b5 78       		.sleb128 -8
 796 01b6 00       		.byte	0
 797 01b7 05       		.uleb128 0x5
ARM GAS  e:\temp\cciA1G8G.s 			page 30


 798 01b8 3D010000 		.4byte	0x13d
 799 01bc 0E       		.uleb128 0xe
 800 01bd 87020000 		.4byte	.LASF39
 801 01c1 01       		.byte	0x1
 802 01c2 51       		.byte	0x51
 803 01c3 83000000 		.4byte	0x83
 804 01c7 00000000 		.4byte	.LFB0
 805 01cb 20010000 		.4byte	.LFE0-.LFB0
 806 01cf 01       		.uleb128 0x1
 807 01d0 9C       		.byte	0x9c
 808 01d1 85020000 		.4byte	0x285
 809 01d5 0F       		.uleb128 0xf
 810 01d6 18000000 		.4byte	.LASF25
 811 01da 01       		.byte	0x1
 812 01db 51       		.byte	0x51
 813 01dc 83000000 		.4byte	0x83
 814 01e0 5D000000 		.4byte	.LLST3
 815 01e4 0F       		.uleb128 0xf
 816 01e5 A6000000 		.4byte	.LASF26
 817 01e9 01       		.byte	0x1
 818 01ea 51       		.byte	0x51
 819 01eb 85020000 		.4byte	0x285
 820 01ef A2000000 		.4byte	.LLST4
 821 01f3 10       		.uleb128 0x10
 822 01f4 0F000000 		.4byte	.LASF20
 823 01f8 01       		.byte	0x1
 824 01f9 53       		.byte	0x53
 825 01fa BC000000 		.4byte	0xbc
 826 01fe 02       		.uleb128 0x2
 827 01ff 91       		.byte	0x91
 828 0200 6C       		.sleb128 -20
 829 0201 10       		.uleb128 0x10
 830 0202 1F000000 		.4byte	.LASF27
 831 0206 01       		.byte	0x1
 832 0207 54       		.byte	0x54
 833 0208 BC000000 		.4byte	0xbc
 834 020c 02       		.uleb128 0x2
 835 020d 91       		.byte	0x91
 836 020e 68       		.sleb128 -24
 837 020f 10       		.uleb128 0x10
 838 0210 AE000000 		.4byte	.LASF21
 839 0214 01       		.byte	0x1
 840 0215 55       		.byte	0x55
 841 0216 A0020000 		.4byte	0x2a0
 842 021a 03       		.uleb128 0x3
 843 021b 91       		.byte	0x91
 844 021c E07D     		.sleb128 -288
 845 021e 11       		.uleb128 0x11
 846 021f 3E010000 		.4byte	.LASF28
 847 0223 01       		.byte	0x1
 848 0224 56       		.byte	0x56
 849 0225 6B000000 		.4byte	0x6b
 850 0229 DC000000 		.4byte	.LLST5
 851 022d 12       		.uleb128 0x12
 852 022e 20000000 		.4byte	.LVL8
 853 0232 19030000 		.4byte	0x319
 854 0236 50020000 		.4byte	0x250
ARM GAS  e:\temp\cciA1G8G.s 			page 31


 855 023a 13       		.uleb128 0x13
 856 023b 01       		.uleb128 0x1
 857 023c 50       		.byte	0x50
 858 023d 03       		.uleb128 0x3
 859 023e 91       		.byte	0x91
 860 023f E87D     		.sleb128 -280
 861 0241 13       		.uleb128 0x13
 862 0242 01       		.uleb128 0x1
 863 0243 51       		.byte	0x51
 864 0244 03       		.uleb128 0x3
 865 0245 F3       		.byte	0xf3
 866 0246 01       		.uleb128 0x1
 867 0247 51       		.byte	0x51
 868 0248 13       		.uleb128 0x13
 869 0249 01       		.uleb128 0x1
 870 024a 52       		.byte	0x52
 871 024b 03       		.uleb128 0x3
 872 024c 0A       		.byte	0xa
 873 024d 0001     		.2byte	0x100
 874 024f 00       		.byte	0
 875 0250 14       		.uleb128 0x14
 876 0251 76000000 		.4byte	.LVL9
 877 0255 22030000 		.4byte	0x322
 878 0259 14       		.uleb128 0x14
 879 025a 7C000000 		.4byte	.LVL11
 880 025e 03010000 		.4byte	0x103
 881 0262 14       		.uleb128 0x14
 882 0263 88000000 		.4byte	.LVL12
 883 0267 52010000 		.4byte	0x152
 884 026b 14       		.uleb128 0x14
 885 026c E6000000 		.4byte	.LVL14
 886 0270 7D010000 		.4byte	0x17d
 887 0274 15       		.uleb128 0x15
 888 0275 F8000000 		.4byte	.LVL15
 889 0279 2D030000 		.4byte	0x32d
 890 027d 13       		.uleb128 0x13
 891 027e 01       		.uleb128 0x1
 892 027f 50       		.byte	0x50
 893 0280 02       		.uleb128 0x2
 894 0281 75       		.byte	0x75
 895 0282 00       		.sleb128 0
 896 0283 00       		.byte	0
 897 0284 00       		.byte	0
 898 0285 16       		.uleb128 0x16
 899 0286 04       		.byte	0x4
 900 0287 8B020000 		.4byte	0x28b
 901 028b 17       		.uleb128 0x17
 902 028c 6B000000 		.4byte	0x6b
 903 0290 08       		.uleb128 0x8
 904 0291 BC000000 		.4byte	0xbc
 905 0295 A0020000 		.4byte	0x2a0
 906 0299 09       		.uleb128 0x9
 907 029a C8000000 		.4byte	0xc8
 908 029e 41       		.byte	0x41
 909 029f 00       		.byte	0
 910 02a0 05       		.uleb128 0x5
 911 02a1 90020000 		.4byte	0x290
ARM GAS  e:\temp\cciA1G8G.s 			page 32


 912 02a5 18       		.uleb128 0x18
 913 02a6 9A020000 		.4byte	.LASF40
 914 02aa 01       		.byte	0x1
 915 02ab A601     		.2byte	0x1a6
 916 02ad 00000000 		.4byte	.LFB1
 917 02b1 54000000 		.4byte	.LFE1-.LFB1
 918 02b5 01       		.uleb128 0x1
 919 02b6 9C       		.byte	0x9c
 920 02b7 08030000 		.4byte	0x308
 921 02bb 19       		.uleb128 0x19
 922 02bc EA010000 		.4byte	.LASF29
 923 02c0 01       		.byte	0x1
 924 02c1 A601     		.2byte	0x1a6
 925 02c3 83000000 		.4byte	0x83
 926 02c7 EF000000 		.4byte	.LLST6
 927 02cb 0C       		.uleb128 0xc
 928 02cc 3E010000 		.4byte	.LASF28
 929 02d0 01       		.byte	0x1
 930 02d1 A801     		.2byte	0x1a8
 931 02d3 6B000000 		.4byte	0x6b
 932 02d7 1B010000 		.4byte	.LLST7
 933 02db 14       		.uleb128 0x14
 934 02dc 08000000 		.4byte	.LVL19
 935 02e0 22030000 		.4byte	0x322
 936 02e4 12       		.uleb128 0x12
 937 02e5 48000000 		.4byte	.LVL21
 938 02e9 38030000 		.4byte	0x338
 939 02ed F7020000 		.4byte	0x2f7
 940 02f1 13       		.uleb128 0x13
 941 02f2 01       		.uleb128 0x1
 942 02f3 50       		.byte	0x50
 943 02f4 01       		.uleb128 0x1
 944 02f5 30       		.byte	0x30
 945 02f6 00       		.byte	0
 946 02f7 15       		.uleb128 0x15
 947 02f8 4E000000 		.4byte	.LVL22
 948 02fc 2D030000 		.4byte	0x32d
 949 0300 13       		.uleb128 0x13
 950 0301 01       		.uleb128 0x1
 951 0302 50       		.byte	0x50
 952 0303 02       		.uleb128 0x2
 953 0304 75       		.byte	0x75
 954 0305 00       		.sleb128 0
 955 0306 00       		.byte	0
 956 0307 00       		.byte	0
 957 0308 10       		.uleb128 0x10
 958 0309 4A000000 		.4byte	.LASF30
 959 030d 01       		.byte	0x1
 960 030e 22       		.byte	0x22
 961 030f F8000000 		.4byte	0xf8
 962 0313 05       		.uleb128 0x5
 963 0314 03       		.byte	0x3
 964 0315 00000000 		.4byte	cySysFlashBackup
 965 0319 1A       		.uleb128 0x1a
 966 031a 6B010000 		.4byte	.LASF41
 967 031e 6B010000 		.4byte	.LASF41
 968 0322 1B       		.uleb128 0x1b
ARM GAS  e:\temp\cciA1G8G.s 			page 33


 969 0323 F0000000 		.4byte	.LASF31
 970 0327 F0000000 		.4byte	.LASF31
 971 032b 04       		.byte	0x4
 972 032c E5       		.byte	0xe5
 973 032d 1B       		.uleb128 0x1b
 974 032e 28010000 		.4byte	.LASF32
 975 0332 28010000 		.4byte	.LASF32
 976 0336 04       		.byte	0x4
 977 0337 E6       		.byte	0xe6
 978 0338 1B       		.uleb128 0x1b
 979 0339 4D010000 		.4byte	.LASF33
 980 033d 4D010000 		.4byte	.LASF33
 981 0341 04       		.byte	0x4
 982 0342 E7       		.byte	0xe7
 983 0343 00       		.byte	0
 984              		.section	.debug_abbrev,"",%progbits
 985              	.Ldebug_abbrev0:
 986 0000 01       		.uleb128 0x1
 987 0001 11       		.uleb128 0x11
 988 0002 01       		.byte	0x1
 989 0003 25       		.uleb128 0x25
 990 0004 0E       		.uleb128 0xe
 991 0005 13       		.uleb128 0x13
 992 0006 0B       		.uleb128 0xb
 993 0007 03       		.uleb128 0x3
 994 0008 0E       		.uleb128 0xe
 995 0009 1B       		.uleb128 0x1b
 996 000a 0E       		.uleb128 0xe
 997 000b 55       		.uleb128 0x55
 998 000c 17       		.uleb128 0x17
 999 000d 11       		.uleb128 0x11
 1000 000e 01       		.uleb128 0x1
 1001 000f 10       		.uleb128 0x10
 1002 0010 17       		.uleb128 0x17
 1003 0011 00       		.byte	0
 1004 0012 00       		.byte	0
 1005 0013 02       		.uleb128 0x2
 1006 0014 24       		.uleb128 0x24
 1007 0015 00       		.byte	0
 1008 0016 0B       		.uleb128 0xb
 1009 0017 0B       		.uleb128 0xb
 1010 0018 3E       		.uleb128 0x3e
 1011 0019 0B       		.uleb128 0xb
 1012 001a 03       		.uleb128 0x3
 1013 001b 0E       		.uleb128 0xe
 1014 001c 00       		.byte	0
 1015 001d 00       		.byte	0
 1016 001e 03       		.uleb128 0x3
 1017 001f 24       		.uleb128 0x24
 1018 0020 00       		.byte	0
 1019 0021 0B       		.uleb128 0xb
 1020 0022 0B       		.uleb128 0xb
 1021 0023 3E       		.uleb128 0x3e
 1022 0024 0B       		.uleb128 0xb
 1023 0025 03       		.uleb128 0x3
 1024 0026 08       		.uleb128 0x8
 1025 0027 00       		.byte	0
ARM GAS  e:\temp\cciA1G8G.s 			page 34


 1026 0028 00       		.byte	0
 1027 0029 04       		.uleb128 0x4
 1028 002a 16       		.uleb128 0x16
 1029 002b 00       		.byte	0
 1030 002c 03       		.uleb128 0x3
 1031 002d 0E       		.uleb128 0xe
 1032 002e 3A       		.uleb128 0x3a
 1033 002f 0B       		.uleb128 0xb
 1034 0030 3B       		.uleb128 0x3b
 1035 0031 05       		.uleb128 0x5
 1036 0032 49       		.uleb128 0x49
 1037 0033 13       		.uleb128 0x13
 1038 0034 00       		.byte	0
 1039 0035 00       		.byte	0
 1040 0036 05       		.uleb128 0x5
 1041 0037 35       		.uleb128 0x35
 1042 0038 00       		.byte	0
 1043 0039 49       		.uleb128 0x49
 1044 003a 13       		.uleb128 0x13
 1045 003b 00       		.byte	0
 1046 003c 00       		.byte	0
 1047 003d 06       		.uleb128 0x6
 1048 003e 13       		.uleb128 0x13
 1049 003f 01       		.byte	0x1
 1050 0040 03       		.uleb128 0x3
 1051 0041 0E       		.uleb128 0xe
 1052 0042 0B       		.uleb128 0xb
 1053 0043 0B       		.uleb128 0xb
 1054 0044 3A       		.uleb128 0x3a
 1055 0045 0B       		.uleb128 0xb
 1056 0046 3B       		.uleb128 0x3b
 1057 0047 0B       		.uleb128 0xb
 1058 0048 01       		.uleb128 0x1
 1059 0049 13       		.uleb128 0x13
 1060 004a 00       		.byte	0
 1061 004b 00       		.byte	0
 1062 004c 07       		.uleb128 0x7
 1063 004d 0D       		.uleb128 0xd
 1064 004e 00       		.byte	0
 1065 004f 03       		.uleb128 0x3
 1066 0050 0E       		.uleb128 0xe
 1067 0051 3A       		.uleb128 0x3a
 1068 0052 0B       		.uleb128 0xb
 1069 0053 3B       		.uleb128 0x3b
 1070 0054 0B       		.uleb128 0xb
 1071 0055 49       		.uleb128 0x49
 1072 0056 13       		.uleb128 0x13
 1073 0057 38       		.uleb128 0x38
 1074 0058 0B       		.uleb128 0xb
 1075 0059 00       		.byte	0
 1076 005a 00       		.byte	0
 1077 005b 08       		.uleb128 0x8
 1078 005c 01       		.uleb128 0x1
 1079 005d 01       		.byte	0x1
 1080 005e 49       		.uleb128 0x49
 1081 005f 13       		.uleb128 0x13
 1082 0060 01       		.uleb128 0x1
ARM GAS  e:\temp\cciA1G8G.s 			page 35


 1083 0061 13       		.uleb128 0x13
 1084 0062 00       		.byte	0
 1085 0063 00       		.byte	0
 1086 0064 09       		.uleb128 0x9
 1087 0065 21       		.uleb128 0x21
 1088 0066 00       		.byte	0
 1089 0067 49       		.uleb128 0x49
 1090 0068 13       		.uleb128 0x13
 1091 0069 2F       		.uleb128 0x2f
 1092 006a 0B       		.uleb128 0xb
 1093 006b 00       		.byte	0
 1094 006c 00       		.byte	0
 1095 006d 0A       		.uleb128 0xa
 1096 006e 16       		.uleb128 0x16
 1097 006f 00       		.byte	0
 1098 0070 03       		.uleb128 0x3
 1099 0071 0E       		.uleb128 0xe
 1100 0072 3A       		.uleb128 0x3a
 1101 0073 0B       		.uleb128 0xb
 1102 0074 3B       		.uleb128 0x3b
 1103 0075 0B       		.uleb128 0xb
 1104 0076 49       		.uleb128 0x49
 1105 0077 13       		.uleb128 0x13
 1106 0078 00       		.byte	0
 1107 0079 00       		.byte	0
 1108 007a 0B       		.uleb128 0xb
 1109 007b 2E       		.uleb128 0x2e
 1110 007c 01       		.byte	0x1
 1111 007d 03       		.uleb128 0x3
 1112 007e 0E       		.uleb128 0xe
 1113 007f 3A       		.uleb128 0x3a
 1114 0080 0B       		.uleb128 0xb
 1115 0081 3B       		.uleb128 0x3b
 1116 0082 05       		.uleb128 0x5
 1117 0083 27       		.uleb128 0x27
 1118 0084 19       		.uleb128 0x19
 1119 0085 49       		.uleb128 0x49
 1120 0086 13       		.uleb128 0x13
 1121 0087 11       		.uleb128 0x11
 1122 0088 01       		.uleb128 0x1
 1123 0089 12       		.uleb128 0x12
 1124 008a 06       		.uleb128 0x6
 1125 008b 40       		.uleb128 0x40
 1126 008c 18       		.uleb128 0x18
 1127 008d 9742     		.uleb128 0x2117
 1128 008f 19       		.uleb128 0x19
 1129 0090 01       		.uleb128 0x1
 1130 0091 13       		.uleb128 0x13
 1131 0092 00       		.byte	0
 1132 0093 00       		.byte	0
 1133 0094 0C       		.uleb128 0xc
 1134 0095 34       		.uleb128 0x34
 1135 0096 00       		.byte	0
 1136 0097 03       		.uleb128 0x3
 1137 0098 0E       		.uleb128 0xe
 1138 0099 3A       		.uleb128 0x3a
 1139 009a 0B       		.uleb128 0xb
ARM GAS  e:\temp\cciA1G8G.s 			page 36


 1140 009b 3B       		.uleb128 0x3b
 1141 009c 05       		.uleb128 0x5
 1142 009d 49       		.uleb128 0x49
 1143 009e 13       		.uleb128 0x13
 1144 009f 02       		.uleb128 0x2
 1145 00a0 17       		.uleb128 0x17
 1146 00a1 00       		.byte	0
 1147 00a2 00       		.byte	0
 1148 00a3 0D       		.uleb128 0xd
 1149 00a4 34       		.uleb128 0x34
 1150 00a5 00       		.byte	0
 1151 00a6 03       		.uleb128 0x3
 1152 00a7 0E       		.uleb128 0xe
 1153 00a8 3A       		.uleb128 0x3a
 1154 00a9 0B       		.uleb128 0xb
 1155 00aa 3B       		.uleb128 0x3b
 1156 00ab 05       		.uleb128 0x5
 1157 00ac 49       		.uleb128 0x49
 1158 00ad 13       		.uleb128 0x13
 1159 00ae 02       		.uleb128 0x2
 1160 00af 18       		.uleb128 0x18
 1161 00b0 00       		.byte	0
 1162 00b1 00       		.byte	0
 1163 00b2 0E       		.uleb128 0xe
 1164 00b3 2E       		.uleb128 0x2e
 1165 00b4 01       		.byte	0x1
 1166 00b5 3F       		.uleb128 0x3f
 1167 00b6 19       		.uleb128 0x19
 1168 00b7 03       		.uleb128 0x3
 1169 00b8 0E       		.uleb128 0xe
 1170 00b9 3A       		.uleb128 0x3a
 1171 00ba 0B       		.uleb128 0xb
 1172 00bb 3B       		.uleb128 0x3b
 1173 00bc 0B       		.uleb128 0xb
 1174 00bd 27       		.uleb128 0x27
 1175 00be 19       		.uleb128 0x19
 1176 00bf 49       		.uleb128 0x49
 1177 00c0 13       		.uleb128 0x13
 1178 00c1 11       		.uleb128 0x11
 1179 00c2 01       		.uleb128 0x1
 1180 00c3 12       		.uleb128 0x12
 1181 00c4 06       		.uleb128 0x6
 1182 00c5 40       		.uleb128 0x40
 1183 00c6 18       		.uleb128 0x18
 1184 00c7 9742     		.uleb128 0x2117
 1185 00c9 19       		.uleb128 0x19
 1186 00ca 01       		.uleb128 0x1
 1187 00cb 13       		.uleb128 0x13
 1188 00cc 00       		.byte	0
 1189 00cd 00       		.byte	0
 1190 00ce 0F       		.uleb128 0xf
 1191 00cf 05       		.uleb128 0x5
 1192 00d0 00       		.byte	0
 1193 00d1 03       		.uleb128 0x3
 1194 00d2 0E       		.uleb128 0xe
 1195 00d3 3A       		.uleb128 0x3a
 1196 00d4 0B       		.uleb128 0xb
ARM GAS  e:\temp\cciA1G8G.s 			page 37


 1197 00d5 3B       		.uleb128 0x3b
 1198 00d6 0B       		.uleb128 0xb
 1199 00d7 49       		.uleb128 0x49
 1200 00d8 13       		.uleb128 0x13
 1201 00d9 02       		.uleb128 0x2
 1202 00da 17       		.uleb128 0x17
 1203 00db 00       		.byte	0
 1204 00dc 00       		.byte	0
 1205 00dd 10       		.uleb128 0x10
 1206 00de 34       		.uleb128 0x34
 1207 00df 00       		.byte	0
 1208 00e0 03       		.uleb128 0x3
 1209 00e1 0E       		.uleb128 0xe
 1210 00e2 3A       		.uleb128 0x3a
 1211 00e3 0B       		.uleb128 0xb
 1212 00e4 3B       		.uleb128 0x3b
 1213 00e5 0B       		.uleb128 0xb
 1214 00e6 49       		.uleb128 0x49
 1215 00e7 13       		.uleb128 0x13
 1216 00e8 02       		.uleb128 0x2
 1217 00e9 18       		.uleb128 0x18
 1218 00ea 00       		.byte	0
 1219 00eb 00       		.byte	0
 1220 00ec 11       		.uleb128 0x11
 1221 00ed 34       		.uleb128 0x34
 1222 00ee 00       		.byte	0
 1223 00ef 03       		.uleb128 0x3
 1224 00f0 0E       		.uleb128 0xe
 1225 00f1 3A       		.uleb128 0x3a
 1226 00f2 0B       		.uleb128 0xb
 1227 00f3 3B       		.uleb128 0x3b
 1228 00f4 0B       		.uleb128 0xb
 1229 00f5 49       		.uleb128 0x49
 1230 00f6 13       		.uleb128 0x13
 1231 00f7 02       		.uleb128 0x2
 1232 00f8 17       		.uleb128 0x17
 1233 00f9 00       		.byte	0
 1234 00fa 00       		.byte	0
 1235 00fb 12       		.uleb128 0x12
 1236 00fc 898201   		.uleb128 0x4109
 1237 00ff 01       		.byte	0x1
 1238 0100 11       		.uleb128 0x11
 1239 0101 01       		.uleb128 0x1
 1240 0102 31       		.uleb128 0x31
 1241 0103 13       		.uleb128 0x13
 1242 0104 01       		.uleb128 0x1
 1243 0105 13       		.uleb128 0x13
 1244 0106 00       		.byte	0
 1245 0107 00       		.byte	0
 1246 0108 13       		.uleb128 0x13
 1247 0109 8A8201   		.uleb128 0x410a
 1248 010c 00       		.byte	0
 1249 010d 02       		.uleb128 0x2
 1250 010e 18       		.uleb128 0x18
 1251 010f 9142     		.uleb128 0x2111
 1252 0111 18       		.uleb128 0x18
 1253 0112 00       		.byte	0
ARM GAS  e:\temp\cciA1G8G.s 			page 38


 1254 0113 00       		.byte	0
 1255 0114 14       		.uleb128 0x14
 1256 0115 898201   		.uleb128 0x4109
 1257 0118 00       		.byte	0
 1258 0119 11       		.uleb128 0x11
 1259 011a 01       		.uleb128 0x1
 1260 011b 31       		.uleb128 0x31
 1261 011c 13       		.uleb128 0x13
 1262 011d 00       		.byte	0
 1263 011e 00       		.byte	0
 1264 011f 15       		.uleb128 0x15
 1265 0120 898201   		.uleb128 0x4109
 1266 0123 01       		.byte	0x1
 1267 0124 11       		.uleb128 0x11
 1268 0125 01       		.uleb128 0x1
 1269 0126 31       		.uleb128 0x31
 1270 0127 13       		.uleb128 0x13
 1271 0128 00       		.byte	0
 1272 0129 00       		.byte	0
 1273 012a 16       		.uleb128 0x16
 1274 012b 0F       		.uleb128 0xf
 1275 012c 00       		.byte	0
 1276 012d 0B       		.uleb128 0xb
 1277 012e 0B       		.uleb128 0xb
 1278 012f 49       		.uleb128 0x49
 1279 0130 13       		.uleb128 0x13
 1280 0131 00       		.byte	0
 1281 0132 00       		.byte	0
 1282 0133 17       		.uleb128 0x17
 1283 0134 26       		.uleb128 0x26
 1284 0135 00       		.byte	0
 1285 0136 49       		.uleb128 0x49
 1286 0137 13       		.uleb128 0x13
 1287 0138 00       		.byte	0
 1288 0139 00       		.byte	0
 1289 013a 18       		.uleb128 0x18
 1290 013b 2E       		.uleb128 0x2e
 1291 013c 01       		.byte	0x1
 1292 013d 3F       		.uleb128 0x3f
 1293 013e 19       		.uleb128 0x19
 1294 013f 03       		.uleb128 0x3
 1295 0140 0E       		.uleb128 0xe
 1296 0141 3A       		.uleb128 0x3a
 1297 0142 0B       		.uleb128 0xb
 1298 0143 3B       		.uleb128 0x3b
 1299 0144 05       		.uleb128 0x5
 1300 0145 27       		.uleb128 0x27
 1301 0146 19       		.uleb128 0x19
 1302 0147 11       		.uleb128 0x11
 1303 0148 01       		.uleb128 0x1
 1304 0149 12       		.uleb128 0x12
 1305 014a 06       		.uleb128 0x6
 1306 014b 40       		.uleb128 0x40
 1307 014c 18       		.uleb128 0x18
 1308 014d 9742     		.uleb128 0x2117
 1309 014f 19       		.uleb128 0x19
 1310 0150 01       		.uleb128 0x1
ARM GAS  e:\temp\cciA1G8G.s 			page 39


 1311 0151 13       		.uleb128 0x13
 1312 0152 00       		.byte	0
 1313 0153 00       		.byte	0
 1314 0154 19       		.uleb128 0x19
 1315 0155 05       		.uleb128 0x5
 1316 0156 00       		.byte	0
 1317 0157 03       		.uleb128 0x3
 1318 0158 0E       		.uleb128 0xe
 1319 0159 3A       		.uleb128 0x3a
 1320 015a 0B       		.uleb128 0xb
 1321 015b 3B       		.uleb128 0x3b
 1322 015c 05       		.uleb128 0x5
 1323 015d 49       		.uleb128 0x49
 1324 015e 13       		.uleb128 0x13
 1325 015f 02       		.uleb128 0x2
 1326 0160 17       		.uleb128 0x17
 1327 0161 00       		.byte	0
 1328 0162 00       		.byte	0
 1329 0163 1A       		.uleb128 0x1a
 1330 0164 2E       		.uleb128 0x2e
 1331 0165 00       		.byte	0
 1332 0166 3F       		.uleb128 0x3f
 1333 0167 19       		.uleb128 0x19
 1334 0168 3C       		.uleb128 0x3c
 1335 0169 19       		.uleb128 0x19
 1336 016a 6E       		.uleb128 0x6e
 1337 016b 0E       		.uleb128 0xe
 1338 016c 03       		.uleb128 0x3
 1339 016d 0E       		.uleb128 0xe
 1340 016e 00       		.byte	0
 1341 016f 00       		.byte	0
 1342 0170 1B       		.uleb128 0x1b
 1343 0171 2E       		.uleb128 0x2e
 1344 0172 00       		.byte	0
 1345 0173 3F       		.uleb128 0x3f
 1346 0174 19       		.uleb128 0x19
 1347 0175 3C       		.uleb128 0x3c
 1348 0176 19       		.uleb128 0x19
 1349 0177 6E       		.uleb128 0x6e
 1350 0178 0E       		.uleb128 0xe
 1351 0179 03       		.uleb128 0x3
 1352 017a 0E       		.uleb128 0xe
 1353 017b 3A       		.uleb128 0x3a
 1354 017c 0B       		.uleb128 0xb
 1355 017d 3B       		.uleb128 0x3b
 1356 017e 0B       		.uleb128 0xb
 1357 017f 00       		.byte	0
 1358 0180 00       		.byte	0
 1359 0181 00       		.byte	0
 1360              		.section	.debug_loc,"",%progbits
 1361              	.Ldebug_loc0:
 1362              	.LLST0:
 1363 0000 02000000 		.4byte	.LVL0
 1364 0004 4C000000 		.4byte	.LVL1
 1365 0008 0200     		.2byte	0x2
 1366 000a 30       		.byte	0x30
 1367 000b 9F       		.byte	0x9f
ARM GAS  e:\temp\cciA1G8G.s 			page 40


 1368 000c 4C000000 		.4byte	.LVL1
 1369 0010 64000000 		.4byte	.LFE2
 1370 0014 0100     		.2byte	0x1
 1371 0016 50       		.byte	0x50
 1372 0017 00000000 		.4byte	0
 1373 001b 00000000 		.4byte	0
 1374              	.LLST1:
 1375 001f 00000000 		.4byte	.LVL2
 1376 0023 42000000 		.4byte	.LVL3
 1377 0027 0200     		.2byte	0x2
 1378 0029 30       		.byte	0x30
 1379 002a 9F       		.byte	0x9f
 1380 002b 42000000 		.4byte	.LVL3
 1381 002f 54000000 		.4byte	.LFE3
 1382 0033 0100     		.2byte	0x1
 1383 0035 50       		.byte	0x50
 1384 0036 00000000 		.4byte	0
 1385 003a 00000000 		.4byte	0
 1386              	.LLST2:
 1387 003e 02000000 		.4byte	.LVL4
 1388 0042 4C000000 		.4byte	.LVL5
 1389 0046 0200     		.2byte	0x2
 1390 0048 30       		.byte	0x30
 1391 0049 9F       		.byte	0x9f
 1392 004a 4C000000 		.4byte	.LVL5
 1393 004e 64000000 		.4byte	.LFE4
 1394 0052 0100     		.2byte	0x1
 1395 0054 50       		.byte	0x50
 1396 0055 00000000 		.4byte	0
 1397 0059 00000000 		.4byte	0
 1398              	.LLST3:
 1399 005d 00000000 		.4byte	.LVL6
 1400 0061 1C000000 		.4byte	.LVL7
 1401 0065 0100     		.2byte	0x1
 1402 0067 50       		.byte	0x50
 1403 0068 1C000000 		.4byte	.LVL7
 1404 006c 98000000 		.4byte	.LVL13
 1405 0070 0100     		.2byte	0x1
 1406 0072 54       		.byte	0x54
 1407 0073 98000000 		.4byte	.LVL13
 1408 0077 FA000000 		.4byte	.LVL16
 1409 007b 0400     		.2byte	0x4
 1410 007d F3       		.byte	0xf3
 1411 007e 01       		.uleb128 0x1
 1412 007f 50       		.byte	0x50
 1413 0080 9F       		.byte	0x9f
 1414 0081 FA000000 		.4byte	.LVL16
 1415 0085 FE000000 		.4byte	.LVL17
 1416 0089 0100     		.2byte	0x1
 1417 008b 50       		.byte	0x50
 1418 008c FE000000 		.4byte	.LVL17
 1419 0090 20010000 		.4byte	.LFE0
 1420 0094 0400     		.2byte	0x4
 1421 0096 F3       		.byte	0xf3
 1422 0097 01       		.uleb128 0x1
 1423 0098 50       		.byte	0x50
 1424 0099 9F       		.byte	0x9f
ARM GAS  e:\temp\cciA1G8G.s 			page 41


 1425 009a 00000000 		.4byte	0
 1426 009e 00000000 		.4byte	0
 1427              	.LLST4:
 1428 00a2 00000000 		.4byte	.LVL6
 1429 00a6 1F000000 		.4byte	.LVL8-1
 1430 00aa 0100     		.2byte	0x1
 1431 00ac 51       		.byte	0x51
 1432 00ad 1F000000 		.4byte	.LVL8-1
 1433 00b1 FA000000 		.4byte	.LVL16
 1434 00b5 0400     		.2byte	0x4
 1435 00b7 F3       		.byte	0xf3
 1436 00b8 01       		.uleb128 0x1
 1437 00b9 51       		.byte	0x51
 1438 00ba 9F       		.byte	0x9f
 1439 00bb FA000000 		.4byte	.LVL16
 1440 00bf FE000000 		.4byte	.LVL17
 1441 00c3 0100     		.2byte	0x1
 1442 00c5 51       		.byte	0x51
 1443 00c6 FE000000 		.4byte	.LVL17
 1444 00ca 20010000 		.4byte	.LFE0
 1445 00ce 0400     		.2byte	0x4
 1446 00d0 F3       		.byte	0xf3
 1447 00d1 01       		.uleb128 0x1
 1448 00d2 51       		.byte	0x51
 1449 00d3 9F       		.byte	0x9f
 1450 00d4 00000000 		.4byte	0
 1451 00d8 00000000 		.4byte	0
 1452              	.LLST5:
 1453 00dc 78000000 		.4byte	.LVL10
 1454 00e0 FA000000 		.4byte	.LVL16
 1455 00e4 0100     		.2byte	0x1
 1456 00e6 55       		.byte	0x55
 1457 00e7 00000000 		.4byte	0
 1458 00eb 00000000 		.4byte	0
 1459              	.LLST6:
 1460 00ef 00000000 		.4byte	.LVL18
 1461 00f3 07000000 		.4byte	.LVL19-1
 1462 00f7 0100     		.2byte	0x1
 1463 00f9 50       		.byte	0x50
 1464 00fa 07000000 		.4byte	.LVL19-1
 1465 00fe 4E000000 		.4byte	.LVL23
 1466 0102 0100     		.2byte	0x1
 1467 0104 54       		.byte	0x54
 1468 0105 4E000000 		.4byte	.LVL23
 1469 0109 54000000 		.4byte	.LFE1
 1470 010d 0400     		.2byte	0x4
 1471 010f F3       		.byte	0xf3
 1472 0110 01       		.uleb128 0x1
 1473 0111 50       		.byte	0x50
 1474 0112 9F       		.byte	0x9f
 1475 0113 00000000 		.4byte	0
 1476 0117 00000000 		.4byte	0
 1477              	.LLST7:
 1478 011b 0A000000 		.4byte	.LVL20
 1479 011f 4E000000 		.4byte	.LVL24
 1480 0123 0100     		.2byte	0x1
 1481 0125 55       		.byte	0x55
ARM GAS  e:\temp\cciA1G8G.s 			page 42


 1482 0126 00000000 		.4byte	0
 1483 012a 00000000 		.4byte	0
 1484              		.section	.debug_aranges,"",%progbits
 1485 0000 3C000000 		.4byte	0x3c
 1486 0004 0200     		.2byte	0x2
 1487 0006 00000000 		.4byte	.Ldebug_info0
 1488 000a 04       		.byte	0x4
 1489 000b 00       		.byte	0
 1490 000c 0000     		.2byte	0
 1491 000e 0000     		.2byte	0
 1492 0010 00000000 		.4byte	.LFB2
 1493 0014 64000000 		.4byte	.LFE2-.LFB2
 1494 0018 00000000 		.4byte	.LFB3
 1495 001c 54000000 		.4byte	.LFE3-.LFB3
 1496 0020 00000000 		.4byte	.LFB4
 1497 0024 64000000 		.4byte	.LFE4-.LFB4
 1498 0028 00000000 		.4byte	.LFB0
 1499 002c 20010000 		.4byte	.LFE0-.LFB0
 1500 0030 00000000 		.4byte	.LFB1
 1501 0034 54000000 		.4byte	.LFE1-.LFB1
 1502 0038 00000000 		.4byte	0
 1503 003c 00000000 		.4byte	0
 1504              		.section	.debug_ranges,"",%progbits
 1505              	.Ldebug_ranges0:
 1506 0000 00000000 		.4byte	.LFB2
 1507 0004 64000000 		.4byte	.LFE2
 1508 0008 00000000 		.4byte	.LFB3
 1509 000c 54000000 		.4byte	.LFE3
 1510 0010 00000000 		.4byte	.LFB4
 1511 0014 64000000 		.4byte	.LFE4
 1512 0018 00000000 		.4byte	.LFB0
 1513 001c 20010000 		.4byte	.LFE0
 1514 0020 00000000 		.4byte	.LFB1
 1515 0024 54000000 		.4byte	.LFE1
 1516 0028 00000000 		.4byte	0
 1517 002c 00000000 		.4byte	0
 1518              		.section	.debug_line,"",%progbits
 1519              	.Ldebug_line0:
 1520 0000 79010000 		.section	.debug_str,"MS",%progbits,1
 1520      02005C00 
 1520      00000201 
 1520      FB0E0D00 
 1520      01010101 
 1521              	.LASF15:
 1522 0000 63797374 		.ascii	"cystatus\000"
 1522      61747573 
 1522      00
 1523              	.LASF16:
 1524 0009 72656733 		.ascii	"reg32\000"
 1524      3200
 1525              	.LASF20:
 1526 000f 72657456 		.ascii	"retValue\000"
 1526      616C7565 
 1526      00
 1527              	.LASF25:
 1528 0018 726F774E 		.ascii	"rowNum\000"
 1528      756D00
ARM GAS  e:\temp\cciA1G8G.s 			page 43


 1529              	.LASF27:
 1530 001f 636C6B43 		.ascii	"clkCnfRetValue\000"
 1530      6E665265 
 1530      7456616C 
 1530      756500
 1531              	.LASF37:
 1532 002e 63795379 		.ascii	"cySysFlashClockBackupStruct\000"
 1532      73466C61 
 1532      7368436C 
 1532      6F636B42 
 1532      61636B75 
 1533              	.LASF30:
 1534 004a 63795379 		.ascii	"cySysFlashBackup\000"
 1534      73466C61 
 1534      73684261 
 1534      636B7570 
 1534      00
 1535              	.LASF3:
 1536 005b 73686F72 		.ascii	"short unsigned int\000"
 1536      7420756E 
 1536      7369676E 
 1536      65642069 
 1536      6E7400
 1537              	.LASF8:
 1538 006e 756E7369 		.ascii	"unsigned int\000"
 1538      676E6564 
 1538      20696E74 
 1538      00
 1539              	.LASF12:
 1540 007b 666C6F61 		.ascii	"float\000"
 1540      7400
 1541              	.LASF7:
 1542 0081 6C6F6E67 		.ascii	"long long unsigned int\000"
 1542      206C6F6E 
 1542      6720756E 
 1542      7369676E 
 1542      65642069 
 1543              	.LASF1:
 1544 0098 756E7369 		.ascii	"unsigned char\000"
 1544      676E6564 
 1544      20636861 
 1544      7200
 1545              	.LASF26:
 1546 00a6 726F7744 		.ascii	"rowData\000"
 1546      61746100 
 1547              	.LASF21:
 1548 00ae 70617261 		.ascii	"parameters\000"
 1548      6D657465 
 1548      727300
 1549              	.LASF5:
 1550 00b9 6C6F6E67 		.ascii	"long unsigned int\000"
 1550      20756E73 
 1550      69676E65 
 1550      6420696E 
 1550      7400
 1551              	.LASF9:
 1552 00cb 75696E74 		.ascii	"uint8\000"
ARM GAS  e:\temp\cciA1G8G.s 			page 44


 1552      3800
 1553              	.LASF13:
 1554 00d1 646F7562 		.ascii	"double\000"
 1554      6C6500
 1555              	.LASF2:
 1556 00d8 73686F72 		.ascii	"short int\000"
 1556      7420696E 
 1556      7400
 1557              	.LASF10:
 1558 00e2 75696E74 		.ascii	"uint16\000"
 1558      313600
 1559              	.LASF11:
 1560 00e9 75696E74 		.ascii	"uint32\000"
 1560      333200
 1561              	.LASF31:
 1562 00f0 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1562      74657243 
 1562      72697469 
 1562      63616C53 
 1562      65637469 
 1563              	.LASF35:
 1564 0107 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyFlash.c\000"
 1564      72617465 
 1564      645F536F 
 1564      75726365 
 1564      5C50536F 
 1565              	.LASF32:
 1566 0128 43794578 		.ascii	"CyExitCriticalSection\000"
 1566      69744372 
 1566      69746963 
 1566      616C5365 
 1566      6374696F 
 1567              	.LASF28:
 1568 013e 696E7465 		.ascii	"interruptState\000"
 1568      72727570 
 1568      74537461 
 1568      746500
 1569              	.LASF33:
 1570 014d 43794861 		.ascii	"CyHalt\000"
 1570      6C7400
 1571              	.LASF18:
 1572 0154 73697A65 		.ascii	"sizetype\000"
 1572      74797065 
 1572      00
 1573              	.LASF6:
 1574 015d 6C6F6E67 		.ascii	"long long int\000"
 1574      206C6F6E 
 1574      6720696E 
 1574      7400
 1575              	.LASF41:
 1576 016b 6D656D63 		.ascii	"memcpy\000"
 1576      707900
 1577              	.LASF36:
 1578 0172 433A5C55 		.ascii	"C:\\Users\\Admin\\Desktop\\_FIRMWARE\\DBARLite\\CYP"
 1578      73657273 
 1578      5C41646D 
 1578      696E5C44 
ARM GAS  e:\temp\cciA1G8G.s 			page 45


 1578      65736B74 
 1579 019f 44353232 		.ascii	"D5225\\CYPD5225-96BZXI_notebook\\CYPD5225-96BZXI_no"
 1579      355C4359 
 1579      50443532 
 1579      32352D39 
 1579      36425A58 
 1580 01d0 7465626F 		.ascii	"tebook.cydsn\\noboot.cydsn\000"
 1580      6F6B2E63 
 1580      7964736E 
 1580      5C6E6F62 
 1580      6F6F742E 
 1581              	.LASF29:
 1582 01ea 66726571 		.ascii	"freq\000"
 1582      00
 1583              	.LASF38:
 1584 01ef 636C6F63 		.ascii	"clockSettings\000"
 1584      6B536574 
 1584      74696E67 
 1584      7300
 1585              	.LASF23:
 1586 01fd 43795379 		.ascii	"CySysFlashClockConfig\000"
 1586      73466C61 
 1586      7368436C 
 1586      6F636B43 
 1586      6F6E6669 
 1587              	.LASF24:
 1588 0213 43795379 		.ascii	"CySysFlashClockRestore\000"
 1588      73466C61 
 1588      7368436C 
 1588      6F636B52 
 1588      6573746F 
 1589              	.LASF22:
 1590 022a 43795379 		.ascii	"CySysFlashClockBackup\000"
 1590      73466C61 
 1590      7368436C 
 1590      6F636B42 
 1590      61636B75 
 1591              	.LASF19:
 1592 0240 43595F53 		.ascii	"CY_SYS_FLASH_CLOCK_BACKUP_STRUCT\000"
 1592      59535F46 
 1592      4C415348 
 1592      5F434C4F 
 1592      434B5F42 
 1593              	.LASF4:
 1594 0261 6C6F6E67 		.ascii	"long int\000"
 1594      20696E74 
 1594      00
 1595              	.LASF14:
 1596 026a 63686172 		.ascii	"char\000"
 1596      00
 1597              	.LASF17:
 1598 026f 6C6F6E67 		.ascii	"long double\000"
 1598      20646F75 
 1598      626C6500 
 1599              	.LASF0:
 1600 027b 7369676E 		.ascii	"signed char\000"
 1600      65642063 
ARM GAS  e:\temp\cciA1G8G.s 			page 46


 1600      68617200 
 1601              	.LASF39:
 1602 0287 43795379 		.ascii	"CySysFlashWriteRow\000"
 1602      73466C61 
 1602      73685772 
 1602      69746552 
 1602      6F7700
 1603              	.LASF40:
 1604 029a 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 1604      73466C61 
 1604      73685365 
 1604      74576169 
 1604      74437963 
 1605              	.LASF34:
 1606 02b2 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1606      43313120 
 1606      352E342E 
 1606      31203230 
 1606      31363036 
 1607 02e5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1607      20726576 
 1607      6973696F 
 1607      6E203233 
 1607      37373135 
 1608 0318 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects -finline-fu"
 1608      66756E63 
 1608      74696F6E 
 1608      2D736563 
 1608      74696F6E 
 1609 034b 6E637469 		.ascii	"nctions -fno-strict-aliasing\000"
 1609      6F6E7320 
 1609      2D666E6F 
 1609      2D737472 
 1609      6963742D 
 1610              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  e:\temp\ccEpTfL0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLFClk.c"
  16              		.text
  17              	.Ltext0:
  18              		.section	.gnu.lto_.profile.62416360,"",%progbits
  19 0000 789C6361 		.ascii	"x\234ca`d`c`\000\222'\030[\030\001\004\300\001["
  19      60646063 
  19      60009227 
  19      185B1801 
  19      04C0015B 
  20              		.text
  21              		.section	.gnu.lto_.icf.62416360,"",%progbits
  22 0000 789C6361 		.ascii	"x\234ca`d\000\2016\006\004\020c\230\375v\312\016.\246"
  22      60640081 
  22      36060410 
  22      6398FD76 
  22      CA0E2EA6 
  23 0014 ED5F2F37 		.ascii	"\355_/7\3633\037\370\371c&\023K\333\347\357\027XX\317"
  23      F3331FF8 
  23      F9632613 
  23      4BDBE7EF 
  23      175858CF 
  24 0028 9CBA7C82 		.ascii	"\234\272|\202\233\355\361\361\011\333\370\331\273/\036"
  24      9BEDF1F1 
  24      09DBF8D9 
  24      BB2F1E
  25 0037 9CCCC4F1 		.ascii	"\234\314\304\361q\346\355i<\234\375\007\016\334\340"
  25      71E6ED69 
  25      3C9CFD07 
  25      0EDCE0
  26 0046 E5BABA71 		.ascii	"\345\272\272q\352\025n\356U\273\317\337f\344\271vc\316"
  26      EA156EEE 
  26      55BBCFDF 
  26      66E4B976 
  26      63CE
  27 0058 5576DE9E 		.ascii	"Uv\336\236\235\263w\263\362\315\375\277\364\004\027"
  27      9DB377B3 
  27      F2CDFDBF 
  27      F40417
  28 0067 FFCFFD27 		.ascii	"\377\317\375'N\362\013l\233\264h\011\267\340\235\355"
  28      4EF20B6C 
  28      9BB46809 
  28      B7E09DED 
  29 0077 FB667209 		.ascii	"\373fr\011\035~\371i1\207\360\327iMK\231E\300v\211\316"
ARM GAS  e:\temp\ccEpTfL0.s 			page 2


  29      1D7EF969 
  29      3187F0D7 
  29      694D4B99 
  29      45C07689 
  30 008c FE76F92E 		.ascii	"\376v\371.\237\330\323\377\377gs3\000\000&ED\264"
  30      9FD8D3FF 
  30      FF677333 
  30      00002645 
  30      44B4
  31              		.text
  32              		.section	.gnu.lto_.jmpfuncs.62416360,"",%progbits
  33 0000 789C45CB 		.ascii	"x\234E\313I\022\202@\024\004\321\367\233F\034P\332\001"
  33      49128240 
  33      1404D1F7 
  33      9B461C50 
  33      DA01
  34 0012 6EE74158 		.ascii	"n\347AX\365\325\365\207\013sU\221QY\205\344\355\317"
  34      F5D5F587 
  34      0B735591 
  34      515985E4 
  34      EDCF
  35 0024 4B89187A 		.ascii	"K\211\030z\037\250\214\034\230~\252\226=\037e\217ov"
  35      1FA88C1C 
  35      987EAA96 
  35      3D1F658F 
  35      6F76
  36 0036 E4C4994B 		.ascii	"\344\304\231KD\364\231+\267\234\013\215;\017\236)V\266"
  36      44F4992B 
  36      B79C0B8D 
  36      3B0F9E29 
  36      56B6
  37 0048 EC7AF301 		.ascii	"\354z\363\001Q+\006x"
  37      512B0678 
  38              		.text
  39              		.section	.gnu.lto_.inline.62416360,"",%progbits
  40 0000 789C6592 		.ascii	"x\234e\222\275J\003A\020\307\377\2637\267\273\271\334"
  40      BD4A0341 
  40      10C7FFB3 
  40      37B7BBB9 
  40      DC
  41 0011 E54E8D82 		.ascii	"\345N\215\202Q\270\263\262\263\264\024+\313t\226vBD"
  41      51B8B3B2 
  41      B3B4142B 
  41      CB749676 
  41      4244
  42 0023 9F41D826 		.ascii	"\237A\330&\240\225\261\261N\247V\266)\203/\240\255`"
  42      A095B1B1 
  42      4EA756B6 
  42      29832FA0 
  42      AD60
  43 0035 21F80222 		.ascii	"!\370\002\")D\020\334\335\220-\262[\314\014\277\371"
  43      294410DC 
  43      DD902DB2 
  43      5BCC0CBF 
  43      F9
  44 0046 1E964170 		.ascii	"\036\226Apo_ \274.\260\331#Bc]I=\271\025PW\273\002\371"
  44      6F5F20BC 
ARM GAS  e:\temp\ccEpTfL0.s 			page 3


  44      2EB0D923 
  44      42635D49 
  44      3DB91550 
  45 005e CF313B77 		.ascii	"\3171;w\002\231\022\204\374\332\203\034\327>\217c\224"
  45      02991284 
  45      FCDA831C 
  45      D73E8F63 
  45      94
  46 006f A29D5954 		.ascii	"\242\235YT\231\313\200$Z\332\242\374\343$ \205\035E"
  46      99CB8024 
  46      5ADAA2FC 
  46      E3242085 
  46      1D45
  47 0081 1ACDE04F 		.ascii	"\032\315\340O\320\315\373lR\314\3040\001\231\353_\320"
  47      D0CDFB6C 
  47      52CCC430 
  47      0199EB5F 
  47      D0
  48 0092 3D6D03CD 		.ascii	"=m\003\315\331B\333\210\357\247\267)\273\010\242O\320"
  48      D942DB88 
  48      EFA7B729 
  48      BB08A24F 
  48      D0
  49 00a3 83E703AF 		.ascii	"\203\347\003\257\251\271\260\376\273\341\363\213r~A"
  49      A9B9B0FE 
  49      BBE1F38B 
  49      727E41
  50 00b2 A0478FCF 		.ascii	"\240G\217\317\275\366\253\220\023\262c\216\346\335\371"
  50      BDF6AB90 
  50      13B2638E 
  50      E6DDF9
  51 00c1 D458D118 		.ascii	"\324X\321\030\301`m\270b\364\272\207\225\337\220\013"
  51      C1606DB8 
  51      62F4BA87 
  51      95DF900B 
  52 00d1 384B8CFA 		.ascii	"8K\214\372\243\276F\312vh\036\327a\350\0268\261H\274"
  52      A3BE46CA 
  52      76681ED7 
  52      61E81638 
  52      B148BC
  53 00e4 96016531 		.ascii	"\226\001e1jC\253\305\021\365\364`\316m\200\357\220\307"
  53      6A43ABC5 
  53      11F5F460 
  53      CE6D80EF 
  53      90C7
  54 00f6 558BB844 		.ascii	"U\213\270D\307\035l\271\204\315\361%\312\370\346U\214"
  54      C71D6CB9 
  54      84CDF125 
  54      CAF8E655 
  54      8C
  55 0107 5662B41A 		.ascii	"Vb\264\032\243\265x\234\365x\234\015d[K\211\224\271"
  55      A3B5789C 
  55      F5789C0D 
  55      645B4B89 
  55      94B9
  56 0119 0F513AF3 		.ascii	"\017Q:\363\037\267\036J\250"
  56      1FB71E4A 
ARM GAS  e:\temp\ccEpTfL0.s 			page 4


  56      A8
  57              		.text
  58              		.section	.gnu.lto_.pureconst.62416360,"",%progbits
  59 0000 789C05C1 		.ascii	"x\234\005\301\213\015\200 \020\005\301G<\021P@\371\030"
  59      8B0D8020 
  59      1005C147 
  59      3C115040 
  59      F918
  60 0012 B21DD87F 		.ascii	"\262\035\330\177\203\316\230\234>ICl\030;\236\203@$"
  60      83CE989C 
  60      3E49436C 
  60      183B9E83 
  60      4024
  61 0024 71729129 		.ascii	"qr\221)Tn\036\032}M{\327\017AA\003\027"
  61      546E1E1A 
  61      7D4D7BD7 
  61      0F414103 
  61      17
  62              		.text
  63              		.section	.gnu.lto_CySysClkIloCompensate.part.0.62416360,"",%progbits
  64 0000 789C9554 		.ascii	"x\234\225T]L\034U\024\276g\356\374,\273\313\002\205"
  64      5D4C1C55 
  64      14BE67EE 
  64      FC2CBBCB 
  64      0285
  65 0012 F2A035C1 		.ascii	"\362\2405\301D\262\366\245\211\211o>\256Q\233\370@\312"
  65      44B2F6A5 
  65      89896F3E 
  65      AE519BF8 
  65      40CA
  66 0024 2B8921CB 		.ascii	"+\211!\313$6E\320]x\340\211\201\335Ehh\2444\200\242"
  66      243645D0 
  66      5D78E089 
  66      81DD4568 
  66      68A43480 
  67 0039 EDA20D52 		.ascii	"\355\242\015RZZXK-\324jW\212P\201BA\332\220h\233\226"
  67      5A5A584B 
  67      2DD46A57 
  67      8A508142 
  67      41DA9068 
  68 004f 52121B8C 		.ascii	"R\022\033\214l\305\026\177\266x\316\275\263t\245\304"
  68      6CC5167F 
  68      B678CEBD 
  68      B374A5C4 
  69 005f C449E6CC 		.ascii	"\304I\346\314\2353\337\367\3159\337\2713*\003F\307\264"
  69      9D33DFF7 
  69      CD39DFB9 
  69      332A0346 
  69      C7B4
  70 0071 CE5804AF 		.ascii	"\316X\004\257Ex\202\203\201\3212\215\013\003\024qU\024"
  70      45788283 
  70      81D1328D 
  70      0B031471 
  70      5514
  71 0083 DEE86596 		.ascii	"\336\350e\226S\245\350\346\240Q\266\316\241\246\026"
  71      53A5E8E6 
  71      A051B6CE 
ARM GAS  e:\temp\ccEpTfL0.s 			page 5


  71      A1A616
  72 0092 1AE872A1 		.ascii	"\032\350r\241\003\320\302r\000\2535\024\256j:\324\302"
  72      03D0C272 
  72      00AB3514 
  72      AE6A3AD4 
  72      C2
  73 00a3 EF4A5281 		.ascii	"\357JR\201\331\360\300'|M\211p\006*\336&\256v\336\365"
  73      D9F0C027 
  73      7C4D8970 
  73      062ADE26 
  73      AE76DEF5 
  74 00b7 D02D4001 		.ascii	"\320-@\001\336~l\3155\031\273{,\253\336\272}\357\363"
  74      DE7E6CCD 
  74      3519BB7B 
  74      2CABDEBA 
  74      7DEFF3
  75 00ca 7D874391 		.ascii	"}\207C\2217\"\\a\033\012\203\023\260\013z`\027\325\325"
  75      37225C61 
  75      1B0A8313 
  75      B00B7A60 
  75      17D5D5
  76 00dd 0BBB89DA 		.ascii	"\013\273\211\332q\354}\027\177\001\030\256\233&g\347"
  76      71EC7D17 
  76      7F0118AE 
  76      9B2667E7 
  77 00ed DDDE6EE2 		.ascii	"\335\336n\342YQ\323\312\210p\016'\201\247\3630\305\340"
  77      5951D3CA 
  77      88700E27 
  77      81A7F330 
  77      C5E0
  78 00ff 1478111D 		.ascii	"\024x\021\035\277|mE\345/\011\346\362\315\350\007\334"
  78      BF7C6D45 
  78      E52F09E6 
  78      F2CDE807 
  78      DC
  79 0110 66260553 		.ascii	"f&\005S\205\276\255L\225\301i\360\022|\250u\260[\347"
  79      85BEAD4C 
  79      95C169F0 
  79      127CA875 
  79      B05BE7
  80 0123 3E410DDD 		.ascii	">A\015\335[o6\012\217\0235\376Ck\326GV<\\\200\325\302"
  80      5B6F360A 
  80      8F1335FE 
  80      436BD647 
  80      563C5C80 
  81 0139 997FD3E9 		.ascii	"\231\177\323\351@tkK_K&/\022\314\311\205\365\223\272"
  81      40746B4B 
  81      5F4B262F 
  81      12CCC985 
  81      F593BA
  82 014c CD9C6DF5 		.ascii	"\315\234m\365\330L\016\003\3332\333\206{\023N^\"\230"
  82      D84C0E03 
  82      DB32DB86 
  82      7B134E5E 
  82      2298
  83 015e BF26FFEE 		.ascii	"\277&\377\356p\332\314\213sn\253\245\316A\304/\266%"
  83      70DACC8B 
ARM GAS  e:\temp\ccEpTfL0.s 			page 6


  83      736EABA5 
  83      CE41C42F 
  83      B625
  84 0170 2EFD7229 		.ascii	".\375r)j\360\367\004\361L\327_\313\334&^xB\034\334\226"
  84      6AF0F704 
  84      F14CD75F 
  84      CBDC265E 
  84      78421CDC 
  85 0185 B8187BDC 		.ascii	"\270\030{\334\226\251\207-<\012\340\034\024\302Y<cx"
  85      96A9872D 
  85      3C0AE01C 
  85      14C2593C 
  85      6378
  86 0197 F643210D 		.ascii	"\366C!\015\003g\360%\350\270c\264&4\265\337~H \004\367"
  86      0367F025 
  86      E8B863B4 
  86      2634B5DF 
  86      7E482004 
  87 01ac EFB3AC8D 		.ascii	"\357\263\254\215\215\220\325rj\017<\003@\236+\350\241"
  87      8D90D572 
  87      6A0F3C03 
  87      409E2BE8 
  87      A1
  88 01bd C629A093 		.ascii	"\306)\240\223\010\323h\251S0(8(dPpRpQp3\322\312\244"
  88      08D368A9 
  88      53302838 
  88      28645070 
  88      52705170 
  89 01d5 A5874216 		.ascii	"\245\207B\026\205l\0129\024vP\310\025\230<\021w\002"
  89      856C0A39 
  89      147650C8 
  89      15983C11 
  89      7702
  90 01e7 8D285F54 		.ascii	"\215(_T\303\330*\326H\033pU1\350\312\023\212\"\256\313"
  90      C3D82AD6 
  90      481B7055 
  90      31E8CA13 
  90      8A22AECB 
  91 01fb 10EA6C78 		.ascii	"\020\352lx8\375\030\250\376\020WB\034\260\335\211\343"
  91      38FD18A8 
  91      FE105742 
  91      1CB0DD89 
  91      E3
  92 020c 0F4734DA 		.ascii	"\017G4\332\204\032,18\217> \256\275\341\247g%\212#\020"
  92      841A2C31 
  92      388F3E20 
  92      AEBDE1A7 
  92      67258A23 
  93 0221 51E7070F 		.ascii	"Q\347\007\017Oy$*\241\302\220D\0154\254i\022\245\"\020"
  93      4F79242A 
  93      A1C29044 
  93      0D34AC69 
  93      12A52210 
  94 0235 51F58947 		.ascii	"Q\365\211GG\335\0225\232\013\303\210Z\004E\270\205}"
  94      47DD1235 
  94      9A0BC388 
  94      5A0445B8 
ARM GAS  e:\temp\ccEpTfL0.s 			page 7


  94      857D
  95 0247 238ADD81 		.ascii	"#\212\335\201\360B\350n\317+6\013)\007\333\016\235\260"
  95      F042E86E 
  95      CF2B360B 
  95      2907DB0E 
  95      9DB0
  96 0259 5F7FFB33 		.ascii	"_\177\3733\016\027\3549$\024\316\032\275X\362\310\237"
  96      0E17EC39 
  96      2414CE1A 
  96      BD58F2C8 
  96      9F
  97 026a 076FCCDC 		.ascii	"\007o\314\334\262K\326\220\320\036\031\2311\210\240"
  97      B24BD690 
  97      D01E1999 
  97      3188A0
  98 0279 8BD1FEB1 		.ascii	"\213\321\376\261q\372\210C\336vY\315\026Iv\034\232\217"
  98      71FA8843 
  98      DE7659CD 
  98      1649761C 
  98      9A8F
  99 028b F2281CAD 		.ascii	"\362(\034\255\013\327Y\331\021n\300E\034\360W$\014_"
  99      0BD759D9 
  99      116EC045 
  99      1CF05724 
  99      0C5F
 100 029d 4314B0F2 		.ascii	"C\024\260\362\372\366;WmI=]R\025\222\303\303+?\032\265"
 100      FAF63B57 
 100      6D493D5D 
 100      521592C3 
 100      C32B3F1A 
 101 02b2 49ABD122 		.ascii	"I\253\321\"\272\332\304A\354\213\373S\327G\235$k\211"
 101      BADAC441 
 101      EC8BFB53 
 101      D7479D24 
 101      6B89
 102 02c4 3C874BF8 		.ascii	"<\207K\370Y\177#d\343R6\324\251KQ\003KEiJ=hXyN&\035"
 102      597F2364 
 102      E35236D4 
 102      A94B5103 
 102      4B45694A 
 103 02df F265C9D5 		.ascii	"\362e\311\325kI\333#'|\2332r\311\266;C\220\0352ykf\316"
 103      6B49DB23 
 103      277C9B32 
 103      72C9B63B 
 103      43901D32 
 104 02f7 1674E213 		.ascii	"\026t\342\023\372C\374v\363\347\014\311}\021FR\334\345"
 104      FA43FC76 
 104      F3E70CC9 
 104      7D114652 
 104      DCE5
 105 0309 99411BE6 		.ascii	"\231A\033\346\222c\270\322zl\257DuM~\010pY\002;\033"
 105      9263B8D2 
 105      7A6CAF44 
 105      754D7E08 
 105      7059023B 
 106 031e 6ECCCCDB 		.ascii	"n\314\314\333]\273\205\244ks<\347h<n\341\273\272\351"
 106      5DBB85A4 
ARM GAS  e:\temp\ccEpTfL0.s 			page 8


 106      6B733CE7 
 106      683C6EE1 
 106      BBBAE9
 107 0331 FBD842CA 		.ascii	"\373\330B\312\367\314\377vu\364)W=\377\303\306\3576"
 107      F7CCFF76 
 107      75F42957 
 107      3DFFC3C6 
 107      EF36
 108 0343 6D1CDB62 		.ascii	"m\034\333bc\026\276\031\265\244\215\323\013\251t6\346"
 108      6316BE19 
 108      B5A48DD3 
 108      0BA97436 
 108      E6
 109 0354 9E3837B6 		.ascii	"\23687\266\260n\347s\004#[\366\212pC\246w\210\355\231"
 109      B06EE773 
 109      04235BF6 
 109      8A7043A6 
 109      7788ED99 
 110 0368 9342A72C 		.ascii	"\223B\247,\310\305'XNw\354\323n{\034\361!\005\306\323"
 110      C8C52758 
 110      4E77ECD3 
 110      6E7B1CF1 
 110      2105C6D3 
 111 037c F6AC3025 		.ascii	"\366\2540%W\230\242\211\017h\021\352\263\231L\347\211"
 111      5798A289 
 111      0F6811EA 
 111      B3994CE7 
 111      89
 112 038d 7E63E311 		.ascii	"~c\343\021\027AQ\347\321\370D\243;\255\255\020\337i"
 112      174151E7 
 112      D1F844A3 
 112      3BADAD10 
 112      DF69
 113 039f 777505BB 		.ascii	"wu\005\273\262\011k\253\343\327S\204\247\354a\333\333"
 113      B2096BAB 
 113      E3D75384 
 113      A7EC61DB 
 113      DB
 114 03b0 F3FDA63D 		.ascii	"\363\375\246=\023(\224\276[\321P\230\024\365\326\307"
 114      132894BE 
 114      5BD15098 
 114      14F5D6C7 
 115 03c0 63ED85A2 		.ascii	"c\355\205\242f\374\001\244C\024\204L\021\371\001\344"
 115      66FC01A4 
 115      4314844C 
 115      11F901E4 
 116 03d0 E180795F 		.ascii	"\341\200y_\264\027+\313U\3031\300\256\364\264\256\372"
 116      B4172BCB 
 116      55C331C0 
 116      AEF4B4AE 
 116      FA
 117 03e1 A9AB7C76 		.ascii	"\251\253|v\037\265\216tx\244E\371\214\210\371\244\240"
 117      1FB58E74 
 117      78A445F9 
 117      8C88F9A4 
 117      A0
 118 03f2 359FED55 		.ascii	"5\237\355U\360\217\002D\301\377\313\363\257\233\025"
ARM GAS  e:\temp\ccEpTfL0.s 			page 9


 118      F08F0244 
 118      C1FFCBF3 
 118      AF9B15
 119 0401 66A0B4CA 		.ascii	"f\240\264\312,{\253\270\262:\3407K\212\212+}/\227\370"
 119      2C7BABB8 
 119      B23AE037 
 119      4B8A8A2B 
 119      7D2F97F8 
 120 0415 6ADE7CCD 		.ascii	"j\336|\315W~`\217\237\271\313\314\340\376\200Y\366\252"
 120      577E608F 
 120      9FB9CBCC 
 120      E0FE8059 
 120      F6AA
 121 0427 595E5A93 		.ascii	"Y^Z\223\343\257|\347]\263\"H\004_\215\277\334\014\272"
 121      E3AF7CE7 
 121      5DB32248 
 121      045F8DBF 
 121      DC0CBA
 122 043a 03665575 		.ascii	"\003fUu\240\242\270\252\264\252:\350\362\277m\372\017"
 122      A0A2B8AA 
 122      B4AA3AE8 
 122      F2BF6DFA 
 122      0F
 123 044b C8755E3A 		.ascii	"\310u^:oo\205\257\262\272\242*\230\267\277\274\322\267"
 123      6F6F85AF 
 123      B2BAA22A 
 123      98B7BFBC 
 123      D2B7
 124 045d 55E21F00 		.ascii	"U\342\037\000\203a:"
 124      83613A
 125              		.text
 126              		.section	.gnu.lto_CySysClkIloStart.62416360,"",%progbits
 127 0000 789C7D90 		.ascii	"x\234}\220\277KBQ\024\307\317\367\\{\271\324?\220C\321"
 127      BF4B4251 
 127      14C7CFF7 
 127      5C7BB9D4 
 127      3F9043D1 
 128 0014 E4520DFD 		.ascii	"\344R\015\375\007\202-\015\221\253\020ao*\022\244\206"
 128      07822D0D 
 128      91AB1061 
 128      6F2A12A4 
 128      86
 129 0025 96BCA68F 		.ascii	"\226\274\246\217\"\032Z\022\022\302Q-\243\202\226\266"
 129      221A5A12 
 129      12C2512D 
 129      A38296B6 
 130 0035 97CDD51C 		.ascii	"\227\315\325\034\024\204\321\033\034\302\240 \202\264"
 130      1484D11B 
 130      1CC2A020 
 130      82B4
 131 0043 73B4B90B 		.ascii	"s\264\271\013\367\236\373\343{\277\237\357\275!\002"
 131      F79EFBE3 
 131      7BBF9FEF 
 131      BD2102
 132 0052 699B9432 		.ascii	"i\233\2242.uD:\014\201\367\357\210ra\006tb\303\240,"
 132      2E75443A 
 132      0C81F7EF 
ARM GAS  e:\temp\ccEpTfL0.s 			page 10


 132      88726106 
 132      7462C3A0 
 133 0067 238B4FFE 		.ascii	"#\213O\376a4\266\203+\216V\254\264\347\327\326\224\255"
 133      6134B683 
 133      2B8E56AC 
 133      B4E7D7D6 
 133      94AD
 134 0079 FAF00C51 		.ascii	"\372\360\014Q\227{N\204\012\242$\262\346E\347`\310)"
 134      977B4E84 
 134      0AA224B2 
 134      E645E760 
 134      C829
 135 008b A86CB47F 		.ascii	"\250l\264\177\210*\034\305\235\315\373\266\333\315["
 135      882A1CC5 
 135      9DCDFBB6 
 135      DBCD5B
 136 009a FFC1B97E 		.ascii	"\377\301\271~t\006\230<#L\031\210\332\242S\342;\263"
 136      7406983C 
 136      234C1988 
 136      DAA253E2 
 136      3BB3
 137 00ac 5613A0F1 		.ascii	"V\023\240\361\275\373V\332\324\253y\243\364\242\327"
 137      BDFB56DA 
 137      D4AB79A3 
 137      F4A2D7
 138 00bb B81FFC60 		.ascii	"\270\037\374`\3170\224\362\342\335\234\233\376\262n"
 138      CF3094F2 
 138      E2DD9C9B 
 138      FEB26E
 139 00ca F76C48B6 		.ascii	"\367lH\266.\017\233\267\303e\034\345\012\222\313\340"
 139      2E0F9BB7 
 139      C3651CE5 
 139      0A92CBE0 
 140 00da 1811D410 		.ascii	"\030\021\324\020\021\374\011\312\240\000\371/\247og"
 140      11FC09CA 
 140      A000F92F 
 140      A76F67
 141 00e9 FE1C3B3B 		.ascii	"\376\034;;%V\013@\303\206Q\027\265\200\213P\331\177"
 141      25560B40 
 141      C3865117 
 141      B5808B50 
 141      D97F
 142 00fb 86A76228 		.ascii	"\206\247b(6\324\302\226\377\024Wu\357\007\332\022M\302"
 142      36D4C296 
 142      FF145775 
 142      EF07DA12 
 142      4DC2
 143 010d CB53C666 		.ascii	"\313S\306f\334U7\263\270\346.-$\322\353\231\224\233"
 143      DC5537B3 
 143      B8E62E2D 
 143      24D2EB99 
 143      949B
 144 011f 9C4BA463 		.ascii	"\234K\244c\323\311\330\306l<\266\262<\221\242_\277X"
 144      D3C9D8C6 
 144      6C3CB6B2 
 144      3C91A25F 
 144      BF58
ARM GAS  e:\temp\ccEpTfL0.s 			page 11


 145 0131 7355     		.ascii	"sU"
 146              		.text
 147              		.section	.gnu.lto_CySysClkIloStop.62416360,"",%progbits
 148 0000 789C6361 		.ascii	"x\234ca`d\000\001\003 \245\014\244\245\201\230\221\231"
 148      60640001 
 148      0320A50C 
 148      A4A58198 
 148      9199
 149 0012 819169C2 		.ascii	"\201\221i\3029\006\206F\016&FF\020\243\201\203\221\241"
 149      39068646 
 149      0E264646 
 149      10A38183 
 149      91A1
 150 0024 9E89B19E 		.ascii	"\236\211\261\236\361+\323_&\306C\355\317v2i.o\000\202"
 150      F12BD35F 
 150      26C643ED 
 150      CF763269 
 150      2E6F0082 
 151 0038 07ADDF0D 		.ascii	"\007\255\337\015\032V\034`lef`\370\317\0046\211\201"
 151      1A561C60 
 151      6C656660 
 151      F8CF0436 
 151      8981
 152 004a 7139A326 		.ascii	"q9\243&\003P\331\243\215\377\246\362\262\265\200\224"
 152      0350D9A3 
 152      8DFFA6F2 
 152      B2B58094 
 153 005a 29402419 		.ascii	")@$\031W0\262\201\254[\037t\240\341\377\377\346\206"
 153      5730B281 
 153      AC5B1F74 
 153      A0E1FFFF 
 153      E686
 154 006c 03BBD90F 		.ascii	"\003\273\331\017\356\343bebhe\006\332\011$\030\030>"
 154      EEE36265 
 154      62686506 
 154      DA092418 
 154      183E
 155 007e 00D5816C 		.ascii	"\000\325\201l\374\310\304\004\242\231\2371\036\372\325"
 155      FCC8C404 
 155      A2999F31 
 155      1EFAD5
 156 008d F56EE534 		.ascii	"\365n\3454F\220\336ff\220\365\323Z\017\235g\377\302"
 156      4690DE66 
 156      6690F5D3 
 156      5A0F9D67 
 156      FFC2
 157 009f D4CACCC4 		.ascii	"\324\312\314\304\010\262\346q\353\341\015\314\020\356"
 157      08B2E671 
 157      EBE10DCC 
 157      10EE
 158 00ad 9A869E06 		.ascii	"\232\206\236\006\026\240\320\226\231\217\316\362\315"
 158      16A0D096 
 158      998FCEF2 
 158      CD
 159 00ba 679CDBD8 		.ascii	"g\234\333\330\002t\0303\343*F\031\306\225\2142@\373"
 159      02741833 
 159      E32A4619 
ARM GAS  e:\temp\ccEpTfL0.s 			page 12


 159      C6958C32 
 159      40FB
 160 00cc 5733CE67 		.ascii	"W3\316gdx\306\330\374\207\015b\0343\304\304\326\336"
 160      6478C6D8 
 160      FC870D62 
 160      1C33C4C4 
 160      D6DE
 161 00de B5D3B940 		.ascii	"\265\323\271@F02\376\007\002v\3065@\325@\233!\266\342"
 161      463032FE 
 161      070276C6 
 161      3540D540 
 161      9B21B6E2 
 162 00f2 33702DD0 		.ascii	"3p-\320@\2401\014\257\030\233\016\354\367\002\251\006"
 162      40A0310C 
 162      AF189B0E 
 162      ECF702A9 
 162      06
 163 0103 07C107A0 		.ascii	"\007\301\007\240\323\200\256\007\372E\321=5/\265(\261"
 163      D380AE07 
 163      FA45D13D 
 163      352FB528 
 163      B1
 164 0114 2435253E 		.ascii	"$5%>8\277\264(95& 8\337\331$\306\271\322\307\3159'["
 164      38BFB428 
 164      39352620 
 164      38DFD924 
 164      C6B9D2C7 
 165 012c 2F990100 		.ascii	"/\231\001\000#\312t\201"
 165      23CA7481 
 166              		.text
 167              		.section	.gnu.lto_CySysClkIloStartMeasurement.62416360,"",%progbits
 168 0000 789C5592 		.ascii	"x\234U\222\317K\033Q\020\307g\336n\223m\322Z\350\325"
 168      CF4B1B51 
 168      10C767DE 
 168      6E936DD2 
 168      5AE8D5
 169 0013 94B678CA 		.ascii	"\224\266x\312\245P\354\177\020\320C=\024s\015\210\330"
 169      A550EC7F 
 169      10D0433D 
 169      14730D88 
 169      D8
 170 0024 9C940682 		.ascii	"\234\224\006\202\025<\371b\\\025\361 \202\301B\333 "
 170      153CF962 
 170      5C15F120 
 170      82C142DB 
 170      20
 171 0035 0492184D 		.ascii	"\004\222\030M\232F\013\245\205lW\241\267\010\322[+\250"
 171      9A460BA5 
 171      856C57A1 
 171      B708D25B 
 171      2BA8
 172 0047 87209ED2 		.ascii	"\207 \236\322\222Z)\325\355\314\276\230\340\203\235"
 172      925A29D5 
 172      EDCCBE98 
 172      E0839D
 173 0056 B73F3EF3 		.ascii	"\267?>\363\375\316\227\267: \360\352\025\000=\264w\323"
 173      FDCE97B7 
ARM GAS  e:\temp\ccEpTfL0.s 			page 13


 173      3A20F0EA 
 173      15003DB4 
 173      77D3
 174 0068 851AA058 		.ascii	"\205\032\240X\252\001$\014\201\3107\322@\230\0228\205"
 174      AA01240C 
 174      81C837D2 
 174      40981238 
 174      85
 175 0079 BFC58540 		.ascii	"\277\305\205@{\256\376Q\004\263\222\326\241\371\341"
 175      7BAEFE51 
 175      04B392D6 
 175      A1F9E1
 176 0088 B1CC5968 		.ascii	"\261\314Yhj\000\216p\225\000\263\030\004\302\216\313"
 176      6A008E70 
 176      9500B318 
 176      04C28ECB 
 177 0098 972BB73D 		.ascii	"\227+\267=3\214=P\0371\207\036\266+\015Z\322q\222\322"
 177      338C3D50 
 177      1F31871E 
 177      B62B0D5A 
 177      D27192D2 
 178 00ac AAF8BF9C 		.ascii	"\252\370\277\234\371}\002L\215<\251\350\\<\\\274\\\014"
 178      F97D024C 
 178      8D3CA9E8 
 178      5C3C5CBC 
 178      5C0C
 179 00be 2E000DEA 		.ascii	".\000\015\352\345)~\012\301\273VG\373\357\302Yq\202"
 179      E5297E0A 
 179      C1BB5647 
 179      FBEFC259 
 179      7182
 180 00d0 E5921A4F 		.ascii	"\345\222\032O\2242\355=oS\230\232@vN\177\337^\353R\217"
 180      9432ED3D 
 180      6F53989A 
 180      40764E7F 
 180      DF5EEB52 
 181 00e5 5B7251EA 		.ascii	"[rQ\352\364\352\307\341\253\035_\032\337$fhV\015\327"
 181      F4EAC7E1 
 181      AB1D5F1A 
 181      DF246668 
 181      560DD7
 182 00f8 3180790C 		.ascii	"1\200y\014\320H\005L#\3241\371o\266yC\011jJs\367\327"
 182      D048054C 
 182      23D431F9 
 182      6FB67943 
 182      096A4A73 
 183 010e E7E35B2C 		.ascii	"\347\343[,\202\350\0349\316\035\334 \236\300\363\331"
 183      82E81C39 
 183      CE1DDC20 
 183      9EC0F3D9 
 184 011e 66B70275 		.ascii	"f\267\002ub\011,\236T_\373\024(\005n\272\224\235Z\013"
 184      62092C9E 
 184      545FFB14 
 184      28056EBA 
 184      949D5A0B 
 185 0132 3074CD39 		.ascii	"0t\3159!\245\377\272y\221\314I\007\334D\265\3222*an"
 185      21A5FFBA 
ARM GAS  e:\temp\ccEpTfL0.s 			page 14


 185      7991CC49 
 185      07DC44B5 
 185      D2322A61 
 186 0147 3BF8B46F 		.ascii	";\370\264o\266\"\255\2662T\336V3z'C\251-\363\256\235"
 186      B622ADB6 
 186      3254DE56 
 186      337A2743 
 186      A92DF3AE 
 187 015c E19B5729 		.ascii	"\341\233W)x\225H!\363\365DW\2435\334\014\345v\206{\012"
 187      78954821 
 187      F3F54457 
 187      A335DC0C 
 187      E576867B 
 188 0171 34882530 		.ascii	"4\210%0_/L\337T\340\374]|\177\225\341~+C\307\371*C\307"
 188      5F2F4CDF 
 188      54E0FC5D 
 188      7C7F95E1 
 188      7E2B43C7 
 189 0189 BCE26630 		.ascii	"\274\342f0\340\024\247\255?O\271\301\375\013\032t\024"
 189      E014A7AD 
 189      3F4FB9C1 
 189      FD0B1A74 
 189      14
 190 019a 74587474 		.ascii	"tXtt\017\373\243/\242\361\341\361\350\363\241p\354e"
 190      0FFBA32F 
 190      A2F1E1F1 
 190      E8F3A170 
 190      EC65
 191 01ac 7C241A79 		.ascii	"|$\032y\026\216\205\236DB\223\003}\241\261\321G#\360"
 191      168E859E 
 191      44429303 
 191      7DA1B1D1 
 191      4723F0
 192 01bf 1F55AACB 		.ascii	"\037U\252\3134"
 192      34
 193              		.text
 194              		.section	.gnu.lto_CySysClkIloStopMeasurement.62416360,"",%progbits
 195 0000 789C7D91 		.ascii	"x\234}\221O/\003Q\024\305\357}\257\035\215P\037@#\304"
 195      4F2F0351 
 195      14C5EF7D 
 195      AF1D8D50 
 195      1F4023C4 
 196 0014 AA1B89C4 		.ascii	"\252\033\211\3047h\302FDt\333D\244fET\032\026V\235j"
 196      3768C246 
 196      4474DB44 
 196      A4664554 
 196      1A16569D 
 197 0029 271291B0 		.ascii	"'\022\221\260\240a\301\220\220\226\242\032\272hH\214"
 197      A061C190 
 197      9096A21A 
 197      BA68488C 
 198 0039 B2AE3F5B 		.ascii	"\262\256?[$\325\305,\254J\260\020\214\373f\032\222&"
 198      24D5C52C 
 198      AC4AB010 
 198      8CFB661A 
 198      9226
 199 004b BCE4DD3B 		.ascii	"\274\344\335;o\346\274\3379\271\343\000\004\261\212"
ARM GAS  e:\temp\ccEpTfL0.s 			page 15


 199      6FE6BCDF 
 199      39B9E300 
 199      04B18A
 200 005a D4DAA937 		.ascii	"\324\332\2517\323F\016\310\026\212\000Q\027C\024\017"
 200      D3460EC8 
 200      168A0051 
 200      1743140F 
 201 006a 8A0B21C2 		.ascii	"\212\013!\3020\202\257\354\223aa\306\3103oR\241U\332"
 201      3082AFEC 
 201      936161C6 
 201      C8336F52 
 201      A155DA
 202 007d 323A9594 		.ascii	"2:\225\224\216*\0070\231E\002L\242\027HV\316~-5Jq!k"
 202      8E2A0730 
 202      9945024C 
 202      A2174856 
 202      CE7E2D35 
 203 0095 B53F620A 		.ascii	"\265?b\012%a\227\031\320\025\323\214)z\316}v\345v1P"
 203      25619719 
 203      D015D38C 
 203      297ACE7D 
 203      76E57631 
 204 00aa 39795271 		.ascii	"9yRq\212\"\211\002P\241\033\302\373\2111\321\271\201"
 204      8A228902 
 204      50A11BC2 
 204      FB8931D1 
 204      B981
 205 00bc 85F75923 		.ascii	"\205\367Y#?. 1.r$\324\302e\335\013S9C\341\247\335\346"
 205      3F2E2031 
 205      2E7224D4 
 205      C265DD0B 
 205      533943E1 
 206 00d3 36DCF6F1 		.ascii	"6\334\366\361H\231S\034\364\352\256\264r^\257\341j4"
 206      4899531C 
 206      F4EAAEB4 
 206      725EAFE1 
 206      6A34
 207 00e5 4E0939EE 		.ascii	"N\0119\356\240\007\267\321CA\322\250!\030\030\373\220"
 207      A007B7D1 
 207      4341D2A8 
 207      211818FB 
 207      90
 208 00f6 6C1CB789 		.ascii	"l\034\267\211\027\317'\345\006\201@4\037L\263\011wI"
 208      17CF27E5 
 208      06814034 
 208      1F4CB309 
 208      7749
 209 0108 4DC60914 		.ascii	"M\306\011\024\262\377\200{\004$\014X)\337\362\213hs"
 209      B2FF807B 
 209      04240C58 
 209      29DFF28B 
 209      6873
 210 011a 9D74E7FE 		.ascii	"\235t\347\376\370F\255\306\\\256\346:\\;\335t\374b\366"
 210      F846ADC6 
 210      5CAEE63A 
 210      5C3BDD74 
 210      FC62F6
ARM GAS  e:\temp\ccEpTfL0.s 			page 16


 211 012d 7F30999A 		.ascii	"\1770\231\232\\UD\272\254\257s;\327|\013\036\324\204"
 211      5C5544BA 
 211      ACAF733B 
 211      D77C0B1E 
 211      D484
 212 013f FA9396B5 		.ascii	"\372\223\226\265BI\360\210\323\372u\237P[?\250B\363"
 212      4249F088 
 212      D3FA759F 
 212      505B3FA8 
 212      42F3
 213 0151 A289D27C 		.ascii	"\242\211\322|\333z\34419<4!\017\017\372C\223\341\240"
 213      DB7AE431 
 213      393C3421 
 213      0F0FFA43 
 213      93E1A0
 214 0164 1CE8F787 		.ascii	"\034\350\367\207|]\001\337To\267ot\244#\010\337\242"
 214      7C5D01DF 
 214      546FB76F 
 214      74A42308 
 214      DFA2
 215 0176 69A73A   		.ascii	"i\247:"
 216              		.text
 217              		.section	.gnu.lto_CySysClkIloCompensate.62416360,"",%progbits
 218 0000 789C8D55 		.ascii	"x\234\215U_L\024G\030\237ofowoo9\321\3324Mhc\023\011"
 218      5F4C1447 
 218      189F6F66 
 218      6F776F6F 
 218      39D1DA34 
 219 0019 31699AB4 		.ascii	"1i\232\264\361\245\351\3435\375\223\364\301\350\253"
 219      F1A5E9E3 
 219      35FD93F4 
 219      C1E8AB
 220 0028 6963F092 		.ascii	"ic\360\222Z\351]\313\237&\364\241,,W\244\265\201b\205"
 220      5AE95DCB 
 220      9F26F4A1 
 220      2C2C57A4 
 220      B5816285 
 221 003c D2520F53 		.ascii	"\322R\017S\257\212\200\200H\341\320\366\016\260\025"
 221      AF8A8080 
 221      48E1D0F6 
 221      0EB015
 222 004b 01515052 		.ascii	"\001QPR[\320((\261\206\246\036\245\211ZO\372\315\314"
 222      5BD02828 
 222      B186A61E 
 222      A5895A4F 
 222      FACDCC
 223 005e E6EEB03C 		.ascii	"\346\356\260<t\223\233\231o\346\367\373\376\317\234"
 223      74939B99 
 223      6FE6F7FB 
 223      FECF9C
 224 006d 4280F0EF 		.ascii	"B\200\360\357Y\215\220\020\316-\370\203,\002\264v\234"
 224      598D9010 
 224      CE2DF883 
 224      2C02B476 
 224      9C
 225 007e 90729D52 		.ascii	"\220r\235R6l\022\3130\207\007\010\261LF\225LQ\241\256"
 225      366C12CB 
ARM GAS  e:\temp\ccEpTfL0.s 			page 17


 225      30870708 
 225      B14C4695 
 225      4C51A1AE 
 226 0092 1B4F72B1 		.ascii	"\033Or\261m3J.\252fH*\325\006_\344\322\370z\2244\252"
 226      6D334A2E 
 226      AA66482A 
 226      D5065FE4 
 226      D2F87A94 
 227 00a8 8B338F38 		.ascii	"\2133\2178\323\251;$\324|:\310\325\270\251\221A4\300"
 227      D3A93B24 
 227      D47C3AC8 
 227      D5B8A991 
 227      4134C0
 228 00bb E4B6C123 		.ascii	"\344\266\301#\347r\335\004\340\013K\007RF\231\342R5"
 228      E772DD04 
 228      E00B4B07 
 228      524699E2 
 228      5235
 229 00cd DD6D784C 		.ascii	"\335mxL(\203\277i\222\302Deg\023[\242!F@A1q\356\253"
 229      2883BF69 
 229      92C24465 
 229      67135BA2 
 229      21464041 
 230 00e5 392F1701 		.ascii	"9/\027\0016\240\370\2655Y\255m:lY\025\326\265\233\337"
 230      36A0F8B5 
 230      3559AD6D 
 230      3A6C5915 
 230      D6B59BDF 
 231 00f9 6DFDDC0E 		.ascii	"m\375\334\016\275\026b\224,S\002G \007\016C\016\017"
 231      BD166294 
 231      2C530247 
 231      20070E43 
 231      0E0F
 232 010b B8053671 		.ascii	"\270\0056qj\303\201*\017\333\010\004\327\325\243\023"
 232      6AC3812A 
 232      0FDB0804 
 232      D7D5A313 
 233 011b 97CCBC08 		.ascii	"\227\314\274\010\347Ya\277\345\0161\006G\201e\362p\213"
 233      E75961BF 
 233      E50E3106 
 233      478165F2 
 233      708B
 234 012d 402BE421 		.ascii	"@+\344!:>taAa\317\013\346\374\225p\015s\230I\301T\240"
 234      3A3E7461 
 234      4161CF0B 
 234      E6FC9570 
 234      0D739849 
 235 0144 ED51A642 		.ascii	"\355Q\246B\240\035\3628\274\257\356DDe>A\265o\336\335"
 235      A01DF238 
 235      BCAFEE44 
 235      44653E41 
 235      B56FDEDD 
 236 0158 ABE57ECB 		.ascii	"\253\345~\313\251\361\213uk\032\255x\345\006\364\026"
 236      A9F18B75 
 236      6B1AAD78 
 236      E506F416 
 237 0168 8EADA4F3 		.ascii	"\216\255\244\363\017\321u\265m\265Yl\213`\216^\276{"
ARM GAS  e:\temp\ccEpTfL0.s 			page 18


 237      0FD175B5 
 237      6DB5596C 
 237      8B608E5E 
 237      BE7B
 238 017a 54759813 		.ascii	"Tu\230\023u^\207\311\240sU\346\376hK\302`\333\005\363"
 238      755E87C9 
 238      A07355E6 
 238      FE684BC2 
 238      60DB05F3 
 239 018e CFE48306 		.ascii	"\317\344\203\006\303a\236\2324\255\332r\235\023\217"
 239      C3619E9A 
 239      34ADDA72 
 239      9D138F
 240 019d AF4ABCF1 		.ascii	"\257J\274\361G,\254\261\367\005\361X\363?\363\314!\366"
 240      472CACB1 
 240      F705F158 
 240      F33FF3CC 
 240      21F6
 241 01af A7892756 		.ascii	"\247\211'V%\316v=\334\237\245VZ\370m\200\036\310\205"
 241      25CE763D 
 241      DC9FA556 
 241      5AF86D80 
 241      1EC885
 242 01c2 6EC8ADC6 		.ascii	"n\310\255\306\364u\341\262\003ry=\260\014\337\203\212"
 242      F475E1B2 
 242      0372793D 
 242      B00CDF83 
 242      8A
 243 01d3 DDC8320E 		.ascii	"\335\3102\016:\266\306\255\345e\333\212G\327\015|\361"
 243      3AB6C6AD 
 243      E565DB8A 
 243      47D70D7C 
 243      F1
 244 01e4 C46340F8 		.ascii	"\304c@\370&\025\243\202it\271\004R\345K\015x1t\340\211"
 244      2615A382 
 244      6974B904 
 244      52E54B0D 
 244      783174E0 
 245 01f9 75F30D83 		.ascii	"u\363\015\203\017\036>x\371\260\006\0075\233\257\010"
 245      0F1E3E78 
 245      F9B00607 
 245      359BAF08 
 246 0209 B983E678 		.ascii	"\271\203\346xO%(\3453\233\207\301\373\237\\\035\371"
 246      4F2528E5 
 246      339B87C1 
 246      FB9F5C1D 
 246      F9
 247 021a 907B6033 		.ascii	"\220{`3\336F\365\241\301\363\032o#M\004\033\236\356"
 247      DE46F5A1 
 247      C1F31A6F 
 247      234D041B 
 247      9EEE
 248 022c 39E895E2 		.ascii	"9\350\225\342\011k\257\305\0213\327\032\207\2140|S^"
 248      096BAFC5 
 248      1133D71A 
 248      878C307C 
 248      535E
ARM GAS  e:\temp\ccEpTfL0.s 			page 19


 249 023e 0921A643 		.ascii	"\011!\246C\037\006\334\313\003\206(\204\201\314\203"
 249      1F06DCCB 
 249      03862884 
 249      81CC83
 250 024d FDE0E331 		.ascii	"\375\340\3431*\025\272\244\316\326\331x\263\350T\027"
 250      2A15BAA4 
 250      CED6D978 
 250      B3E85417 
 251 025d D43C0DFD 		.ascii	"\324<\015\375\010\236\005\201\3401 \212\\\207\312\337"
 251      089E0581 
 251      E031208A 
 251      5C87CADF 
 252 026d EC9311CD 		.ascii	"\354\223\021\315a\361$\337\2125\031\222bQ8\351$4A\031"
 252      61F124DF 
 252      8A351992 
 252      625138E9 
 252      24344119 
 253 0281 1936A5D7 		.ascii	"\0316\245\327\017G^\220p\025\341WNN\206\034\257\277"
 253      0F475E90 
 253      7015E157 
 253      4E4E861C 
 253      AFBF
 254 0293 74DCEC3E 		.ascii	"t\334\354>\020;\244\244\335<\225r\363\007\356\246c1"
 254      103BA4A4 
 254      DD3C9572 
 254      F307EEA6 
 254      6331
 255 02a5 9856D132 		.ascii	"\230V\3212\337Z\341\226\026\367\254\203\037S\026\025"
 255      DF5AE196 
 255      16F7AC83 
 255      1F531615 
 256 02b5 625386F0 		.ascii	"bS\206\360\363v,\322\310$^C|\315\314R_\226\343a\365"
 256      F3762CD2 
 256      C8245E43 
 256      7CCDCC52 
 256      5F96E361 
 257 02ca 7D02B114 		.ascii	"}\002\261\024\303E\246\010g\\\266\347\"\357\244\011"
 257      C345A608 
 257      675CB6E7 
 257      22EFA409 
 258 02da 8B1DBFC6 		.ascii	"\213\035\277\306\025N`0G \236\202\253$\207\243\247\355"
 258      154E6030 
 258      47209E82 
 258      AB2487A3 
 258      A7ED
 259 02ec 9BB912AC 		.ascii	"\233\271\022\254g\226A\301\322\017\244\260\032y\034"
 259      679641C1 
 259      D20FA4B0 
 259      1A791C
 260 02fb A3AFA8EF 		.ascii	"\243\257\250\357\272z\311#\301n\004G\243\013\323ZY\322"
 260      BA7AC923 
 260      C16E0447 
 260      A30BD35A 
 260      59D2
 261 030d DA6359D9 		.ascii	"\332cY\331\310\3006\022\275w{l\352\264(\224%\366\031"
 261      C8C03612 
 261      BD777B6C 
ARM GAS  e:\temp\ccEpTfL0.s 			page 20


 261      EAB42894 
 261      25F619
 262 0320 0CE2D321 		.ascii	"\014\342\323!t\301\220\223\203i;\220V\323\261\020\275"
 262      74C19093 
 262      83693B90 
 262      56D3B110 
 262      BD
 263 0331 E74444E0 		.ascii	"\347DD\340t\312\246N4'\343\243oJ\260\027\301K\335\207"
 263      74CAA64E 
 263      3427E3A3 
 263      6F4AB017 
 263      C14BDD87 
 264 0345 2E2A32E3 		.ascii	".*2\343MN\306\3677\337>\350Mg\374\247T\306\177\226\215"
 264      4D4EC6F7 
 264      37DF3EE8 
 264      4D67FCA7 
 264      54C67F96 
 265 035a 51B15835 		.ascii	"Q\261X5\3434\306\032T\302\355\217\333\0379\033\2311"
 265      E334C61A 
 265      54C2ED8F 
 265      DB1F391B 
 265      9931
 266 036c E3658033 		.ascii	"\343e\2003)\373n\002\322\376\370\330\007\022\234\215"
 266      29FB6E02 
 266      D2FEF8D8 
 266      07129C8D 
 267 037c E07BCBED 		.ascii	"\340{\313\355\373ti\277\331\261\337\360\331\2450K\333"
 267      FB7469BF 
 267      D9B1DFF0 
 267      D9A5304B 
 267      DB
 268 038d 1F4ED93F 		.ascii	"\037N\331?\233\212\36688\0322\3423\360\346\335\202P"
 268      9B8AF638 
 268      381A32E2 
 268      33F0E6DD 
 268      8250
 269 039f B63CA1FF 		.ascii	"\266<\241\377\311\247{\231\342\345\204\021(#XH,O\210"
 269      C9A77B99 
 269      E2E58411 
 269      28235848 
 269      2C4F88
 270 03b2 1982E821 		.ascii	"\031\202\350!^Q\214\304/\221,I6V+\006\254^\214\321T"
 270      5E518CC4 
 270      2F912C49 
 270      36562B06 
 270      AC5E8CD1 
 271 03c7 31C69C7B 		.ascii	"1\306\234{\263\250J-\036\251(y\347B\322\224\3450\340"
 271      B3A84A2D 
 271      1EA92879 
 271      E742D294 
 271      E530E0
 272 03da 1C223109 		.ascii	"\034\"1\011\365\3277r\314\212d\243\306\227\310\312\204"
 272      F5D73772 
 272      CC8A64A3 
 272      C697C8CA 
 272      84
 273 03eb 8FA346D4 		.ascii	"\217\243F\324\303s\276\32493\345v8\377\267O\316\247"
ARM GAS  e:\temp\ccEpTfL0.s 			page 21


 273      C373BED4 
 273      3933E576 
 273      38FFB74F 
 273      CEA7
 274 03fd 5CBB808A 		.ascii	"\\\273\200\212\020\321S5\326e\310\326\005\230\020\367"
 274      10D15335 
 274      D665C8D6 
 274      059810F7 
 275 040d B722FE57 		.ascii	"\267\"\376W\375S\342\016\343\223\204\220\263#\015G\204"
 275      FD53E20E 
 275      E3938490 
 275      B3230D47 
 275      84
 276 041e B7143498 		.ascii	"\267\0244\230\024\311MPS<2\010\316\026/\227\215\271"
 276      14C94D50 
 276      533C3208 
 276      CE162F97 
 276      8DB9
 277 0430 B88DCC7D 		.ascii	"\270\215\314}\015^\031)\377\013^D\225\210\3674\365\376"
 277      0D5E1929 
 277      FF0B5E44 
 277      9588F734 
 277      F5FE
 278 0442 CE4DF5C7 		.ascii	"\316M\365\307\316\214dI=k\341\"\344\260\205\336\250"
 278      CE8C6449 
 278      3D6BE122 
 278      E4B085DE 
 278      A8
 279 0453 00E84D3D 		.ascii	"\000\350M=\3670(j\000\337v\217u\267S\276\240\342\034"
 279      F730286A 
 279      00DF768F 
 279      75B753BE 
 279      A0E21C
 280 0466 172AE1A3 		.ascii	"\027*\341\243K\214\012\177\351\200\033\307\367\356\231"
 280      4B8C0A7F 
 280      E9801BC7 
 280      F7EE99
 281 0475 57FD017F 		.ascii	"W\375\001\177\341\216b\377\316\267\266\005K\012\363"
 281      E18E62FF 
 281      CEB7B605 
 281      4B0AF3
 282 0484 FDDBB76C 		.ascii	"\375\333\267l\013\3726o\367\225\276\361\212\257`\367"
 282      0BFA366F 
 282      F795BEF1 
 282      8AAF60F7 
 283 0494 73F9C4DC 		.ascii	"s\371\304\334\351/\332U\350\337\371\262\277`G\351\332"
 283      E92FDA55 
 283      E8DFF9B2 
 283      BF6047E9 
 283      DA
 284 04a5 FCE0BBEF 		.ascii	"\374\340\273\357\371\003E\234\340+\315/\360\027\231"
 284      F903459C 
 284      E02BCD2F 
 284      F01799
 285 04b4 85FEE292 		.ascii	"\205\376\342\222\302\300\266\342\035\305%E\236\374\267"
 285      C2C0B6E2 
 285      1DC52545 
ARM GAS  e:\temp\ccEpTfL0.s 			page 22


 285      9EFCB7
 286 04c3 FDF9BBE5 		.ascii	"\375\371\273\345z}&\357\365\200/X\022(.Z\277\253 \350"
 286      7A7D26EF 
 286      F5802F58 
 286      12282E5A 
 286      BFAB20E8 
 287 04d7 7B54C5BF 		.ascii	"{T\305\277p\325\232\320"
 287      70D59AD0 
 288              		.text
 289              		.section	.gnu.lto_CySysWdtGetEnabledStatus.62416360,"",%progbits
 290 0000 789C3590 		.ascii	"x\2345\220\273K\302Q\024\307\317\367\336\237\217\004"
 290      BB4BC251 
 290      14C7CFF7 
 290      DE9F8F04 
 291 0010 DB2329A3 		.ascii	"\333#)\243\311\245)h\016\241\226\206\310U\2100\247\""
 291      C9A52968 
 291      0EA19686 
 291      C8558830 
 291      A722
 292 0022 416A68F2 		.ascii	"Ajh\362\372\370!ECK\015e\010-\232=,\011i\024\3511D\357"
 292      FAF82145 
 292      434B0D65 
 292      082D9A3D 
 292      2C096914 
 293 003a 3FA028B2 		.ascii	"?\240(\262\007\015\032\266\004\365\353\036\244\003\347"
 293      070D1AB6 
 293      04F5EB1E 
 293      A403E7
 294 0049 9EFBE57E 		.ascii	"\236\373\345~\371\236\017\327 \020\327\240\036\275z"
 294      F99E0FD7 
 294      2010D7A0 
 294      1EBD7A
 295 0058 76EA8624 		.ascii	"v\352\206$\210\345K\242\270S\000|QNPL \206/\361#p\223"
 295      88E54BA2 
 295      B853007C 
 295      514E504C 
 295      20862FF1 
 296 006f DACFC8A6 		.ascii	"\332\317\310\2460\265\315\320\262q\261\366\324\316\022"
 296      30B5CDD0 
 296      B271B1F6 
 296      D4CE12
 297 007e F06AB9AE 		.ascii	"\360j\271\256n\027\034\276\234R\011\365pbueJ\327\252"
 297      6E171CBE 
 297      9C5209F5 
 297      70627565 
 297      4AD7AA
 298 0091 CD94822C 		.ascii	"\315\224\202,A\310\303\203\034<\274c\013>\322\356\307"
 298      41C8C383 
 298      1C3CBC63 
 298      0B3ED2EE 
 298      C7
 299 00a2 83DF15B7 		.ascii	"\203\337\025\267=\245ty\331\242_\012\2603Sq\254\242"
 299      3DA57479 
 299      D9A25F0A 
 299      B0335371 
 299      ACA2
 300 00b4 2C2BA92A 		.ascii	",+\251*\326\300]~\263\333&\310\224R\352\3030\210\363"
ARM GAS  e:\temp\ccEpTfL0.s 			page 23


 300      D6C05D7E 
 300      B3DB26C8 
 300      9452EAC3 
 300      3088F3
 301 00c7 A8AE9BE1 		.ascii	"\250\256\233\341\032B\360\2245T\277\027O_\317\\\234"
 301      1A42F094 
 301      3554BF17 
 301      4F5FCF5C 
 301      9C
 302 00d8 90944CBA 		.ascii	"\220\224L\272jV\257\034\214f\003/+\335\177\244\335-"
 302      6A56AF1C 
 302      8C66032F 
 302      2BDD7FA4 
 302      DD2D
 303 00ea 79A49614 		.ascii	"y\244\226\024\303\027\337\252\005[\026\033\361\024L"
 303      C317DFAA 
 303      055B161B 
 303      F1144C
 304 00f9 69C78E06 		.ascii	"i\307\216\006\334f@\354\"\013\252!YN7;Z\201\262\225"
 304      DC6640EC 
 304      220BAA21 
 304      594E373B 
 304      5A81B295 
 305 010d 797E98C8 		.ascii	"y~\230\310\010\016\221x^.\277\270\260\247\3755$>\323"
 305      080E9178 
 305      5E2EBFB8 
 305      B0A7FD35 
 305      243ED3
 306 0120 C7A26534 		.ascii	"\307\242e4\264\227\336\361\257\370{\353\002\314\250"
 306      B497DEF1 
 306      AFF87BEB 
 306      02CCA8
 307 012f 897B86C3 		.ascii	"\211{\206\3033\341\350\304lxr<\020\231\213\206\302\301"
 307      33E1E8C4 
 307      6C78723C 
 307      10998B86 
 307      C2C1
 308 0141 D140C4DF 		.ascii	"\321@\304\337\037\364\317\217\014\371\247\247\372B\364"
 308      1FF4CF8F 
 308      0CF9A7A7 
 308      FA42F4
 309 0150 07C3777B 		.ascii	"\007\303w{="
 309      3D
 310              		.text
 311              		.section	.gnu.lto_CySysWdtEnable.62416360,"",%progbits
 312 0000 789C6361 		.ascii	"x\234ca`d\000\201\227@\254\014\304\322@\314\310\314"
 312      60640081 
 312      9740AC0C 
 312      C4D240CC 
 312      C8CC
 313 0012 C0C834E1 		.ascii	"\300\3104\341\034\003C#\007\023##\210\321\300\301\310"
 313      1C034323 
 313      07132323 
 313      88D1C0C1 
 313      C8
 314 0023 50CFC458 		.ascii	"P\317\304X\317\370\225\351/\023\343\241\366g;\2314\227"
 314      CFF895E9 
ARM GAS  e:\temp\ccEpTfL0.s 			page 24


 314      2F13E3A1 
 314      F6673B99 
 314      3497
 315 0035 3700C183 		.ascii	"7\000\301\203\245\253\344g5\\h`nef`\370\317\0046\212"
 315      A5ABE467 
 315      355C6860 
 315      6E656660 
 315      F8CF0436 
 316 004a 817139A3 		.ascii	"\201q9\243&\003P\335\243\215\377\246\362\262\265\200"
 316      260350DD 
 316      A38DFFA6 
 316      F2B2B580 
 317 005a D4294024 		.ascii	"\324)@$\031W0\262\201\354[\037t\240\341\377\377\346"
 317      195730B2 
 317      81EC5B1F 
 317      74A0E1FF 
 317      FFE6
 318 006c 860357AD 		.ascii	"\206\003W\255.w\254\226\007\352\375\000\224\006\331"
 318      2E77AC96 
 318      07EAFD00 
 318      9406D9
 319 007b F4918909 		.ascii	"\364\221\211\011D3?c<\364\345\303\325}3\030AZ\200fM"
 319      44333F63 
 319      3CF4E5C3 
 319      D57D3318 
 319      415A8066 
 320 0090 6B3D749E 		.ascii	"k=t\236\375\013S+3##\310\350M\367\337\264\363B\270;"
 320      FD0B532B 
 320      332323C8 
 320      E84DF7DF 
 320      B4F342B8 
 321 00a5 1A7A1A58 		.ascii	"\032z\032X\200B\353_\036Z\305:\237qncKcC\2031C+3\023"
 321      8042EB5F 
 321      1E5AC53A 
 321      9F716E63 
 321      4B634383 
 322 00be E32A4619 		.ascii	"\343*F\031\306\225\2142@{W3\316gD6\205\211\221\201q"
 322      C6958C32 
 322      407B5733 
 322      CE674436 
 322      85899181 
 323 00d3 0D50E615 		.ascii	"\015P\346\025c\323\201\233\2774A\226\200\235\376\001"
 323      63D3819B 
 323      BF344196 
 323      809DFE01 
 324 00e3 2801B41E 		.ascii	"(\001\264\036\350\030E\367\324\274\324\242\304\222\324"
 324      E81845F7 
 324      D4BCD4A2 
 324      C492D4
 325 00f2 94F8E0FC 		.ascii	"\224\370\340\374\322\242\344\324\230\200\340|g\223\030"
 325      D2A2E4D4 
 325      9880E07C 
 325      679318
 326 0101 E74A1F37 		.ascii	"\347J\0377\347\234l\275d\006\000\377\326b\373"
 326      E79C6CBD 
 326      640600FF 
 326      D662FB
ARM GAS  e:\temp\ccEpTfL0.s 			page 25


 327              		.text
 328              		.section	.gnu.lto_CySysWdtDisable.62416360,"",%progbits
 329 0000 789C6361 		.ascii	"x\234ca`d\000\201\267@\254\014\304\322@\314\310\314"
 329      60640081 
 329      B740AC0C 
 329      C4D240CC 
 329      C8CC
 330 0012 C0C834E1 		.ascii	"\300\3104\341\034\003C#\007\023##\210\321\300\301\310"
 330      1C034323 
 330      07132323 
 330      88D1C0C1 
 330      C8
 331 0023 50CFC458 		.ascii	"P\317\304X\317\370\225\351/\023\343\241\366g;\2314\227"
 331      CFF895E9 
 331      2F13E3A1 
 331      F6673B99 
 331      3497
 332 0035 3700C183 		.ascii	"7\000\301\203\245\233\344g5\\h`nef`\370\317\0046\212"
 332      A59BE467 
 332      355C6860 
 332      6E656660 
 332      F8CF0436 
 333 004a 817139A3 		.ascii	"\201q9\243&\003P\335\243\215\377\246\362\262\265\200"
 333      260350DD 
 333      A38DFFA6 
 333      F2B2B580 
 334 005a D4294024 		.ascii	"\324)@$\031W0\262\201\354[\037t\240\341\377\377\346"
 334      195730B2 
 334      81EC5B1F 
 334      74A0E1FF 
 334      FFE6
 335 006c 860353AD 		.ascii	"\206\003S\255/wl\226\007\352\375\000\224\006\331\364"
 335      2F776C96 
 335      07EAFD00 
 335      9406D9F4 
 336 007c 91890944 		.ascii	"\221\211\011D3?c<\364\345\303\323}3\030AZ\200fMk=t\236"
 336      333F633C 
 336      F4E5C3D3 
 336      7D331841 
 336      5A80664D 
 337 0094 FD0B532B 		.ascii	"\375\013S+3##\310\350M\367\337\264\363B\270;\032z\032"
 337      332323C8 
 337      E84DF7DF 
 337      B4F342B8 
 337      3B1A7A1A 
 338 00a8 588042EB 		.ascii	"X\200B\353_\036Z\305:\237qncKcC\2031C+3\023\343*F\031"
 338      5F1E5AC5 
 338      3A9F716E 
 338      634B6343 
 338      8331432B 
 339 00c2 C6958C32 		.ascii	"\306\225\2142@{W3\316g\004\2529\275\245i\016\023H\033"
 339      407B5733 
 339      CE6704AA 
 339      39BDA569 
 339      0E13481B 
 340 00d6 33E3D309 		.ascii	"3\343\323\011\333\236s1\256\001\312\276bl:0\363\267"
 340      DB9E7331 
ARM GAS  e:\temp\ccEpTfL0.s 			page 26


 340      AE01CABE 
 340      626C3A30 
 340      F3B7
 341 00e8 26C822B0 		.ascii	"&\310\"\260\363?01\202\234\000t\220\242{j^jQbIjJ|p~"
 341      F33F3031 
 341      829C0074 
 341      90A27B6A 
 341      5E6A5162 
 342 0102 6951726A 		.ascii	"iQrjL@p\276\263I\214s\245\217\233sN\266^2\003\000\354"
 342      4C4070BE 
 342      B3498C73 
 342      A58F9B73 
 342      4EB65E32 
 343 0119 A365AA   		.ascii	"\243e\252"
 344              		.text
 345              		.section	.gnu.lto_CySysWdtSetMatch.62416360,"",%progbits
 346 0000 789C5551 		.ascii	"x\234UQMHTQ\024>\337\275\357=\307\240\204\226*\214B"
 346      4D485451 
 346      143EDFBD 
 346      EF3DC7A0 
 346      84962A8C 
 347 0015 20B369A3 		.ascii	" \263i\243\273\226\003\265i!\272\025D\306\007\202\225"
 347      BB9603B5 
 347      6921BA15 
 347      44C60782 
 347      95
 348 0026 20B668E5 		.ascii	" \266h\345\031g\336D\021(\204.\304\037\"\206\321\362"
 348      1967DE44 
 348      1128842E 
 348      C41F2286 
 348      D1F2
 349 0038 7F976D86 		.ascii	"\177\227m\206Y\012\366gA \204(\214\322\302F\230 \324"
 349      590AF667 
 349      41208428 
 349      8CD2C246 
 349      9820D4
 350 004b 7A9DF3DE 		.ascii	"z\235\363\336\312\013\357\236{.\337\317\371\356s\010"
 350      CA0BEF9E 
 350      7B2EDFCF 
 350      F9EE7308 
 351 005b A4EB9794 		.ascii	"\244\353\227\224\224\324\026\371`\011f\352\003Q6a\000"
 351      94D416F9 
 351      600966EA 
 351      03513661 
 351      00
 352 006c 3D700234 		.ascii	"=p\0024n0\216\337\346\257A\345i\365\235I\225X\326Aq"
 352      6E308EDF 
 352      E6AF41E5 
 352      69F59D49 
 352      9558D641 
 353 0081 3B39CB9F 		.ascii	";9\313\237\330\006\226(4\221\024\241\204\224\300>\347"
 353      D8069628 
 353      349114A1 
 353      8494C03E 
 353      E7
 354 0092 37E66CDD 		.ascii	"7\346l\335\004\026p\244=\333\235=\272\241\255A\233\264"
 354      041670A4 
ARM GAS  e:\temp\ccEpTfL0.s 			page 27


 354      3DDB9D3D 
 354      BAA1AD41 
 354      9BB4
 355 00a4 859D67DF 		.ascii	"\205\235g\337\257\331[ 9\347\027^N\272\035E\346\011"
 355      AFD95B20 
 355      39E7175E 
 355      4EBA1D45 
 355      E609
 356 00b6 E6699F1B 		.ascii	"\346i\237\033\003k\361\006V\364\260\214V,\241\225\344"
 356      036BF106 
 356      56F4B08C 
 356      562CA195 
 356      E4
 357 00c7 8AF0161D 		.ascii	"\212\360\026\035\012?\334\3747}\335\313\253\177[l\212"
 357      0A3FDCFC 
 357      377DDDCB 
 357      AB7F5B6C 
 357      8A
 358 00d8 15789A63 		.ascii	"\025x\232c\275\247\314a\230\343\362\267;{K\357\223\011"
 358      BDA7CC61 
 358      98E3F2B7 
 358      3B7B4BEF 
 358      9309
 359 00ea 40392662 		.ascii	"@9&b:\242\341\270\272y\272\021\325\204\251\341\316\214"
 359      3AA2E1B8 
 359      BA79BA11 
 359      D584A9E1 
 359      CE8C
 360 00fc D16AABC8 		.ascii	"\321j\253\310]\026~\234\0367\250Z\316\232\234\205\230"
 360      5D167E9C 
 360      1E37A85A 
 360      CE9A9C85 
 360      98
 361 010d 15CF2F6A 		.ascii	"\025\317/jQ\012\007ah\261*\263\034\302D\206\"*0\252"
 361      510A0761 
 361      68B12AB3 
 361      1CC24486 
 361      222A30AA 
 362 0121 A272FEBC 		.ascii	"\242r\376\274zZ\272\031\3634\353LP\371\330\240$7\312"
 362      7A5ABA19 
 362      F334EB4C 
 362      50F9D8A0 
 362      2437CA
 363 0134 77B4F7BA 		.ascii	"w\264\367\272\336\024\267e~\301\2128\331\236:i\\\304"
 363      DE14B765 
 363      7EC18A38 
 363      D99E3A69 
 363      5CC4
 364 0146 7C368FC0 		.ascii	"|6\217\300zX\227\230k\"M\330\300\"(\032\245\356\305"
 364      7A589798 
 364      6B224DD8 
 364      C022281A 
 364      A5EEC5
 365 0159 826EAC19 		.ascii	"\202n\254\031\354\177i\216\347`\276\014\233\260)p\301"
 365      EC7F698E 
 365      E760BE0C 
 365      9BB02970 
ARM GAS  e:\temp\ccEpTfL0.s 			page 28


 365      C1
 366 016a FD297C6D 		.ascii	"\375)|m\211q\361\314\256\3163\363*\251wW|\262\314\235"
 366      8971F1CC 
 366      AECE33F3 
 366      2AA97757 
 366      7CB2CC9D 
 367 017e 74D56B4B 		.ascii	"t\325kK\274\204G?1Q\336\277H)%\372\2015\003}\021y\237"
 367      BC84473F 
 367      3151DEBF 
 367      482925FA 
 367      8135037D 
 368 0195 F67BFE23 		.ascii	"\366{\376#\177t`\314\037\354\357\035y<\232\361\373\272"
 368      7F7460CC 
 368      1FECEF1D 
 368      793C9AF1 
 368      FBBA
 369 01a7 7B47D25D 		.ascii	"{G\322]}\351'\367\357\246\037\014\337\316\220\373p`"
 369      7DE927F7 
 369      EFA61F0C 
 369      DFCE90FB 
 369      7060
 370 01b9 2C33F41F 		.ascii	",3\364\037\243u\265\364"
 370      A375B5F4 
 371              		.text
 372              		.section	.gnu.lto_CySysWdtGetMatch.62416360,"",%progbits
 373 0000 789C3590 		.ascii	"x\2345\220=H\202Q\024\206\317{\357\227?C54&h4\204KS"
 373      3D488251 
 373      1486CF7B 
 373      EF973F43 
 373      35342668 
 374 0018 D0D622D4 		.ascii	"\320\326\"\324\322\020\271\012\021\366ME\202\324\320"
 374      D210B90A 
 374      11F64D45 
 374      82D4D0
 375 0027 E4B5CF2F 		.ascii	"\344\265\317/*\032\\lH\303!\302\376\377F'\221\240\251"
 375      2A1A5C6C 
 375      48C321C2 
 375      FEFF4627 
 375      91A0A9
 376 003a 5F099A22 		.ascii	"_\011\232\"\024D\232\024\014\"\252\257{\220\016\034"
 376      14449A14 
 376      0C22AAAF 
 376      7B900E1C 
 377 004a CE7DB9EF 		.ascii	"\316}\271\357}\317\3035\010\3045\244\307\240\236\375"
 377      7DCFC335 
 377      08C435A4 
 377      C7A09EFD 
 378 005a BA210922 		.ascii	"\272!\011\"}G\224\364\010\200\017\312\003J\010$\360"
 378      7D4794F4 
 378      08800FCA 
 378      034A0824 
 378      F0
 379 006b 217E041E 		.ascii	"!~\004\036S\0279\331\026\266\266\031Z\266nwj=,\201\200"
 379      531739D9 
 379      16B6B619 
 379      5AB66E77 
 379      6A3D2C81 
ARM GAS  e:\temp\ccEpTfL0.s 			page 29


 380 0080 9659F5B4 		.ascii	"\226Y\365\264\341\016\026\224ZUo\373U\177\356\352Ay"
 380      E10E1694 
 380      5A556FFB 
 380      557FEEEA 
 380      4179
 381 0092 6D29C811 		.ascii	"m)\310\021\204\003\370P\200\217w\034\"H\332]\275\374"
 381      8403F850 
 381      808F771C 
 381      2248DA5D 
 381      BDFC
 382 00a4 CD74BB52 		.ascii	"\315t\273RJW\200-\372\346\010.f:\237.)\307\261T)3VY"
 382      4A57802D 
 382      FAE6082E 
 382      663A9F2E 
 382      29C7B154 
 383 00bc AFF90D41 		.ascii	"\257\371\015A\266\224\2228\212\232\272\231\253%\004"
 383      B6949238 
 383      8A9ABA99 
 383      AB2504
 384 00cb 4F5947F9 		.ascii	"OYG\371k\363\365\363\246\217\037[\222!\267\355\362\275"
 384      6BF3F5F3 
 384      A68F1F5B 
 384      9221B7ED 
 384      F2BD
 385 00dd 9BA90CF0 		.ascii	"\233\251\014\360\236Ze\257\335\333\221%\265\245\230"
 385      9E5A65AF 
 385      DDDB9125 
 385      B5A598
 386 00ec BB514C37 		.ascii	"\273QL7\274y\354&S\260e\027N4\3331\263\341\024yP\035"
 386      BC79EC26 
 386      53B06517 
 386      4E34DB31 
 386      B3E11479 
 387 0102 D6F7DAB5 		.ascii	"\326\367\332\265\350\004\312Nf\361\345y\2243\004\034"
 387      E804CA4E 
 387      66F1E579 
 387      9433041C 
 388 0112 47E24C9B 		.ascii	"G\342L\233\337\361\357\340Ol\0120\216\206\033\2300\027"
 388      DFF1EFE0 
 388      4F6C0A30 
 388      8E861B98 
 388      3017
 389 0124 CDF8EC92 		.ascii	"\315\370\354\22297\023\216-\307\243fd*\034\013\215D"
 389      3937138E 
 389      2DC7A366 
 389      642A1C0B 
 389      8D44
 390 0136 422B93E3 		.ascii	"B+\223\343\241\205\371\341(\375\001\363\213t\""
 390      A185F9E1 
 390      28FD01F3 
 390      8B7422
 391              		.text
 392              		.section	.gnu.lto_CySysWdtGetCount.62416360,"",%progbits
 393 0000 789C6361 		.ascii	"x\234ca`d\000\001& \245\014\244\245\201\230\221\231"
 393      60640001 
 393      2620A50C 
 393      A4A58198 
ARM GAS  e:\temp\ccEpTfL0.s 			page 30


 393      9199
 394 0012 819169C2 		.ascii	"\201\221i\3029\006\206F\016&FF\020\243\201\203\221\241"
 394      39068646 
 394      0E264646 
 394      10A38183 
 394      91A1
 395 0024 9E89B19E 		.ascii	"\236\211\261\236\361+\323_&\306\213-\033\3460\177aj"
 395      F12BD35F 
 395      26C68B2D 
 395      1BE6307F 
 395      616A
 396 0036 052A6301 		.ascii	"\005*c\001r?\236\235\365\230\017\304edT\000rg7\\\352"
 396      723F9E9D 
 396      F5980FC4 
 396      65645400 
 396      7267375C 
 397 004b 64D75CDE 		.ascii	"d\327\\\336\320\320\324\360\240\365\225\374\234M\027"
 397      D0D0D4F0 
 397      A0F595FC 
 397      9C4D17
 398 005a 1A385B99 		.ascii	"\0328[\231\231\030\376310\256`\224a\\\316(\003\262c"
 398      9918FE33 
 398      3130AE60 
 398      94615CCE 
 398      2803B263 
 399 006e 25A32603 		.ascii	"%\243&\003P\365\243\215\377\246\362\262\2654\000\201"
 399      50F5A38D 
 399      FFA6F2B2 
 399      B5340081 
 400 007e 02480950 		.ascii	"\002H\011Pf\025#\033\310M\353\203\0164\374\377\337\334"
 400      6615231B 
 400      C84DEB83 
 400      0E34FCFF 
 400      DFDC
 401 0090 70E0B2DD 		.ascii	"p\340\262\335\345\027\257\344\201&\200La\370\000\304"
 401      E517AFE4 
 401      8126804C 
 401      61F800C4 
 402 00a0 20277D64 		.ascii	" '}db\002\321\314\317\030\017\375\352\272\366\253\235"
 402      6202D1CC 
 402      CF180FFD 
 402      EABAF6AB 
 402      9D
 403 00b1 0BA4AF99 		.ascii	"\013\244\257\231\031\344\276i\255\207\316\263\203\034"
 403      19E4BE69 
 403      AD87CEB3 
 403      831C
 404 00bf C4CC08B2 		.ascii	"\304\314\010\262\242kG\333%~\010wOCO\003\310\311m\013"
 404      A26B47DB 
 404      257E0877 
 404      4F434F03 
 404      C8C96D0B 
 405 00d3 26BE639C 		.ascii	"&\276c\234\3178\267\261\245\261\241!\030h0\013\343\032"
 405      CF38B7B1 
 405      A5B1A121 
 405      1868300B 
 405      E31A
ARM GAS  e:\temp\ccEpTfL0.s 			page 31


 406 00e5 A0D35683 		.ascii	"\240\323V\203\234\306\270\026(\303\360\212\261\251!"
 406      9CC6B816 
 406      28C3F08A 
 406      B1A921
 407 00f4 106A2428 		.ascii	"\020j$(|>\000\003\010h\035\220\255\350\236\232\227Z"
 407      7C3E0003 
 407      08681D90 
 407      ADE89E9A 
 407      975A
 408 0106 9458929A 		.ascii	"\224X\222\232\022\037\234_Z\224\234\032\023\020\234"
 408      121F9C5F 
 408      5A949C1A 
 408      13109C
 409 0115 EF6C12E3 		.ascii	"\357l\022\343\\\351\343\346\234\223\255\227\314\000"
 409      5CE9E3E6 
 409      9C93AD97 
 409      CC00
 410 0123 00F88568 		.ascii	"\000\370\205h7"
 410      37
 411              		.text
 412              		.section	.gnu.lto_CySysWdtSetIgnoreBits.62416360,"",%progbits
 413 0000 789C5551 		.ascii	"x\234UQ=hSQ\024>\337\275\311KC\251\025\3354\220\012"
 413      3D685351 
 413      143EDFBD 
 413      C94B43A9 
 413      15DD3490 
 414 0015 4209828B 		.ascii	"B\011\202\213\216\202C@\027\021\261kA\264\276A\374)"
 414      8E824340 
 414      1711B16B 
 414      41B4BE41 
 414      FC29
 415 0027 D47670EA 		.ascii	"\324vp\352I\223\027E:t\261C\264\004\021\211?\3256:\370"
 415      49931745 
 415      3A74B143 
 415      B4041189 
 415      3FD5363A 
 416 003c 3385E820 		.ascii	"3\205\350 R\177\273\027i\240\004Ax\245i\021\211}\236"
 416      527FBB17 
 416      69A00441 
 416      78A56911 
 416      897D9E
 417 004f F3AE4B2F 		.ascii	"\363\256K/\274{\317\271|\177\367\274\004\201t\3553D"
 417      BC7BCFB9 
 417      7C7FF7BC 
 417      048174ED 
 417      3344
 418 0061 87E4DC2F 		.ascii	"\207\344\334/\037,\301\314|&*\364\030@\013\356\001M"
 418      1F2CC1CC 
 418      7C262AF4 
 418      18400BEE 
 418      014D
 419 0073 1A4C62D3 		.ascii	"\032Lb\323\3745h\336\\{cr5\226\365#\330\310V\370+\333"
 419      FC3568DE 
 419      5C7B6372 
 419      3596F523 
 419      D8C856F8 
 420 0089 C0124526 		.ascii	"\300\022E&\226\"\324\220\023\330\267\322\342=\3331\201"
ARM GAS  e:\temp\ccEpTfL0.s 			page 32


 420      9622D490 
 420      13D8B7D2 
 420      E23DDB31 
 420      81
 421 009a 0512D2AE 		.ascii	"\005\022\322\256\177\252\264vik0 \355F\347\327\207>"
 421      7FAAB476 
 421      696B3020 
 421      ED46E7D7 
 421      873E
 422 00ac 7B1024F5 		.ascii	"{\020$\365\346\353\326t\357\340C\346)\346\252\317\351"
 422      E6EBD674 
 422      EFE043E6 
 422      29E6AACF 
 422      E9
 423 00bd C05A3C81 		.ascii	"\300Z<\201\025=<F\006\217\220!\271\"<\305\240\302W\353"
 423      153D3C46 
 423      068F9021 
 423      B9223CC5 
 423      A0C257EB 
 424 00d1 DB77FABC 		.ascii	"\333w\372\274\222\372\0178S\314\303\323w,\234mp\024"
 424      92FA0F38 
 424      53CCC3D3 
 424      772C9C6D 
 424      7014
 425 00e3 15B971F7 		.ascii	"\025\271q\367\370\362\255\255l\032P\216\021v\302\321"
 425      F8F2ADAD 
 425      6C1A508E 
 425      1176C2D1 
 426 00f3 935A7ABA 		.ascii	"\223Zz\272\245t#\012\205\256/\\7FO\273\206bX\336\352"
 426      A574230A 
 426      85AE2F5C 
 426      37464FBB 
 426      866258DE 
 427 0108 D6F6AA64 		.ascii	"\326\366\252d\321\232\242\2058~\017\227\346z5{\002\273"
 427      D19AA285 
 427      387E0F97 
 427      E67A357B 
 427      02BB
 428 011a F14CE208 		.ascii	"\361L\342\010\254[^2\016d\005'\240\217\257*\363)\007"
 428      AC5B5E32 
 428      0E640527 
 428      A08FAF2A 
 428      F32907
 429 012d 623E86E7 		.ascii	"b>\206\347\002[E\014Qg\201\011\253\371\347\366v\267"
 429      025B450C 
 429      51678109 
 429      ABF9E7F6 
 429      76B7
 430 013f B6C7F192 		.ascii	"\266\307\361\222B\232\015\232_bR2\236Dk\371A\247\337"
 430      429A0D9A 
 430      5F625232 
 430      9E446BF9 
 430      41A7DF
 431 0152 B50D9E66 		.ascii	"\265\015\236f\235[\373\355L;]\305\\\241\204\300zX\224"
 431      9D5BFBED 
 431      4C3B5DC5 
 431      5CA184C0 
ARM GAS  e:\temp\ccEpTfL0.s 			page 33


 431      7A5894
 432 0165 812C8834 		.ascii	"\201,\2104\241\216*\\\220\216\347\004\377k\256\204+"
 432      A18E2A5C 
 432      908EE704 
 432      FF6BAE84 
 432      2B
 433 0176 6DEB8244 		.ascii	"m\353\202D\321\273\250\037/\\\342\337\345\367\031\007"
 433      D1BBA81F 
 433      2F5CE2DF 
 433      E5F71907 
 434 0186 4CC5A13D 		.ascii	"L\305\241=\0154{?\253w;\214\012\314Gh\247\331K1\023"
 434      0D347B3F 
 434      AB773B8C 
 434      0ACC4768 
 434      A7D94B31 
 435 019b 1EFDC454 		.ascii	"\036\375\304T\243\036\345\224\022\377\353\320@\347&"
 435      A31EE594 
 435      12FFEBD0 
 435      40E726
 436 01aa 533C70D2 		.ascii	"S<p\322\277\346\217\235\037\367/\236\033\032\235\030"
 436      BFE68F9D 
 436      1FF72F9E 
 436      1B1A9D18 
 437 01ba 1BF187CF 		.ascii	"\033\361\207\317\014\215\346\217\016\347o\234:\221\277"
 437      0C8DE68F 
 437      0EE76F9C 
 437      3A91BF
 438 01c9 72F9F008 		.ascii	"r\371\360\010\245.\\\032\277~z\342\352?\026s\304\346"
 438      A52E5C1A 
 438      BF7E7AE2 
 438      EA3F1673 
 438      C4E6
 439              		.text
 440              		.section	.gnu.lto_CySysWdtGetIgnoreBits.62416360,"",%progbits
 441 0000 789C2D50 		.ascii	"x\234-P\277K\202Q\024}\347\275\317_D\332\236\240\321"
 441      BF4B8251 
 441      147DE7BD 
 441      CF5F44DA 
 441      9EA0D1
 442 0013 D4D2D4DE 		.ascii	"\324\322\324\336 \330PC\324*D\230S\221\02054\371\354"
 442      20D85043 
 442      D42A4498 
 442      53911035 
 442      34F9EC
 443 0026 F30B8A06 		.ascii	"\363\013\212\006\227\032Ji\010\322\312\262\032\233D"
 443      971A4A69 
 443      08D2CAB2 
 443      1A9B44
 444 0035 A8967EEA 		.ascii	"\250\226~\352\037P$\2104i\330R\246\335\233]\270\357"
 444      1F502488 
 444      3469D852 
 444      A6DD9B5D 
 444      B8EF
 445 0047 BEC33DEF 		.ascii	"\276\303=\357\234\3033\004\004\3278\215A\232\375\324"
 445      9CC33304 
 445      04D7388D 
 445      419AFDD4 
ARM GAS  e:\temp\ccEpTfL0.s 			page 34


 446 0057 500232F9 		.ascii	"P\0022\371 D\334)\001\276h'DL\"\206O\371#\361\2348O"
 446      2044DC29 
 446      01BE6827 
 446      444C2286 
 446      4FF923F1 
 447 006e A9A6B488 		.ascii	"\251\246\264\210f\020l\334\357V\334\014\001?\301=]\332"
 447      66106CDC 
 447      EF56DC0C 
 447      013FC13D 
 447      5DDA
 448 0080 700C65B4 		.ascii	"p\014e\264^\323\257\327\337\276\324\345\223vYJ\212\216"
 448      5ED3AFD7 
 448      DFBED4E5 
 448      9376594A 
 448      8A8E
 449 0092 14C8C28B 		.ascii	"\024\310\302\213\014\274\354q\204!A\354\267\213\366"
 449      0CBCEC71 
 449      842141EC 
 449      B78BF6
 450 00a1 76AF3DA1 		.ascii	"v\257=\241\251\374L\241\3151\354\234)?U\320\235\216"
 450      A9FC4CA1 
 450      CD31EC9C 
 450      293F55D0 
 450      9D8E
 451 00b3 A90B2FA3 		.ascii	"\251\013/\243\345l\333g\203\260\224R|\030\202\365D\235"
 451      E56CDB67 
 451      83B09452 
 451      7C1882F5 
 451      449D
 452 00c5 9AC335A4 		.ascii	"\232\3035\244\344\251\252(~m\336tn\335\254`*E\352;V"
 452      E4A9AA28 
 452      7E6DDE74 
 452      6EDDAC60 
 452      2A45EA3B 
 453 00da F1D1C1D1 		.ascii	"\361\321\301\321\014\260Y\245|\320\364taAoi\016_\273"
 453      0CB059A5 
 453      7CD0F474 
 453      61416F69 
 453      0E5FBB
 454 00ed 4AD65CFB 		.ascii	"J\326\\\373H\307\023\260\224\0159\012x\302\001q\212"
 454      48C713B0 
 454      940D390A 
 454      78C20171 
 454      8A
 455 00fe 7D882ACC 		.ascii	"}\210*\314\217\2400\025\272r\245\372]\272\207\337+\364"
 455      8FA03015 
 455      BA72A5FA 
 455      5DBA87DF 
 455      2BF4
 456 0110 E18C68B4 		.ascii	"\341\214h\264o\255\267\32054\210G\244\334a\243\360g"
 456      6FADB7D0 
 456      35348847 
 456      A4DC61A3 
 456      F067
 457 0122 22E1419E 		.ascii	"\"\341A\236H\357\220\377\004\376\350\272\004\247\245"
 457      48EF90FF 
 457      04FEE8BA 
ARM GAS  e:\temp\ccEpTfL0.s 			page 35


 457      04A7A5
 458 0131 EC036391 		.ascii	"\354\003c\221\305\310\322\354rdnf:\272\262\024\216\204"
 458      C5C8D2EC 
 458      72646E66 
 458      3ABAB214 
 458      8E84
 459 0143 26A7A381 		.ascii	"&\247\243\201\221P`u\"\030X\230\037\016\213_\037\205"
 459      91506075 
 459      22185898 
 459      1F0E8B5F 
 459      1F85
 460 0155 7E80     		.ascii	"~\200"
 461              		.text
 462              		.section	.gnu.lto_CySysWdtClearInterrupt.62416360,"",%progbits
 463 0000 789C6361 		.ascii	"x\234ca`d\000\001} \245\014\244\245\201\230\221\231"
 463      60640001 
 463      7D20A50C 
 463      A4A58198 
 463      9199
 464 0012 819169C2 		.ascii	"\201\221i\3029\006\206F\016&FF\020\243\201\203\221\241"
 464      39068646 
 464      0E264646 
 464      10A38183 
 464      91A1
 465 0024 9E89B19E 		.ascii	"\236\211\261\236\361+\323_&\306C\355\317v2i.o\000\202"
 465      F12BD35F 
 465      26C643ED 
 465      CF763269 
 465      2E6F0082 
 466 0038 074F17AB 		.ascii	"\007O\027\253\314j\270\320\300\334\312\314\300\360\237"
 466      CC6AB8D0 
 466      C0DCCACC 
 466      C0F09F
 467 0047 096C1403 		.ascii	"\011l\024\003\343rFM\006\240\272G\033\377M\345ek\001"
 467      E372464D 
 467      06A0BA47 
 467      1BFF4DE5 
 467      656B01
 468 005a A9538048 		.ascii	"\251S\200H2\256`d\003\331\267>\350@\303\377\377\315"
 468      32AE6064 
 468      03D9B73E 
 468      E840C3FF 
 468      FFCD
 469 006c 0D07362A 		.ascii	"\015\0076*]9\261L\205\225\211\241\225\031h+\220``\370"
 469      5D39B14C 
 469      859589A1 
 469      9519682B 
 469      906060F8 
 470 0080 005408B2 		.ascii	"\000T\010\262\363#\023\023\210f~\306x\350W\327\271\316"
 470      F3231313 
 470      88667EC6 
 470      78E857D7 
 470      B9CE
 471 0092 93FC20CD 		.ascii	"\223\374 \315\315\314 \007Lk=t\236\375\013S+3\023#\310"
 471      CDCC2007 
 471      4C6B3D74 
 471      9EFD0B53 
ARM GAS  e:\temp\ccEpTfL0.s 			page 36


 471      2B331323 
 472 00a7 9E6DBB76 		.ascii	"\236m\273v\037\341\205p\2174\3644\260\000\205\332\267"
 472      1FE18570 
 472      8F34F434 
 472      B00085DA 
 472      B7
 473 00b8 CC58C934 		.ascii	"\314X\3114\237qnc\013c+33\343*F\031\306\225\2142@\007"
 473      9F716E63 
 473      0B632B33 
 473      33E32A46 
 473      19C6958C 
 474 00cf AC669CCF 		.ascii	"\254f\234\317\310\360\214\261\371\007\033\3048f\210"
 474      C8F08CB1 
 474      F9071BC4 
 474      386688
 475 00de 895B8E1C 		.ascii	"\211[\216\034o\343\000\031\301\010\004k\200*\201\266"
 475      6FE30019 
 475      C108046B 
 475      802A81B6 
 476 00ee 4E630429 		.ascii	"Nc\004)\301g\330Z\240a@#\030^16\035\330\272H\013\244"
 476      C167D85A 
 476      A0614023 
 476      185E3136 
 476      1DD8BA48 
 477 0104 1C1C001F 		.ascii	"\034\034\000\037\200\356\002:\035\350\021E\367\324\274"
 477      80EE023A 
 477      1DE81145 
 477      F7D4BC
 478 0113 D4A2C492 		.ascii	"\324\242\304\222\324\224\370\340\374\322\242\344\324"
 478      D494F8E0 
 478      FCD2A2E4 
 478      D4
 479 0120 9880E07C 		.ascii	"\230\200\340|g\223\030\347J\0377\347\234l\275d\006\000"
 479      679318E7 
 479      4A1F37E7 
 479      9C6CBD64 
 479      0600
 480 0132 288871F0 		.ascii	"(\210q\360"
 481              		.text
 482              		.section	.gnu.lto_CySysWdtMaskInterrupt.62416360,"",%progbits
 483 0000 789C6361 		.ascii	"x\234ca`d\000\001c \245\014\244\245\201\230\221\231"
 483      60640001 
 483      6320A50C 
 483      A4A58198 
 483      9199
 484 0012 819169C2 		.ascii	"\201\221i\3029\006\206F\016&FF\020\243\201\203\221\241"
 484      39068646 
 484      0E264646 
 484      10A38183 
 484      91A1
 485 0024 9E89B19E 		.ascii	"\236\211\261\236\361+\323_&\306C\355\317v2i.o\000\202"
 485      F12BD35F 
 485      26C643ED 
 485      CF763269 
 485      2E6F0082 
 486 0038 074757AB 		.ascii	"\007GW\253\314j\270\320\300\334\312\314\300\360\237"
 486      CC6AB8D0 
ARM GAS  e:\temp\ccEpTfL0.s 			page 37


 486      C0DCCACC 
 486      C0F09F
 487 0047 096C1403 		.ascii	"\011l\024\003\343rFM\006\240\272G\033\377M\345ek\001"
 487      E372464D 
 487      06A0BA47 
 487      1BFF4DE5 
 487      656B01
 488 005a A9538048 		.ascii	"\251S\200H2\256`d\003\331\267>\350@\303\377\377\315"
 488      32AE6064 
 488      03D9B73E 
 488      E840C3FF 
 488      FFCD
 489 006c 0D07EE2B 		.ascii	"\015\007\356+]Y\261N\205\225\211\241\225\031h+\220`"
 489      5D59B14E 
 489      859589A1 
 489      9519682B 
 489      9060
 490 007e 60F80054 		.ascii	"`\370\000T\010\262\363#\023\023\210f~\306x\350W\327"
 490      08B2F323 
 490      13138866 
 490      7EC678E8 
 490      57D7
 491 0090 B1EE9742 		.ascii	"\261\356\227B \315\315\314 \007Lk=t\236\375\013S+3\023"
 491      20CDCDCC 
 491      20074C6B 
 491      3D749EFD 
 491      0B532B33 
 492 00a5 23C89E0D 		.ascii	"#\310\236\015\217~\374\200r\3174\3644\260\000\205>n"
 492      8F7EFC80 
 492      72CF34F4 
 492      34B00085 
 492      3E6E
 493 00b7 5BD8C93B 		.ascii	"[\330\311;\237qnc\013c+33\343*F\031\306\225\2142@\007"
 493      9F716E63 
 493      0B632B33 
 493      33E32A46 
 493      19C6958C 
 494 00ce AC669CCF 		.ascii	"\254f\234\317\310\360\214\261\371\017\033\3048f\210"
 494      C8F08CB1 
 494      F90F1BC4 
 494      386688
 495 00dd 89F74EF7 		.ascii	"\211\367N\367\374\346\003\031\301\310\370\357\377\377"
 495      FCE60319 
 495      C1C8F8EF 
 495      FFFF
 496 00eb FFFC8C6B 		.ascii	"\377\374\214k\200\252\2016Oc\004)\303g\340Z\240\201"
 496      80AA8136 
 496      4F630429 
 496      C367E05A 
 496      A081
 497 00fd 4063185E 		.ascii	"@c\030^16\035\370\274H\013\244\034\034\010\037\200n"
 497      31361DF8 
 497      BC480BA4 
 497      1C1C081F 
 497      806E
 498 010f 033A1FE8 		.ascii	"\003:\037\350\031E\367\324\274\324\242\304\222\324\224"
 498      1945F7D4 
ARM GAS  e:\temp\ccEpTfL0.s 			page 38


 498      BCD4A2C4 
 498      92D494
 499 011e F8E0FCD2 		.ascii	"\370\340\374\322\242\344\324\230\200\340|g\223\030\347"
 499      A2E4D498 
 499      80E07C67 
 499      9318E7
 500 012d 4A1F37E7 		.ascii	"J\0377\347\234l\275d\006\000k\235x "
 500      9C6CBD64 
 500      06006B9D 
 500      7820
 501              		.text
 502              		.section	.gnu.lto_CySysWdtUnmaskInterrupt.62416360,"",%progbits
 503 0000 789C6361 		.ascii	"x\234ca`d\000\001} \245\014\244\245\201\230\221\231"
 503      60640001 
 503      7D20A50C 
 503      A4A58198 
 503      9199
 504 0012 819169C2 		.ascii	"\201\221i\3029\006\206F\016&FF\020\243\201\203\221\241"
 504      39068646 
 504      0E264646 
 504      10A38183 
 504      91A1
 505 0024 9E89B19E 		.ascii	"\236\211\261\236\361+\323_&\306C\355\317v2i.o\000\202"
 505      F12BD35F 
 505      26C643ED 
 505      CF763269 
 505      2E6F0082 
 506 0038 074B37AB 		.ascii	"\007K7\253\314j\270\320\300\334\312\314\300\360\237"
 506      CC6AB8D0 
 506      C0DCCACC 
 506      C0F09F
 507 0047 096C1403 		.ascii	"\011l\024\003\343rFM\006\240\272G\033\377M\345ek\001"
 507      E372464D 
 507      06A0BA47 
 507      1BFF4DE5 
 507      656B01
 508 005a A9538048 		.ascii	"\251S\200H2\256`d\003\331\267>\350@\303\377\377\315"
 508      32AE6064 
 508      03D9B73E 
 508      E840C3FF 
 508      FFCD
 509 006c 0D07E62A 		.ascii	"\015\007\346*_\351\330\246\302\312\304\320\312\014\264"
 509      5FE9D8A6 
 509      C2CAC4D0 
 509      CA0CB4
 510 007b 15483030 		.ascii	"\025H00|\000*\004\331\371\221\211\011D3?c<\364\253\353"
 510      7C002A04 
 510      D9F99189 
 510      0944333F 
 510      633CF4AB 
 511 0090 5FCF4B21 		.ascii	"_\317K!\220\346ff\220\003\246\265\036:\317\376\205\251"
 511      90E66666 
 511      9003A6B5 
 511      1E3ACFFE 
 511      85A9
 512 00a2 95998911 		.ascii	"\225\231\211\021d\317\206G?~@\271g\032z\032X\200B\037"
 512      64CF8647 
ARM GAS  e:\temp\ccEpTfL0.s 			page 39


 512      3F7E40B9 
 512      671A7A1A 
 512      5880421F 
 513 00b6 B72DECE4 		.ascii	"\267-\354\344\235\3178\267\261\205\261\225\231\231q"
 513      9DCF38B7 
 513      B185B195 
 513      999971
 514 00c5 15A30CE3 		.ascii	"\025\243\014\343JF\031\240\003V3\316gdx\306\330\374"
 514      4A4619A0 
 514      035633CE 
 514      676478C6 
 514      D8FC
 515 00d7 830D621C 		.ascii	"\203\015b\0343\304\304-G\216\267q\200\214`\004\2025"
 515      33C4C42D 
 515      478EB771 
 515      808C6004 
 515      8235
 516 00e9 4095405B 		.ascii	"@\225@[\2471\202\224\3403l-\3200\240\021\014\257\030"
 516      A7318294 
 516      E0336C2D 
 516      D030A011 
 516      0CAF18
 517 00fc 9B0E6C5C 		.ascii	"\233\016l\\\254\005R\016\016\200\017@w\001\235\016\364"
 517      AC05520E 
 517      0E800F40 
 517      77019D0E 
 517      F4
 518 010d 88A27B6A 		.ascii	"\210\242{j^jQbIjJ|p~iQrjL@p\276\263I\214s\245\217\233"
 518      5E6A5162 
 518      496A4A7C 
 518      707E6951 
 518      726A4C40 
 519 012a 734EB65E 		.ascii	"sN\266^2\003\000\300\353s%"
 519      320300C0 
 519      EB7325
 520              		.text
 521              		.section	.gnu.lto_CySysWdtSetInterruptCallback.62416360,"",%progbits
 522 0000 789C9551 		.ascii	"x\234\225Q=H[Q\024\276\337\2751I\305Jw\035\224F\304"
 522      3D485B51 
 522      14BEDFBD 
 522      3149C54A 
 522      771D9446 
 523 0015 C14E5D3A 		.ascii	"\301N]:\007\354\322At\015H\214\257 \206DB,\330%7\211"
 523      07ECD241 
 523      740D488C 
 523      AF208644 
 523      422CD825 
 524 002b A1A65311 		.ascii	"\241\246S\021u\320\026\207 \376\244\255F\005\011\016"
 524      75D01687 
 524      20FEA4AD 
 524      4605090E 
 525 003b 0DB54306 		.ascii	"\015\265C\006\353\037qr\221\364\007\021\007\037\266"
 525      EB1F7172 
 525      91F40711 
 525      071FB6
 526 004a 4BE0253D 		.ascii	"K\340%=\347)\301\216\036x\334s\016\337\3179\3479\004"
 526      E729C18E 
ARM GAS  e:\temp\ccEpTfL0.s 			page 40


 526      1E78DC73 
 526      0EDFCF39 
 526      E73904
 527 005d 0487530A 		.ascii	"\004\207S\012\361\214\336\026\372\240\004\344\273}!"
 527      F18CDE16 
 527      FAA004E4 
 527      BB7D21
 528 006c E26E0970 		.ascii	"\342n\011p\242\335\0201\211\030\376JK\342hb\375\275"
 528      A2DD1031 
 528      8918FE4A 
 528      4BE26862 
 528      FDBD
 529 007e FA235304 		.ascii	"\372#S\004sPi~\237\373\321\314%\320F\345\274>N\273\272"
 529      7350697E 
 529      9FFBD1CC 
 529      25D046E5 
 529      BC3E4EBB 
 530 0093 96B44EE8 		.ascii	"\226\264N\350\263_;\236\354\306\241~\220RR\324\244\300"
 530      B35F3B9E 
 530      ECC6A17E 
 530      905252D4 
 530      A4C0
 531 00a5 325AB184 		.ascii	"2Z\261\204V\366XA\027\201\367\362?\315f\345\201\240"
 531      56F65841 
 531      1781F7F2 
 531      3FCD66E5 
 531      81A0
 532 00b7 FCED7469 		.ascii	"\374\355ti\277\241s\221\211\3322l\022V\241\356\362X"
 532      BFA17391 
 532      89DA326C 
 532      1256A1EE 
 532      F258
 533 00c9 07597432 		.ascii	"\007Yt2\274\262\235\3166\251n\233\272\233={\343\354"
 533      BCB29DCE 
 533      36A96E9B 
 533      BA9B3D7B 
 533      E3EC
 534 00db C830B570 		.ascii	"\3100\265p\235y=\225\324E\355`\376\307\377\371\034\004"
 534      9D793D95 
 534      D445ED60 
 534      FEC7FFF9 
 534      1C04
 535 00ed 2FE7AA33 		.ascii	"/\347\2523\017\235\023\232\242\015\237\320\301\263\321"
 535      0F9D139A 
 535      A20D9FD0 
 535      C1B3D1
 536 00fc 489FE1A4 		.ascii	"H\237\341\244c\200;k}\005]\253%u\301|\\:\377\342i \015"
 536      63803B6B 
 536      7D055DAB 
 536      2575C17C 
 536      5C3AFFE2 
 537 0113 EAD2866C 		.ascii	"\352\322\206l.\256\010\316g1\245\344W\225\221 \333\212"
 537      2EAE08CE 
 537      6731A5E4 
 537      57959120 
 537      DB8A
 538 0125 B4150847 		.ascii	"\264\025\010G\026\263\251\257\007.>\212\204\300\032"
ARM GAS  e:\temp\ccEpTfL0.s 			page 41


 538      16B3A9AF 
 538      072E3E8A 
 538      84C01A
 539 0134 59FF4662 		.ascii	"Y\377Fb\326\264\212>\306$\225\274\013Q\366\016\371\374"
 539      D6B48A3E 
 539      C62495BC 
 539      0B51F60E 
 539      F9FC
 540 0146 E5A92B66 		.ascii	"\345\251+f\351I\255\037Q/\255nf\275\330;\371\326\270"
 540      E949AD1F 
 540      512FAD6E 
 540      66BDD83B 
 540      F9D6B8
 541 0159 800F716D 		.ascii	"\200\017qm\367%r\364\033\326y\027l`\001\242\214\272"
 541      F72572F4 
 541      1BD67917 
 541      6C6001A2 
 541      8CBA
 542 016b 2DC9B2CD 		.ascii	"-\311\262\315\\\256Z\214r\357\036\242\233u\321-\022"
 542      5CAE5A8C 
 542      72EF1EA2 
 542      9B75D12D 
 542      12
 543 017c 4D2A252E 		.ascii	"M*%.h'+S\301\355\274|\271+\332\205\326\245\274\375\271"
 543      68272B53 
 543      C1EDBC7C 
 543      B92BDA85 
 543      D6A5BCFD 
 544 0191 113222FE 		.ascii	"\0212\"\376\25014\320\037\036\213\004\014_o\177\330"
 544      A83134D0 
 544      1F1E8B04 
 544      0C5F6F7F 
 544      D8
 545 01a2 FBD4E71D 		.ascii	"\373\324\347\035\177\321\343\015\216<\011\010\367\313"
 545      7FD1E30D 
 545      8E3C0908 
 545      F7CB
 546 01b0 B150203A 		.ascii	"\261P :\034\0165\215F\214W^\17708\350\017\214\374\003"
 546      1C0E358D 
 546      468C575E 
 546      7F3038E8 
 546      0F8CFC03 
 547 01c4 8995C838 		.ascii	"\211\225\3108"
 548              		.text
 549              		.section	.gnu.lto_CySysWdtGetInterruptCallback.62416360,"",%progbits
 550 0000 789C6361 		.ascii	"x\234ca`d\000\001F \245\014\244\245Alf\006F\246\011"
 550      60640001 
 550      4620A50C 
 550      A4A5416C 
 550      660646A6 
 551 0015 E718181A 		.ascii	"\347\030\030\0329\230\030\031A\214\006\016F\206z&\306"
 551      39981819 
 551      418C060E 
 551      46867A26 
 551      C6
 552 0026 7AC6AF4C 		.ascii	"z\306\257L\177\231\030/\266l\230\303\374\205\251\025"
 552      7F99182F 
ARM GAS  e:\temp\ccEpTfL0.s 			page 42


 552      B66C98C3 
 552      FC85A915 
 553 0036 A88C05C8 		.ascii	"\250\214\005\310\375xv\326c>\020\227\221Q\001\310\235"
 553      FD7876D6 
 553      633E1097 
 553      915101C8 
 553      9D
 554 0047 DD70A993 		.ascii	"\335p\251\223]syCCS\303\203\326\347*\2537]h\340lefb"
 554      5D737943 
 554      4353C383 
 554      D6E72AAB 
 554      375D68E0 
 555 005f F8CFC4C0 		.ascii	"\370\317\304\300\270\202Q\206q9\243\014\310\216\225"
 555      B8825186 
 555      7139A30C 
 555      C88E95
 556 006e 8C9A0C40 		.ascii	"\214\232\014@\325\2176\376\233\312\313\326\322\000\004"
 556      D58F36FE 
 556      9BCACBD6 
 556      D20004
 557 007d 0A202540 		.ascii	"\012 %@\231U\214l 7\255\017:\320\360\377\177s\303\201"
 557      99558C6C 
 557      2037AD0F 
 557      3AD0F0FF 
 557      7F73C381 
 558 0091 DD6A575E 		.ascii	"\335jW^<W\001\232\0002\205\341\003\020\203\234\364\221"
 558      3C57019A 
 558      003285E1 
 558      0310839C 
 558      F491
 559 00a3 89094433 		.ascii	"\211\011D3?cl\232\266\361\374I;\220\266ff\220\363\246"
 559      3F636C9A 
 559      B6F1FC49 
 559      3B90B666 
 559      6690F3A6 
 560 00b7 B51E3ACF 		.ascii	"\265\036:\317\016r\0173#\310\206\235;\337\334f\257\377"
 560      0E720F33 
 560      23C8869D 
 560      3BDFDC66 
 560      AFFF
 561 00c9 DBD0D1D0 		.ascii	"\333\320\321\320 \000\024\353d\006\232\015\024~u\346"
 561      200014EB 
 561      64069A0D 
 561      147E75E6 
 562 00d9 EA11AEF9 		.ascii	"\352\021\256\371\214s\033\033\300\342L\214k\200\336"
 562      8C731B1B 
 562      C0E24C8C 
 562      6B80DE
 563 00e8 5B0D721B 		.ascii	"[\015r\033\343Z\306\371\214\014\257\030\231\240F\202"
 563      E35AC6F9 
 563      8C0CAF18 
 563      99A04682 
 564 00f8 82E70313 		.ascii	"\202\347\003\023#\3106 [\321=5/\265(\261$5%>8\277\264"
 564      23C83620 
 564      5BD13D35 
 564      2FB528B1 
 564      2435253E 
ARM GAS  e:\temp\ccEpTfL0.s 			page 43


 565 010f 28393526 		.ascii	"(95& 8\337\331$\306\271\322\307\3159'[/\231\001\000"
 565      2038DFD9 
 565      24C6B9D2 
 565      C7CD3927 
 565      5B2F9901 
 566 0124 622F6781 		.ascii	"b/g\201"
 567              		.text
 568              		.section	.gnu.lto_CySysWdtIsr.62416360,"",%progbits
 569 0000 789C6D8F 		.ascii	"x\234m\217\275K\003A\020\305gv\316$\004\205\374\001"
 569      BD4B0341 
 569      10C56776 
 569      CE240485 
 569      FC01
 570 0012 168A0189 		.ascii	"\026\212\001\211\205U\332T\007\332X\210)l\002\"\361"
 570      8555DA54 
 570      07DA5888 
 570      296C0222 
 570      F1
 571 0023 2A2581A0 		.ascii	"*%\201\240\2056\267\311\3450v6\2460H\312\363\023I%\327"
 571      8536B7C9 
 571      E5307636 
 571      A63048CA 
 571      F3134925 
 572 0038 1DC14611 		.ascii	"\035\301F\021\265\320*\215ZD\011\026\021\015V\361\234"
 572      B5D02A8D 
 572      5A440916 
 572      110D56F1 
 572      9C
 573 0049 BD943AB0 		.ascii	"\275\224:\260\314\362\336\333\231\337j\200\240j\221"
 573      CCF2DEDB 
 573      99DF6A80 
 573      A06A91
 574 0058 DB04F724 		.ascii	"\333\004\367$\037\034\002\024\273\267\000\305\210\020"
 574      1F1C0214 
 574      BBB700C5 
 574      8810
 575 0066 544B818C 		.ascii	"TK\201\214j\275\030\310aBm k\210\352\"#\010\246 \015"
 575      6ABD18C8 
 575      61426D20 
 575      6B88EA22 
 575      2308A620 
 576 007b 4DEC89BE 		.ascii	"M\354\211\276\300\346v\333\025\011Gr=\331\237\361}y"
 576      C0E676DB 
 576      15094772 
 576      3DD99FF1 
 576      7D79
 577 008d 2FC92600 		.ascii	"/\311&\000_\004;\000\035L\000\347^\032?{#\241\262\312"
 577      5F043B00 
 577      1D4C00E7 
 577      5E1A3F7B 
 577      23A1B2CA 
 578 00a1 8D0D4C3C 		.ascii	"\215\015L<\304\220\0029_\360\244\357[\322\253M>T\276"
 578      C4900239 
 578      5FF0A4EF 
 578      5BD2AB4D 
 578      3E54BE
 579 00b4 E321029B 		.ascii	"\343!\002\233X\357rF-\374\020Bujc\251\332x\275\332R"
ARM GAS  e:\temp\ccEpTfL0.s 			page 44


 579      58EF7246 
 579      2DFC1042 
 579      756A63A9 
 579      DA78BDDA 
 580 00c9 CF2C221E 		.ascii	"\317,\"\036Y\265\233w\341/a\223@\265\301u\337[a\263"
 580      59B59B77 
 580      E12F6193 
 580      40B5C175 
 580      DF5B61B3 
 581 00dd 2F2B52C6 		.ascii	"/+R\306X\333a\010%wn\036/\243u<(\312@'<f\364#\034e\200"
 581      58DB6108 
 581      25776E1E 
 581      2FA3753C 
 581      28CA4027 
 582 00f8 13AC233C 		.ascii	"\023\254#<c\271e\345\376\231\312\020x\252r\240 \010"
 582      63B965E5 
 582      FE99CA10 
 582      78AA72A0 
 582      2008
 583 010a 6A297A43 		.ascii	"j)zC\313k8\035Ti\3408\223j\201\253\005\210\312\276p"
 583      CB6B381D 
 583      5469E038 
 583      936A81AB 
 583      0588CABE 
 584 011f AE07F61F 		.ascii	"\256\007\366\037\"\364\231\023\360\014\315\340Y\007"
 584      22F49913 
 584      F00CCDE0 
 584      5907
 585 012d 4B9EEB4C 		.ascii	"K\236\353L\005YU]vy\010\377z|\326\310\031\205\345uc"
 585      0559555D 
 585      767908FF 
 585      7A7CD6C8 
 585      1985E575 
 586 0142 65299DDF 		.ascii	"e)\235\337(d\215\314|:\257'3\372\346\334\214\276\266"
 586      28648DCC 
 586      7C3AAF27 
 586      33FAE6DC 
 586      8CBEB6
 587 0155 3A9D855F 		.ascii	":\235\205_c\234\207z"
 587      639C877A 
 588              		.text
 589              		.section	.gnu.lto_.symbol_nodes.62416360,"",%progbits
 590 0000 789C55D1 		.ascii	"x\234U\321\271\015\302`\024\003`\277\377\310}\007R\303"
 590      B90DC260 
 590      140360BF 
 590      FFC87D07 
 590      52C3
 591 0012 A48E10F4 		.ascii	"\244\216\020\364\254\020\266\200!\330\001\211\015h\021"
 591      AC10B680 
 591      21D80189 
 591      0D6811
 592 0021 2212346E 		.ascii	"\"\0224n\\|\362k\236\003\014'\003\340&\002\347;@\330"
 592      5C7CF26B 
 592      9E030C27 
 592      03E02602 
 592      E73B40D8 
 593 0035 F5B8CC3B 		.ascii	"\365\270\314; n\261&\342\306\346\001\360\316h\377\006"
ARM GAS  e:\temp\ccEpTfL0.s 			page 45


 593      206EB126 
 593      E2C6E601 
 593      F0CE68FF 
 593      06
 594 0046 6EF37E3D 		.ascii	"n\363~=qt\012\236^!0(DF\205\204\211B\312T!c\246\220"
 594      71740A9E 
 594      5E213028 
 594      44468584 
 594      8942CA54 
 595 005e 33572858 		.ascii	"3W(X(\224,\025*V\0125k\205\206\215B\313V\241c\247\320"
 595      28942C15 
 595      2A560A35 
 595      6B85868D 
 595      42CB56A1 
 596 0075 B3178870 		.ascii	"\263\027\210p\277G\015\034\2649r\024\360)p)\374\324"
 596      BF470D1C 
 596      B4397214 
 596      F0297029 
 596      FCD4
 597 0087 E1F0F858 		.ascii	"\341\360\370X\230\360z?\327\021\276\300\012Uj"
 597      98F07A3F 
 597      D711BEC0 
 597      0A556A
 598              		.text
 599              		.section	.gnu.lto_.refs.62416360,"",%progbits
 600 0000 789C0DC4 		.ascii	"x\234\015\304\301\015\200 \024\005\301\335\007\011\211"
 600      C10D8020 
 600      1405C1DD 
 600      070989
 601 000f 27A21F0E 		.ascii	"'\242\037\016t`\377\015\352\034\246#/\320\300\201\323"
 601      7460FF0D 
 601      EA1CA623 
 601      2FD0C081 
 601      D3
 602 0020 9C36C885 		.ascii	"\2346\310\205\267Yy\250X\335E\351\376\343\003\034\022"
 602      B75979A8 
 602      58DD45E9 
 602      FEE3031C 
 602      12
 603 0031 0144     		.ascii	"\001D"
 604              		.text
 605              		.section	.gnu.lto_.decls.62416360,"",%progbits
 606 0000 789C9597 		.ascii	"x\234\225\227{LTW\036\307\357\271w\030\206\231\341\021"
 606      7B4C5457 
 606      1EC7EFB9 
 606      77188699 
 606      E111
 607 0012 53ADE9B2 		.ascii	"S\255\351\262Y\266\331F\376\"m\265\331\375k\263)]\255"
 607      59B6D946 
 607      FE226DB5 
 607      D9FD6BB3 
 607      295DAD
 608 0025 C9B2BB2D 		.ascii	"\311\262\273-\321\356\037&\355\200\023K\304\201\316"
 608      D1EE1F26 
 608      ED80134B 
 608      C481CE
 609 0034 0CD9B0D9 		.ascii	"\014\331\260\331d/\017y\324\335T\240\245\305@x)`\221"
ARM GAS  e:\temp\ccEpTfL0.s 			page 46


 609      642F0F79 
 609      D4DD54A0 
 609      A5C54078 
 609      296091
 610 0047 87CADB17 		.ascii	"\207\312\333\027/\005E\004A\244\210\274\004\255\014"
 610      2F054504 
 610      41A488BC 
 610      04AD0C
 611 0056 834EBB08 		.ascii	"\203N\273\010R\036\263\277s\316\275\3343\343Lqo\370"
 611      521EB3BF 
 611      73CEBDDC 
 611      33E34C71 
 611      6FF8
 612 0068 CD9DF3BB 		.ascii	"\315\235\363\273\277\357\347\367\273\277s\356\231\213"
 612      BFEFE7F7 
 612      BBBF73EE 
 612      998B
 613 0076 8A431C3E 		.ascii	"\212C\034>\266\371s\334\005\236\343~\343\303qN8\266"
 613      B6F973DC 
 613      059EE37E 
 613      E3C3714E 
 613      38B6
 614 0088 826F3F98 		.ascii	"\202o?\230\000\266\003\254\012\254\206\243\307+`-`\227"
 614      00B603AC 
 614      0AAC86A3 
 614      C72B602D 
 614      6097
 615 009a C0AE80B5 		.ascii	"\300\256\200\265\201u\200u\203\365\200\365\202\365\201"
 615      81758075 
 615      83F580F5 
 615      82F581
 616 00a9 0D820D81 		.ascii	"\015\202\015\201\015\203\215\200\215\202\215\201M\200"
 616      0D838D80 
 616      8D828D81 
 616      4D80
 617 00b7 4D81CD82 		.ascii	"M\201\315\202\331\301\236Hy\034`\013`K\234\353\201s"
 617      D9C19E48 
 617      791C600B 
 617      604B9CEB 
 617      8173
 618 00c9 69C0B648 		.ascii	"i\300\266H\271\033\231zpm\253`+R,\222\342y\211\345p"
 618      B91B997A 
 618      706DAB60 
 618      2B522C92 
 618      E27989E5 
 619 00de 63E19A55 		.ascii	"c\341\232U\322\275y\322^\342^<\256l\242\271\342A\323"
 619      D2BD79D2 
 619      5EE25E3C 
 619      AE6CA2B9 
 619      E241D3
 620 00f1 B689A6CD 		.ascii	"\266\211\246\315\203\246c\023M\207\007\015\356\271\216"
 620      83A66313 
 620      4D87070D 
 620      EEB98E
 621 0100 F3DE1B27 		.ascii	"\363\336\033'\313\001H\263\244\343%\355\317\365\012"
 621      CB0148B3 
 621      A4E325ED 
ARM GAS  e:\temp\ccEpTfL0.s 			page 47


 621      CFF50A
 622 010f CFA52FC3 		.ascii	"\317\245/\303\256\222\230<z\261\266\036\017\265\341"
 622      AE92983C 
 622      7AB1B61E 
 622      0FB5E1
 623 011e 752048F7 		.ascii	"u H\367\343\036\337\353!\276\217\271\1779~\007\243\351"
 623      E31EDFEB 
 623      21BE8FB9 
 623      7F397E07 
 623      A3E9
 624 0130 F3A01994 		.ascii	"\363\240\031\224j\334\357\241N\367\234\203\036\364x"
 624      6ADCEFA1 
 624      4EF79C83 
 624      1EF478
 625 013f 7DAA5F42 		.ascii	"}\252_B;\344A\213\327\265\217\233\326]7\354A7\362\177"
 625      3BE4418B 
 625      D7B58F9B 
 625      D65D37EC 
 625      4137F27F 
 626 0153 D43CE241 		.ascii	"\324<\342A?\372\2225\217z\320\342\347\357\347\326\330"
 626      3FFA9235 
 626      8F7AD0E2 
 626      E7EFE7D6 
 626      D8
 627 0164 9807CDC4 		.ascii	"\230\007\315\304&\232\011\017\232\251M4S\0364\263\222"
 627      269A090F 
 627      9AA94D34 
 627      531E34B3 
 627      92
 628 0175 46BEAF87 		.ascii	"F\276\257\207\370>\221\242\231\225\316\356\373\203}"
 628      F83E91A2 
 628      9995CEEE 
 628      FB837D
 629 0184 139DDD8B 		.ascii	"\023\235\335\213\016\357;>R\215\323\222\006k/J\327y"
 629      0EEF3B3E 
 629      528DD392 
 629      066B2F4A 
 629      D779
 630 0196 2966CC8B 		.ascii	")f\314\213~\215Gc\335\247+\205\005\036\355\320\"\274"
 630      7E8D4763 
 630      DDA72B85 
 630      051EEDD0 
 630      22BC
 631 01a8 6B0682AB 		.ascii	"k\006\202\253\306\336\274\354O]8bb\271bw\330\031\021"
 631      C6DEBCEC 
 631      4F5D3862 
 631      62B96277 
 631      D81911
 632 01bb 8EE3A2C8 		.ascii	"\216\343\242\310\363\212\364\306\304\303\037\375\004"
 632      F38AF4C6 
 632      C4C31FFD 
 632      04
 633 01c8 1D09BA9D 		.ascii	"\035\011\272\235Z\233\2171[\264H\005\303\037zOL\007"
 633      5A9B8F31 
 633      5BB44805 
 633      C31F7A4F 
 633      4C07
ARM GAS  e:\temp\ccEpTfL0.s 			page 48


 634 01da C0F0152D 		.ascii	"\300\360\025-\012Y\343\371\201<\373\204\032iC3D1Y<\236"
 634      0A59E3F9 
 634      813CFB84 
 634      1A694333 
 634      4431593C 
 635 01ef 226E799F 		.ascii	"\"ny\237CgP0\252D\301\034\252F\2418\325i\024\306\241"
 635      43675030 
 635      AA44C11C 
 635      AA46A138 
 635      D56914C6 
 636 0204 0A709683 		.ascii	"\012p\226\203\263\014\247\233\034j\372}\263(\006\241"
 636      B30CA79B 
 636      1C6AFA7D 
 636      B32806A1 
 637 0214 2AA445DF 		.ascii	"*\244E\337\"\201\204\300\215\354\320\342OpB\"\333\372"
 637      228184C0 
 637      8DECD0E2 
 637      4F704222 
 637      DBFA
 638 0226 D9F36AFD 		.ascii	"\331\363j\375\347\033\\\022+\2439T\203\364\244\207p"
 638      E71B5C12 
 638      2BA33954 
 638      83F4A487 
 638      70
 639 0237 86606741 		.ascii	"\206`gAu\205\337(\032A\360\374\313\335E\364\023\021"
 639      7585DF28 
 639      1A41F0FC 
 639      CBDD45F4 
 639      1311
 640 0249 E3A89121 		.ascii	"\343\250\221!|\341\311'\267\341\3328q\370\223\243\361"
 640      7CE1C927 
 640      B7E1DA38 
 640      71F893A3 
 640      F1
 641 025a C4A7C0C8 		.ascii	"\304\247\300\310\237|v\312\007\201(t$\211\320F\005T"
 641      9F7C76CA 
 641      07812874 
 641      2489D046 
 641      0554
 642 026c 45AFF352 		.ascii	"E\257\363R\030G\341\274\"`x\264\\\246&\344zOH\236\245"
 642      1847E1BC 
 642      226078B4 
 642      5CA626E4 
 642      7A4F489E 
 643 0281 F2969A47 		.ascii	"\362\226\232G\276\302.2K\315\025O\236#\025O\033\202"
 643      BEC22E32 
 643      4BCD154F 
 643      9E23154F 
 643      1B82
 644 0293 A254D8D7 		.ascii	"\242T\330\327Y\375y\245\206\370p\353\316!\342\274\352"
 644      59FD79A5 
 644      86F870EB 
 644      CE21E2BC 
 644      EA
 645 02a4 5C6A0DA4 		.ascii	"\\j\015\244\323\311\303p\300q\263@G\2473\010\206C\015"
 645      D3C9C370 
 645      C071B340 
ARM GAS  e:\temp\ccEpTfL0.s 			page 49


 645      47A73308 
 645      86430D
 646 02b7 47ED3AE1 		.ascii	"G\355:\341\003\214\344\237\236\254\250\325x\233\332"
 646      038CE49F 
 646      9EACA8D5 
 646      789BDA
 647 02c6 266F53DB 		.ascii	"&oS\333Z`\373[\212(\"\324\0109\033\334\246\0262,\215"
 647      5A60FB5B 
 647      8A2822D4 
 647      08391BDC 
 647      A616322C 
 648 02db A68FEBB6 		.ascii	"\246\217\353\266\347\342P1E\014\341I\\=\020\352\310"
 648      E7E25031 
 648      450CE149 
 648      5C3D10EA 
 648      C8
 649 02ec B436A3ED 		.ascii	"\2646\243\355\360y\036\251h\364rae\342\353Ebk\2558\371"
 649      F0791EA9 
 649      68F47261 
 649      65E2EB45 
 649      626BAD38 
 650 0301 EC5AC4C9 		.ascii	"\354Z\304\311\322\264\214~\320}B\342\320Y\205\016_\361"
 650      D2B48C7E 
 650      D07D42E2 
 650      D059850E 
 650      5FF1
 651 0313 A9168D42 		.ascii	"\251\026\215B\257Z\320\353 mxR]\246\023\376I\2723w9"
 651      AF5AD0EB 
 651      206D7852 
 651      5DA613FE 
 651      49BA3377 
 652 0328 CFE9CF26 		.ascii	"\317\351\317&\335\277\215\311y\221\344\214\222R&\215"
 652      DDBF8DC9 
 652      7991E48C 
 652      9252268D 
 653 0338 3D6BD043 		.ascii	"=k\320C\316\242Z\261u8M\310\023[\223A\305\343(tA\311"
 653      CEA25AB1 
 653      75384DC8 
 653      135B9341 
 653      C5E32874 
 654 034e 7881CD78 		.ascii	"x\201\315x\211d\254[X?\251\026\376\203H\312\274\376"
 654      8964AC5B 
 654      583FA916 
 654      FE8348CA 
 654      BCFE
 655 0360 2F179184 		.ascii	"/\027\221\204i\352\322\213\270\356?\020\310e\005r\231"
 655      69EAD28B 
 655      B8EE3F10 
 655      C8650572 
 655      99
 656 0371 855C2190 		.ascii	"\205\\!\220\322\257\317tk\204\002\0129\335\224\332\346"
 656      D2AFCF74 
 656      6B84020A 
 656      39DD94DA 
 656      E6
 657 0382 23416A7B 		.ascii	"#Aj{XH\253\002ie!m\004Rx\366\\\250\320L\031kkS\311\376"
 657      5848AB02 
ARM GAS  e:\temp\ccEpTfL0.s 			page 50


 657      6965216D 
 657      045278F6 
 657      5CA8D04C 
 658 039c 12E3DC2D 		.ascii	"\022\343\334-\226\321\2560\332YF\007a\224\2578\272\364"
 658      96D1AE30 
 658      DA594607 
 658      6194AF38 
 658      BAF4
 659 03ae C21DF492 		.ascii	"\302\035\364\222\313\353*]^\233Lo\027i\3655yz\347VS"
 659      CBEB2A5D 
 659      5E9B4C6F 
 659      1769F535 
 659      797AE756 
 660 03c3 C540A9B6 		.ascii	"\305@\251\266\306l\177\332\353$\036\207\241N\245\272"
 660      C66C7FDA 
 660      EB241E87 
 660      A14EA5BA 
 661 03d3 4EB6BA6E 		.ascii	"N\266\272nR]EFN\271\237`\243\325\331\355\231\213\032"
 661      525D4546 
 661      4EB99F60 
 661      A3D5D9ED 
 661      998B1A
 662 03e6 3669954B 		.ascii	"6i\225K\322\033.\363\333\337\327tO'\345\\[2d\245\210"
 662      D21B2EF3 
 662      DBDFD774 
 662      4F27E55C 
 662      5B3264A5 
 663 03fb 15200BC1 		.ascii	"\025 \013\301Q\350\272\222\363:\233\263\207\344L\177"
 663      51E8BA92 
 663      F33A9BB3 
 663      87E44C7F 
 664 040b 9495AE11 		.ascii	"\224\225\256\021Rx\222\263\250\254\353\230\237\204\031"
 664      527892B3 
 664      A8ACEB98 
 664      9F8419
 665 041a FCE9830D 		.ascii	"\374\351\203\015\014n\354M\005s\223\305\364\022LYr\322"
 665      0C6EEC4D 
 665      057393C5 
 665      F4124C59 
 665      72D2
 666 042c B45EC8A6 		.ascii	"\264^\310\246\230\344\213\363\323j\011\223\275\202\\"
 666      98E48BF3 
 666      D36A0993 
 666      BD825C
 667 043b 56DB2D05 		.ascii	"V\333-\005s\213\305\364\021LNg}\245^(\241\030\347d\335"
 667      738BC5F4 
 667      114C4E67 
 667      7DA55E28 
 667      A118E764 
 668 0450 717E632E 		.ascii	"q~c.\350\374\014\345;\006u^\027\375\000i\312my&\032"
 668      E8FC0CE5 
 668      3B06755E 
 668      17FD0069 
 668      CA6D7926 
 669 0465 0BC56279 		.ascii	"\013\305by\245\0150u@\030\352W\352\350g\353\030$u<X"
 669      A50D3075 
 669      4018EA57 
ARM GAS  e:\temp\ccEpTfL0.s 			page 51


 669      EAE867EB 
 669      1824753C 
 670 047a AB5C510B 		.ascii	"\253\\Q\013\347i\035\231\366\372\025\255\204\311Ywm"
 670      E7691D99 
 670      F6FA15AD 
 670      84C95977 
 670      6D
 671 048b EE1D0573 		.ascii	"\356\035\005s\207\305\014\021\314\343\236\351\031A\350"
 671      87C50C11 
 671      CCE39EE9 
 671      1941E8
 672 049a A498E73D 		.ascii	"\244\230\347=\343U2\246\177]\251\006c\356*\230\273,"
 672      E35532A6 
 672      7F5DA906 
 672      63EE2A98 
 672      BB2C
 673 04ac 6698608E 		.ascii	"f\230`\216\2555\211Za\210b\272\213\313\263|%L\236S\231"
 673      AD35895A 
 673      618862BA 
 673      8BCBB37C 
 673      254C9E53 
 674 04c1 237C53DF 		.ascii	"#|S\337)\230\357X\314\010\235#\307\314\031$\314QL\312"
 674      2998EF58 
 674      CC089D23 
 674      C7CC1924 
 674      CC514CCA 
 675 04d5 8DB42C79 		.ascii	"\215\264,y\225\2169]o\352\236\202\271\307bF\011f\275"
 675      958E395D 
 675      6FEA9E82 
 675      B9C76246 
 675      0966BD
 676 04e8 A7AB8D17 		.ascii	"\247\253\215\027\222\004\202Y\234\313\316\305-\236\004"
 676      92048259 
 676      9CCBCEC5 
 676      2D9E04
 677 04f7 4C61C987 		.ascii	"La\311\207.+\346\276\202\271\317b\306\010\306va|B/|"
 677      2E2BE6BE 
 677      82B9CF62 
 677      C608C676 
 677      617C422F 
 678 050c 43315F67 		.ascii	"C1_g\236\272%\257\230\373%\274\313\212\031W0\343,f\202"
 678      9EBA25AF 
 678      98FB25BC 
 678      CB8A1957 
 678      30E32C66 
 679 0521 608AF373 		.ascii	"`\212\363sV\220PM1m\275\217\263\002$\314\211RW\314\244"
 679      5690504D 
 679      316DBD8F 
 679      B30224CC 
 679      895257CC 
 680 0536 82996431 		.ascii	"\202\231d1S\004\363eF]\256\237p\215b\262\277J)\367e"
 680      5304F365 
 680      465DAE9F 
 680      708D62B2 
 680      BF4A29F7 
 681 054b 7FA5B15E 		.ascii	"\177\245\261^\371\225\236\206\335\202\222\360N\264\260"
 681      F9959E86 
ARM GAS  e:\temp\ccEpTfL0.s 			page 52


 681      DD8292F0 
 681      4EB4B0
 682 055a 5A2308D3 		.ascii	"Z#\010\323D\310g\365\332\346\365H\037\352E\212\036\301"
 682      44C867F5 
 682      DAE6F548 
 682      1FEA458A 
 682      1EC1
 683 056c 0F8CA2A6 		.ascii	"\017\214\242\246o\015\203\205\007\222\216\342\"\037"
 683      6F0D8385 
 683      07928EE2 
 683      221F
 684 057a C28519A5 		.ascii	"\302\205\031\245\310i\362.\2007\335/*\355j\362\030<"
 684      C869F22E 
 684      8037DD2F 
 684      2AED6AF2 
 684      183C
 685 058c DCD8A696 		.ascii	"\334\330\246\226[z\332\374\330\307\000_R\236\203\307"
 685      5B7ADAFC 
 685      D8C7005F 
 685      529E83C7 
 686 059c E439F85E 		.ascii	"\3449\370^~\0162\236\235\262I\273%\374\342\374\275\373"
 686      7E0E329E 
 686      9DB249BB 
 686      25FCE2FC 
 686      BDFB
 687 05ae EE8C286A 		.ascii	"\356\214(jU8\012=P\022>`\2732K\272\222z\376T\256\277"
 687      55380A3D 
 687      50123E60 
 687      BB324BBA 
 687      927AFE54 
 688 05c4 90A3225D 		.ascii	"\220\243\"]io+\253\326y\3179\347\262!]{p\377\246\274"
 688      696F2BAB 
 688      D679CF39 
 688      E7B2215D 
 688      7B70FFA6 
 689 05d9 4A9BCAE4 		.ascii	"J\233\312\344\231\330\202\243\220M\311ics\332\351\206"
 689      99D882A3 
 689      904DC969 
 689      6373DAE9 
 689      86
 690 05ea 943E9014 		.ascii	"\224>\220\024 \324\322\234\035\253\003\365\3623\223"
 690      20D4D29C 
 690      1DAB03F5 
 690      F23393
 691 05f9 57EEBABC 		.ascii	"W\356\272\274\346\025\314<\213yB0\365E\363\325\032\341"
 691      E615CC3C 
 691      8B794230 
 691      F545F3D5 
 691      1AE1
 692 060b 22C5E415 		.ascii	"\"\305\344\0254\234T\277Q*\026%\213\223\365\217>i\271"
 692      349C54BF 
 692      512A1625 
 692      8B93F58F 
 692      3E69B9
 693 061e 3C236664 		.ascii	"<#fd\323\027\265\247\224\302L\357S\014C\016\364\006"
 693      D317B5A7 
 693      94C24CEF 
ARM GAS  e:\temp\ccEpTfL0.s 			page 53


 693      530C430E 
 693      F406
 694 0630 08174E7C 		.ascii	"\010\027N|?\242_\240{/\006\331\372oD\0106\012\315O\036"
 694      3FA25FA0 
 694      7B2F06D9 
 694      FA6F4408 
 694      360ACD4F 
 695 0645 EBD509E9 		.ascii	"\353\325\011\351>dp\251\252\375\266?d\020Kp\213\377"
 695      3E6470A9 
 695      AAFDB63F 
 695      64104B70 
 695      8BFF
 696 0657 52772A4D 		.ascii	"Rw*M<\236\244!\272\377B\006\330\337\231\014?\202\347"
 696      3C9EA421 
 696      BAFF4206 
 696      D8DF990C 
 696      3F82E7
 697 066a 07BC1E16 		.ascii	"\007\274\036\026H\222\231\333_\014\343\227Q\334O\222"
 697      489299DB 
 697      5F0CE397 
 697      51DC4F92 
 698 067a 24C551A8 		.ascii	"$\305Q\250\026\012)8\367\344\267#:\012n-H\373%4RE\002"
 698      160A2938 
 698      F7E4B723 
 698      3A0A6E2D 
 698      48FB2534 
 699 0691 175FA81B 		.ascii	"\027_\250\033{\236a\352\022\241fN}u\317G\233\201\347"
 699      7B9E61EA 
 699      12A1664E 
 699      7D75CF47 
 699      9B81E7
 700 06a4 EA655E61 		.ascii	"\352e^aA\3212.\346\373\010\265$/?t\254\021\236\315P"
 700      41D1322E 
 700      E6FB08B5 
 700      242F3F74 
 700      AC119ECD 
 701 06b9 ADF46A5B 		.ascii	"\255\364j[\264/+\023/\322\025\270\241e\245\361\317\021"
 701      B42F2B13 
 701      2FD215B8 
 701      A165A5F1 
 701      CF11
 702 06cb 7E03F298 		.ascii	"~\003\362\230\344'\317I\026\237_\377\267\236}\266V\\"
 702      E427CF49 
 702      169F5FFF 
 702      B79E7DB6 
 702      565C
 703 06dd DE8057A5 		.ascii	"\336\200W\2457\340U\374\006,\224V\255\224\005\3005\374"
 703      37E055FC 
 703      062C9456 
 703      AD9405C0 
 703      35FC
 704 06ef A73D2142 		.ascii	"\247=!B\036\207\323\371/\247\323\0279!1q\210Y%\357e"
 704      1E87D3F9 
 704      2FA7D317 
 704      39213171 
 704      885925EF 
 705 0704 64BD461C 		.ascii	"d\275F\034\031\344\255\337\265\016\216\\\341\320:\214"
ARM GAS  e:\temp\ccEpTfL0.s 			page 54


 705      19E4ADDF 
 705      B50E8E5C 
 705      E1D03A8C 
 706 0714 D7705D4E 		.ascii	"\327p]N\362\"\336n+\256\360g\313hvy\304E\236\226\001"
 706      F222DE6E 
 706      2BAEF067 
 706      CB687679 
 706      C4459E96 
 707 0729 6708EEBD 		.ascii	"g\010\356\275:\370\215\257\320@\032\243\232\255)\316"
 707      3AF88DAF 
 707      D0401AA3 
 707      9AAD29CE 
 708 0739 D5223F5A 		.ascii	"\325\"?ZTh:&8\222\213B`\341\355\014FoB\202\243|(J\346"
 708      54683A26 
 708      38928B42 
 708      60E1ED0C 
 708      466F4282 
 709 0752 FD409DC2 		.ascii	"\375@\235\302\007\243T>\030\012\325\020\017)8\210|-"
 709      07A3543E 
 709      180AD510 
 709      0F293888 
 709      7C2D
 710 0764 93FF41E1 		.ascii	"\223\377A\341\360\020%\361\202\374O\016\036C\316\361"
 710      F01025F1 
 710      82FC4F0E 
 710      1E43CEF1 
 711 0774 918E3B2A 		.ascii	"\221\216;*\266@<\351J\201iR\201\370\254\331\363\347"
 711      B6403CE9 
 711      4A816952 
 711      81F8ACD9 
 711      F3E7
 712 0786 7D21E16F 		.ascii	"}!\341o\275\305\251\023bL\326\235o\377z\217\321d4\033"
 712      BDC5A913 
 712      624CD69D 
 712      6FFF7A8F 
 712      D164341B 
 713 079a ACC6831F 		.ascii	"\254\306\203\037G\306%\230\243\215\007\376\032\031\027"
 713      47C62598 
 713      A38D07FE 
 713      1A1917
 714 07a9 BEEB4074 		.ascii	"\276\353@t\24251\336h\011\373\224\013\016O\214L\264"
 714      A23531DE 
 714      6809FB94 
 714      0B0E4F8C 
 714      4CB4
 715 07bb 84C71EDE 		.ascii	"\204\307\036\336\033\033\027\036w$\336h\262@xX\274\301"
 715      1B1B171E 
 715      7724DE68 
 715      B2407858 
 715      BCC1
 716 07cd 6C0D7B   		.ascii	"l\015{"
 717 07d0 53139D68 		.ascii	"S\023\235h\261\032\254\011\026o\234\360\304?\355\006"
 717      B11AAC09 
 717      166F9CF0 
 717      C43FED06 
 718 07e0 6D583417 		.ascii	"mX4\027\304p\"\255\240\016tq\304\305\377\302= \302h"
 718      C47022AD 
ARM GAS  e:\temp\ccEpTfL0.s 			page 55


 718      A00E7471 
 718      C4C5FFC2 
 718      3D20C268 
 719 07f4 B024988D 		.ascii	"\260$\230\215G\214&\353kn\261\314\245\255\036\353\333"
 719      478C26EB 
 719      6B6EB1CC 
 719      A5AD1EEB 
 719      DB
 720 0805 4EBC1F1D 		.ascii	"N\274\037\035\264\3561Z\377h2D\305\032\017F\222B\003"
 720      B4EE315A 
 720      FF683244 
 720      C51A0F46 
 720      924203
 721 0818 E40BD41B 		.ascii	"\344\013\324\033(\017\337\213\261\340q\220<\2164Z#\014"
 721      280FDF8B 
 721      B1E07190 
 721      3C8E345A 
 721      230C
 722 082a D6E84F83 		.ascii	"\326\350O\203\030\320\013\216\360\270\004\271\000*\331"
 722      18D00B8E 
 722      F0B804B9 
 722      002AD9
 723 0839 7BC81467 		.ascii	"{\310\024g6\276\033c\265le\302\024\3576\331\033\036"
 723      36BE1B63 
 723      B56C65C2 
 723      14EF36D9 
 723      1B1E
 724 084b 6B3498F7 		.ascii	"k4\230\367\232\254F\2639!^AD\030,\2077\274\257\312\336"
 724      9AAC46B3 
 724      39215E41 
 724      44182C87 
 724      37BCAFCA 
 725 0860 7DA623AC 		.ascii	"}\246#\254?\230M(;\303\015\261\261Q\206\350\303\376"
 725      3F984D28 
 725      3BC30DB1 
 725      B15186E8 
 725      C3FE
 726 0872 D189182F 		.ascii	"\321\211\030/\2156\233\026yz\245:\335a:\371\342^\213"
 726      8D369B16 
 726      797AA53A 
 726      DD613AF9 
 726      E25E8B
 727 0885 19C0078D 		.ascii	"\031\300\007\215\261\206\304\335f\343g\357\377\343W"
 727      B186C4DD 
 727      66E367EF 
 727      FFE357
 728 0894 DEC13151 		.ascii	"\336\3011Q\030\033\2751\025\037&\230L1\246C\264\375"
 728      181BBD31 
 728      151F2698 
 728      4C31A643 
 728      B4FD
 729 08a6 61BB7EFB 		.ascii	"a\273~\373\273w^\365r1(Z\356\216\224\337\307l<\264\363"
 729      BB775EF5 
 729      7231285A 
 729      EE8E94DF 
 729      C76C3CB4 
 730 08bb 6D9F8FDF 		.ascii	"m\237\217\337\215\213\213\375\037\310ai\232"
ARM GAS  e:\temp\ccEpTfL0.s 			page 56


 730      8D8B8BFD 
 730      1FC86169 
 730      9A
 731              		.text
 732              		.section	.gnu.lto_.symtab.62416360,"",%progbits
 733 0000 43795379 		.ascii	"CySysClkIloStart\000"
 733      73436C6B 
 733      496C6F53 
 733      74617274 
 733      00
 734 0011 00       		.ascii	"\000"
 735 0012 00       		.ascii	"\000"
 736 0013 00       		.ascii	"\000"
 737 0014 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 737      00000000 
 738 001c BD000000 		.ascii	"\275\000\000\000"
 739 0020 43795379 		.ascii	"CySysClkIloStop\000"
 739      73436C6B 
 739      496C6F53 
 739      746F7000 
 740 0030 00       		.ascii	"\000"
 741 0031 00       		.ascii	"\000"
 742 0032 00       		.ascii	"\000"
 743 0033 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 743      00000000 
 744 003b BF000000 		.ascii	"\277\000\000\000"
 745 003f 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 745      73436C6B 
 745      496C6F53 
 745      74617274 
 745      4D656173 
 746 005b 00       		.ascii	"\000"
 747 005c 00       		.ascii	"\000"
 748 005d 00       		.ascii	"\000"
 749 005e 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 749      00000000 
 750 0066 C1000000 		.ascii	"\301\000\000\000"
 751 006a 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 751      73436C6B 
 751      496C6F53 
 751      746F704D 
 751      65617375 
 752 0085 00       		.ascii	"\000"
 753 0086 00       		.ascii	"\000"
 754 0087 00       		.ascii	"\000"
 755 0088 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 755      00000000 
 756 0090 C3000000 		.ascii	"\303\000\000\000"
 757 0094 43795379 		.ascii	"CySysClkIloCompensate\000"
 757      73436C6B 
 757      496C6F43 
 757      6F6D7065 
 757      6E736174 
 758 00aa 00       		.ascii	"\000"
 759 00ab 00       		.ascii	"\000"
 760 00ac 00       		.ascii	"\000"
 761 00ad 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
ARM GAS  e:\temp\ccEpTfL0.s 			page 57


 761      00000000 
 762 00b5 C8000000 		.ascii	"\310\000\000\000"
 763 00b9 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 763      73576474 
 763      47657445 
 763      6E61626C 
 763      65645374 
 764 00d2 00       		.ascii	"\000"
 765 00d3 00       		.ascii	"\000"
 766 00d4 00       		.ascii	"\000"
 767 00d5 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 767      00000000 
 768 00dd CB000000 		.ascii	"\313\000\000\000"
 769 00e1 43795379 		.ascii	"CySysWdtEnable\000"
 769      73576474 
 769      456E6162 
 769      6C6500
 770 00f0 00       		.ascii	"\000"
 771 00f1 00       		.ascii	"\000"
 772 00f2 00       		.ascii	"\000"
 773 00f3 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 773      00000000 
 774 00fb CD000000 		.ascii	"\315\000\000\000"
 775 00ff 43795379 		.ascii	"CySysWdtDisable\000"
 775      73576474 
 775      44697361 
 775      626C6500 
 776 010f 00       		.ascii	"\000"
 777 0110 00       		.ascii	"\000"
 778 0111 00       		.ascii	"\000"
 779 0112 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 779      00000000 
 780 011a CF000000 		.ascii	"\317\000\000\000"
 781 011e 43795379 		.ascii	"CySysWdtSetMatch\000"
 781      73576474 
 781      5365744D 
 781      61746368 
 781      00
 782 012f 00       		.ascii	"\000"
 783 0130 00       		.ascii	"\000"
 784 0131 00       		.ascii	"\000"
 785 0132 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 785      00000000 
 786 013a D3000000 		.ascii	"\323\000\000\000"
 787 013e 43795379 		.ascii	"CySysWdtGetMatch\000"
 787      73576474 
 787      4765744D 
 787      61746368 
 787      00
 788 014f 00       		.ascii	"\000"
 789 0150 00       		.ascii	"\000"
 790 0151 00       		.ascii	"\000"
 791 0152 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 791      00000000 
 792 015a D5000000 		.ascii	"\325\000\000\000"
 793 015e 43795379 		.ascii	"CySysWdtGetCount\000"
 793      73576474 
ARM GAS  e:\temp\ccEpTfL0.s 			page 58


 793      47657443 
 793      6F756E74 
 793      00
 794 016f 00       		.ascii	"\000"
 795 0170 00       		.ascii	"\000"
 796 0171 00       		.ascii	"\000"
 797 0172 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 797      00000000 
 798 017a D7000000 		.ascii	"\327\000\000\000"
 799 017e 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 799      73576474 
 799      53657449 
 799      676E6F72 
 799      65426974 
 800 0194 00       		.ascii	"\000"
 801 0195 00       		.ascii	"\000"
 802 0196 00       		.ascii	"\000"
 803 0197 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 803      00000000 
 804 019f D9000000 		.ascii	"\331\000\000\000"
 805 01a3 43795379 		.ascii	"CySysWdtGetIgnoreBits\000"
 805      73576474 
 805      47657449 
 805      676E6F72 
 805      65426974 
 806 01b9 00       		.ascii	"\000"
 807 01ba 00       		.ascii	"\000"
 808 01bb 00       		.ascii	"\000"
 809 01bc 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 809      00000000 
 810 01c4 DB000000 		.ascii	"\333\000\000\000"
 811 01c8 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 811      73576474 
 811      436C6561 
 811      72496E74 
 811      65727275 
 812 01df 00       		.ascii	"\000"
 813 01e0 00       		.ascii	"\000"
 814 01e1 00       		.ascii	"\000"
 815 01e2 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 815      00000000 
 816 01ea DD000000 		.ascii	"\335\000\000\000"
 817 01ee 43795379 		.ascii	"CySysWdtMaskInterrupt\000"
 817      73576474 
 817      4D61736B 
 817      496E7465 
 817      72727570 
 818 0204 00       		.ascii	"\000"
 819 0205 00       		.ascii	"\000"
 820 0206 00       		.ascii	"\000"
 821 0207 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 821      00000000 
 822 020f DF000000 		.ascii	"\337\000\000\000"
 823 0213 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 823      73576474 
 823      556E6D61 
 823      736B496E 
ARM GAS  e:\temp\ccEpTfL0.s 			page 59


 823      74657272 
 824 022b 00       		.ascii	"\000"
 825 022c 00       		.ascii	"\000"
 826 022d 00       		.ascii	"\000"
 827 022e 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 827      00000000 
 828 0236 E1000000 		.ascii	"\341\000\000\000"
 829 023a 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 829      73576474 
 829      53657449 
 829      6E746572 
 829      72757074 
 830 0257 00       		.ascii	"\000"
 831 0258 00       		.ascii	"\000"
 832 0259 00       		.ascii	"\000"
 833 025a 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 833      00000000 
 834 0262 E9000000 		.ascii	"\351\000\000\000"
 835 0266 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 835      73576474 
 835      47657449 
 835      6E746572 
 835      72757074 
 836 0283 00       		.ascii	"\000"
 837 0284 00       		.ascii	"\000"
 838 0285 00       		.ascii	"\000"
 839 0286 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 839      00000000 
 840 028e EC000000 		.ascii	"\354\000\000\000"
 841 0292 43795379 		.ascii	"CySysWdtIsr\000"
 841      73576474 
 841      49737200 
 842 029e 00       		.ascii	"\000"
 843 029f 00       		.ascii	"\000"
 844 02a0 00       		.ascii	"\000"
 845 02a1 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 845      00000000 
 846 02a9 EE000000 		.ascii	"\356\000\000\000"
 847 02ad 63796465 		.ascii	"cydelayFreqHz\000"
 847      6C617946 
 847      72657148 
 847      7A00
 848 02bb 00       		.ascii	"\000"
 849 02bc 02       		.ascii	"\002"
 850 02bd 00       		.ascii	"\000"
 851 02be 00000000 		.ascii	"\000\000\000\000\000\000\000\000"
 851      00000000 
 852 02c6 F0000000 		.ascii	"\360\000\000\000"
 853              		.text
 854              		.section	.gnu.lto_.opts,"",%progbits
 855 0000 272D666D 		.ascii	"'-fmath-errno' '-fsigned-zeros' '-ftrapping-math' '"
 855      6174682D 
 855      6572726E 
 855      6F272027 
 855      2D667369 
 856 0033 2D666E6F 		.ascii	"-fno-trapv' '-fno-openmp' '-fno-openacc' '-mcpu=cor"
 856      2D747261 
ARM GAS  e:\temp\ccEpTfL0.s 			page 60


 856      70762720 
 856      272D666E 
 856      6F2D6F70 
 857 0066 7465782D 		.ascii	"tex-m0' '-mthumb' '-g' '-Os' '-Werror' '-ffunction-"
 857      6D302720 
 857      272D6D74 
 857      68756D62 
 857      2720272D 
 858 0099 73656374 		.ascii	"sections' '-ffat-lto-objects' '-finline-functions' "
 858      696F6E73 
 858      2720272D 
 858      66666174 
 858      2D6C746F 
 859 00cc 272D666C 		.ascii	"'-flto' '-fno-strict-aliasing'\000"
 859      746F2720 
 859      272D666E 
 859      6F2D7374 
 859      72696374 
 860              		.text
 861              		.cfi_sections	.debug_frame
 862              		.section	.text.CySysClkIloStart,"ax",%progbits
 863              		.align	1
 864              		.global	CySysClkIloStart
 865              		.code	16
 866              		.thumb_func
 867              		.type	CySysClkIloStart, %function
 868              	CySysClkIloStart:
 869              	.LFB0:
 870              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.20
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
ARM GAS  e:\temp\ccEpTfL0.s 			page 61


  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
 871              		.loc 1 84 0
ARM GAS  e:\temp\ccEpTfL0.s 			page 62


 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
 876              		.loc 1 85 0
 877 0000 8021     		movs	r1, #128
 878 0002 034A     		ldr	r2, .L2
 879 0004 0906     		lsls	r1, r1, #24
 880 0006 1368     		ldr	r3, [r2]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
 881              		.loc 1 86 0
 882              		@ sp needed
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
 883              		.loc 1 85 0
 884 0008 0B43     		orrs	r3, r1
 885 000a 1360     		str	r3, [r2]
 886              		.loc 1 86 0
 887 000c 7047     		bx	lr
 888              	.L3:
 889 000e C046     		.align	2
 890              	.L2:
 891 0010 2C000340 		.word	1073938476
 892              		.cfi_endproc
 893              	.LFE0:
 894              		.size	CySysClkIloStart, .-CySysClkIloStart
 895              		.section	.text.CySysClkIloStop,"ax",%progbits
 896              		.align	1
 897              		.global	CySysClkIloStop
 898              		.code	16
 899              		.thumb_func
 900              		.type	CySysClkIloStop, %function
 901              	CySysClkIloStop:
 902              	.LFB1:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
ARM GAS  e:\temp\ccEpTfL0.s 			page 63


 903              		.loc 1 109 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907              		@ link register save eliminated.
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 908              		.loc 1 141 0
 909 0000 024A     		ldr	r2, .L5
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 910              		.loc 1 143 0
 911              		@ sp needed
 141:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 912              		.loc 1 141 0
 913 0002 1368     		ldr	r3, [r2]
 914 0004 5B00     		lsls	r3, r3, #1
 915 0006 5B08     		lsrs	r3, r3, #1
 916 0008 1360     		str	r3, [r2]
 917              		.loc 1 143 0
 918 000a 7047     		bx	lr
 919              	.L6:
 920              		.align	2
 921              	.L5:
 922 000c 2C000340 		.word	1073938476
 923              		.cfi_endproc
 924              	.LFE1:
ARM GAS  e:\temp\ccEpTfL0.s 			page 64


 925              		.size	CySysClkIloStop, .-CySysClkIloStop
 926              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 927              		.align	1
 928              		.global	CySysClkIloStartMeasurement
 929              		.code	16
 930              		.thumb_func
 931              		.type	CySysClkIloStartMeasurement, %function
 932              	CySysClkIloStartMeasurement:
 933              	.LFB2:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 934              		.loc 1 169 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 0
 937              		@ frame_needed = 0, uses_anonymous_args = 0
 938              		@ link register save eliminated.
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 939              		.loc 1 182 0
 940 0000 074A     		ldr	r2, .L8
 941 0002 084B     		ldr	r3, .L8+4
 942 0004 1168     		ldr	r1, [r2]
ARM GAS  e:\temp\ccEpTfL0.s 			page 65


 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 943              		.loc 1 187 0
 944              		@ sp needed
 182:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 945              		.loc 1 182 0
 946 0006 0B40     		ands	r3, r1
 947 0008 8021     		movs	r1, #128
 948 000a 4900     		lsls	r1, r1, #1
 949 000c 0B43     		orrs	r3, r1
 950 000e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 951              		.loc 1 185 0
 952 0010 054A     		ldr	r2, .L8+8
 953 0012 064B     		ldr	r3, .L8+12
 954 0014 1168     		ldr	r1, [r2]
 955 0016 0B40     		ands	r3, r1
 956 0018 0549     		ldr	r1, .L8+16
 957 001a 0B43     		orrs	r3, r1
 958 001c 1360     		str	r3, [r2]
 959              		.loc 1 187 0
 960 001e 7047     		bx	lr
 961              	.L9:
 962              		.align	2
 963              	.L8:
 964 0020 34000340 		.word	1073938484
 965 0024 FFF0FFFF 		.word	-3841
 966 0028 18000340 		.word	1073938456
 967 002c F0F0FFFF 		.word	-3856
 968 0030 08090000 		.word	2312
 969              		.cfi_endproc
 970              	.LFE2:
 971              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 972              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 973              		.align	1
 974              		.global	CySysClkIloStopMeasurement
 975              		.code	16
 976              		.thumb_func
 977              		.type	CySysClkIloStopMeasurement, %function
 978              	CySysClkIloStopMeasurement:
 979              	.LFB3:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
ARM GAS  e:\temp\ccEpTfL0.s 			page 66


 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 980              		.loc 1 202 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 985              		.loc 1 204 0
 986 0000 054A     		ldr	r2, .L11
 987 0002 064B     		ldr	r3, .L11+4
 988 0004 1168     		ldr	r1, [r2]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 989              		.loc 1 208 0
 990              		@ sp needed
 204:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 991              		.loc 1 204 0
 992 0006 0B40     		ands	r3, r1
 993 0008 1360     		str	r3, [r2]
 206:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 994              		.loc 1 206 0
 995 000a 054A     		ldr	r2, .L11+8
 996 000c 054B     		ldr	r3, .L11+12
 997 000e 1168     		ldr	r1, [r2]
 998 0010 0B40     		ands	r3, r1
 999 0012 1360     		str	r3, [r2]
 1000              		.loc 1 208 0
 1001 0014 7047     		bx	lr
 1002              	.L12:
 1003 0016 C046     		.align	2
 1004              	.L11:
 1005 0018 34000340 		.word	1073938484
 1006 001c FFF0FFFF 		.word	-3841
 1007 0020 18000340 		.word	1073938456
 1008 0024 0F0F0000 		.word	3855
 1009              		.cfi_endproc
 1010              	.LFE3:
 1011              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 1012              		.global	__aeabi_uidiv
 1013              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 1014              		.align	1
 1015              		.global	CySysClkIloCompensate
 1016              		.code	16
 1017              		.thumb_func
 1018              		.type	CySysClkIloCompensate, %function
 1019              	CySysClkIloCompensate:
 1020              	.LFB4:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
ARM GAS  e:\temp\ccEpTfL0.s 			page 67


 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 1021              		.loc 1 268 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
ARM GAS  e:\temp\ccEpTfL0.s 			page 68


 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL0:
 1026 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1027              		.cfi_def_cfa_offset 24
 1028              		.cfi_offset 3, -24
 1029              		.cfi_offset 4, -20
 1030              		.cfi_offset 5, -16
 1031              		.cfi_offset 6, -12
 1032              		.cfi_offset 7, -8
 1033              		.cfi_offset 14, -4
 1034              		.loc 1 268 0
 1035 0002 0F00     		movs	r7, r1
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 1036              		.loc 1 278 0
 1037 0004 8021     		movs	r1, #128
 1038              	.LVL1:
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 1039              		.loc 1 275 0
 1040 0006 2A4B     		ldr	r3, .L26
 1041              		.loc 1 278 0
 1042 0008 4900     		lsls	r1, r1, #1
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 1043              		.loc 1 275 0
 1044 000a 1A68     		ldr	r2, [r3]
 1045              	.LVL2:
 1046              		.loc 1 278 0
 1047 000c 294B     		ldr	r3, .L26+4
 1048 000e 1A40     		ands	r2, r3
 1049              	.LVL3:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
ARM GAS  e:\temp\ccEpTfL0.s 			page 69


 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 1050              		.loc 1 350 0
 1051 0010 1123     		movs	r3, #17
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 1052              		.loc 1 278 0
ARM GAS  e:\temp\ccEpTfL0.s 			page 70


 1053 0012 8A42     		cmp	r2, r1
 1054 0014 49D1     		bne	.L14
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 1055              		.loc 1 279 0 discriminator 1
 1056 0016 284A     		ldr	r2, .L26+8
 1057              	.LVL4:
 1058 0018 1168     		ldr	r1, [r2]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 1059              		.loc 1 278 0 discriminator 1
 1060 001a 284A     		ldr	r2, .L26+12
 1061 001c 9142     		cmp	r1, r2
 1062 001e 44D1     		bne	.L14
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 1063              		.loc 1 280 0
 1064 0020 0200     		movs	r2, r0
 1065 0022 2749     		ldr	r1, .L26+16
 1066 0024 643A     		subs	r2, r2, #100
 1067 0026 8A42     		cmp	r2, r1
 1068 0028 3FD8     		bhi	.L14
 281:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 1069              		.loc 1 281 0
 1070 002a 002F     		cmp	r7, #0
 1071 002c 3DD0     		beq	.L14
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 1072              		.loc 1 284 0
 1073 002e 254B     		ldr	r3, .L26+20
 1074 0030 2549     		ldr	r1, .L26+24
 1075 0032 1A68     		ldr	r2, [r3]
 1076 0034 002A     		cmp	r2, #0
 1077 0036 31D0     		beq	.L15
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 1078              		.loc 1 287 0
 1079 0038 0A68     		ldr	r2, [r1]
 337:Generated_Source\PSoC4/CyLFClk.c ****             }
 1080              		.loc 1 337 0
 1081 003a 0723     		movs	r3, #7
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 1082              		.loc 1 287 0
 1083 003c 002A     		cmp	r2, #0
 1084 003e 34DA     		bge	.L14
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1085              		.loc 1 289 0
 1086 0040 224E     		ldr	r6, .L26+28
 1087              		.loc 1 350 0
 1088 0042 0A33     		adds	r3, r3, #10
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 1089              		.loc 1 289 0
 1090 0044 3268     		ldr	r2, [r6]
 1091 0046 002A     		cmp	r2, #0
 1092 0048 2FD0     		beq	.L14
 1093              	.LVL5:
 1094              	.LBB4:
 1095              	.LBB5:
 310:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 1096              		.loc 1 310 0
 1097 004a 5333     		adds	r3, r3, #83
 1098 004c 4343     		muls	r3, r0
ARM GAS  e:\temp\ccEpTfL0.s 			page 71


 1099 004e 1C00     		movs	r4, r3
 1100 0050 1F4B     		ldr	r3, .L26+32
 1101 0052 2049     		ldr	r1, .L26+36
 1102 0054 E418     		adds	r4, r4, r3
 1103 0056 2000     		movs	r0, r4
 1104              	.LVL6:
 1105 0058 FFF7FEFF 		bl	__aeabi_uidiv
 1106              	.LVL7:
 1107 005c 1E4B     		ldr	r3, .L26+40
 1108 005e 0500     		movs	r5, r0
 1109              	.LVL8:
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 1110              		.loc 1 314 0
 1111 0060 1968     		ldr	r1, [r3]
 1112 0062 3068     		ldr	r0, [r6]
 1113              	.LVL9:
 312:Generated_Source\PSoC4/CyLFClk.c ****                         {
 1114              		.loc 1 312 0
 1115 0064 1D4A     		ldr	r2, .L26+44
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 1116              		.loc 1 314 0
 1117 0066 4843     		muls	r0, r1
 1118 0068 890A     		lsrs	r1, r1, #10
 312:Generated_Source\PSoC4/CyLFClk.c ****                         {
 1119              		.loc 1 312 0
 1120 006a 9542     		cmp	r5, r2
 1121 006c 0BD9     		bls	.L16
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 1122              		.loc 1 314 0
 1123 006e FFF7FEFF 		bl	__aeabi_uidiv
 1124              	.LVL10:
 1125 0072 2821     		movs	r1, #40
 1126 0074 FFF7FEFF 		bl	__aeabi_uidiv
 1127              	.LVL11:
 1128 0078 1949     		ldr	r1, .L26+48
 1129 007a 0500     		movs	r5, r0
 1130              	.LVL12:
 1131 007c 2000     		movs	r0, r4
 1132 007e FFF7FEFF 		bl	__aeabi_uidiv
 1133              	.LVL13:
 1134 0082 6843     		muls	r0, r5
 1135              	.LVL14:
 1136 0084 05E0     		b	.L17
 1137              	.LVL15:
 1138              	.L16:
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 1139              		.loc 1 320 0
 1140 0086 FFF7FEFF 		bl	__aeabi_uidiv
 1141              	.LVL16:
 1142 008a 1649     		ldr	r1, .L26+52
 1143 008c 6843     		muls	r0, r5
 1144 008e FFF7FEFF 		bl	__aeabi_uidiv
 1145              	.LVL17:
 1146              	.L17:
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 1147              		.loc 1 327 0
 1148 0092 0023     		movs	r3, #0
ARM GAS  e:\temp\ccEpTfL0.s 			page 72


 1149 0094 0B4A     		ldr	r2, .L26+20
 326:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 1150              		.loc 1 326 0
 1151 0096 3860     		str	r0, [r7]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 1152              		.loc 1 327 0
 1153 0098 1360     		str	r3, [r2]
 1154              	.LVL18:
 1155 009a 06E0     		b	.L14
 1156              	.LVL19:
 1157              	.L15:
 1158              	.LBE5:
 1159              	.LBE4:
 343:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 1160              		.loc 1 343 0
 1161 009c 0E4A     		ldr	r2, .L26+40
 1162 009e 1268     		ldr	r2, [r2]
 1163 00a0 920A     		lsrs	r2, r2, #10
 1164 00a2 0A60     		str	r2, [r1]
 344:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 1165              		.loc 1 344 0
 1166 00a4 0122     		movs	r2, #1
 1167 00a6 1A60     		str	r2, [r3]
 1168              	.LVL20:
 345:Generated_Source\PSoC4/CyLFClk.c ****         }
 1169              		.loc 1 345 0
 1170 00a8 0723     		movs	r3, #7
 1171              	.LVL21:
 1172              	.L14:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 1173              		.loc 1 354 0
 1174 00aa 1800     		movs	r0, r3
 1175              		@ sp needed
 1176              	.LVL22:
 1177 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1178              	.L27:
 1179 00ae C046     		.align	2
 1180              	.L26:
 1181 00b0 34000340 		.word	1073938484
 1182 00b4 0F0F0000 		.word	3855
 1183 00b8 18000340 		.word	1073938456
 1184 00bc 08090000 		.word	2312
 1185 00c0 1C841E00 		.word	1999900
 1186 00c4 00000000 		.word	.LANCHOR0
 1187 00c8 1C000340 		.word	1073938460
 1188 00cc 20000340 		.word	1073938464
 1189 00d0 71020000 		.word	625
 1190 00d4 C4090000 		.word	2500
 1191 00d8 00000000 		.word	cydelayFreqHz
 1192 00dc 60D10000 		.word	53600
 1193 00e0 A0252600 		.word	2500000
 1194 00e4 409C0000 		.word	40000
 1195              		.cfi_endproc
 1196              	.LFE4:
ARM GAS  e:\temp\ccEpTfL0.s 			page 73


 1197              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 1198              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 1199              		.align	1
 1200              		.global	CySysWdtGetEnabledStatus
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	CySysWdtGetEnabledStatus, %function
 1204              	CySysWdtGetEnabledStatus:
 1205              	.LFB5:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!CY_IP_CPUSS))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  e:\temp\ccEpTfL0.s 			page 74


 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
ARM GAS  e:\temp\ccEpTfL0.s 			page 75


 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
ARM GAS  e:\temp\ccEpTfL0.s 			page 76


 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
ARM GAS  e:\temp\ccEpTfL0.s 			page 77


 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired frequency) * 1000 / iloDesired frequency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  e:\temp\ccEpTfL0.s 			page 78


 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!CY_IP_CPUSS)) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c ****     *
 673:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 674:Generated_Source\PSoC4/CyLFClk.c ****     *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / 
 676:Generated_Source\PSoC4/CyLFClk.c ****     *  PSoC 4100M / PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c ****     *
 678:Generated_Source\PSoC4/CyLFClk.c ****     * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c ****     *
 682:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c ****     *
 684:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
ARM GAS  e:\temp\ccEpTfL0.s 			page 79


 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c **** 
 693:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 697:Generated_Source\PSoC4/CyLFClk.c ****     *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c ****     *
 699:Generated_Source\PSoC4/CyLFClk.c ****     * The switch between LFCLK sources must be done between the positive edges of
 700:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c ****     * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c ****     * changes.
 703:Generated_Source\PSoC4/CyLFClk.c ****     *
 704:Generated_Source\PSoC4/CyLFClk.c ****     * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c ****     * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c ****     * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c ****     * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c ****     *
 709:Generated_Source\PSoC4/CyLFClk.c ****     *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c ****     * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c ****     *
 713:Generated_Source\PSoC4/CyLFClk.c ****     * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c ****     * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c ****     *
 716:Generated_Source\PSoC4/CyLFClk.c ****     * \param
 717:Generated_Source\PSoC4/CyLFClk.c ****     * source
 718:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c ****     * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c ****     *
 722:Generated_Source\PSoC4/CyLFClk.c ****     * \details
 723:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c ****     * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c ****     *
 726:Generated_Source\PSoC4/CyLFClk.c ****     * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c ****     * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c ****     *
 729:Generated_Source\PSoC4/CyLFClk.c ****     * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c ****     * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c ****     * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c ****     *
 733:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
ARM GAS  e:\temp\ccEpTfL0.s 			page 80


 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 776:Generated_Source\PSoC4/CyLFClk.c **** 
 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
ARM GAS  e:\temp\ccEpTfL0.s 			page 81


 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  e:\temp\ccEpTfL0.s 			page 82


 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_BLESS)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_BLESS) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 882:Generated_Source\PSoC4/CyLFClk.c ****     * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c ****     *
 884:Generated_Source\PSoC4/CyLFClk.c ****     * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c ****     * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c ****     * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c ****     *
 888:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
 893:Generated_Source\PSoC4/CyLFClk.c ****     * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c ****     * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c ****     *
 896:Generated_Source\PSoC4/CyLFClk.c ****     * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c ****     * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c ****     *
 902:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c ****     * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c ****     * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c ****     * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c ****     * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c ****     * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c ****     * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c ****     * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c ****     *
 911:Generated_Source\PSoC4/CyLFClk.c ****     * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c ****     * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c ****     * clock source of WCO.
ARM GAS  e:\temp\ccEpTfL0.s 			page 83


 916:Generated_Source\PSoC4/CyLFClk.c ****     *
 917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 958:Generated_Source\PSoC4/CyLFClk.c **** 
 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
ARM GAS  e:\temp\ccEpTfL0.s 			page 84


 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  e:\temp\ccEpTfL0.s 			page 85


1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  e:\temp\ccEpTfL0.s 			page 86


1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
ARM GAS  e:\temp\ccEpTfL0.s 			page 87


1144:Generated_Source\PSoC4/CyLFClk.c ****     }
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  e:\temp\ccEpTfL0.s 			page 88


1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
1257:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  e:\temp\ccEpTfL0.s 			page 89


1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
1301:Generated_Source\PSoC4/CyLFClk.c ****     }
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  e:\temp\ccEpTfL0.s 			page 90


1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
ARM GAS  e:\temp\ccEpTfL0.s 			page 91


1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  e:\temp\ccEpTfL0.s 			page 92


1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
1485:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  e:\temp\ccEpTfL0.s 			page 93


1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  e:\temp\ccEpTfL0.s 			page 94


1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  e:\temp\ccEpTfL0.s 			page 95


1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  e:\temp\ccEpTfL0.s 			page 96


1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
ARM GAS  e:\temp\ccEpTfL0.s 			page 97


1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
ARM GAS  e:\temp\ccEpTfL0.s 			page 98


1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
1813:Generated_Source\PSoC4/CyLFClk.c **** 
1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
ARM GAS  e:\temp\ccEpTfL0.s 			page 99


1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  e:\temp\ccEpTfL0.s 			page 100


1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
 1206              		.loc 1 1919 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 1211              		.loc 1 1920 0
 1212 0000 034B     		ldr	r3, .L29
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
 1213              		.loc 1 1921 0
 1214              		@ sp needed
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 1215              		.loc 1 1920 0
 1216 0002 1868     		ldr	r0, [r3]
 1217 0004 034B     		ldr	r3, .L29+4
 1218 0006 C018     		adds	r0, r0, r3
 1219 0008 431E     		subs	r3, r0, #1
 1220 000a 9841     		sbcs	r0, r0, r3
 1221              		.loc 1 1921 0
 1222 000c 7047     		bx	lr
 1223              	.L30:
 1224 000e C046     		.align	2
ARM GAS  e:\temp\ccEpTfL0.s 			page 101


 1225              	.L29:
 1226 0010 38000340 		.word	1073938488
 1227 0014 9B771253 		.word	1393719195
 1228              		.cfi_endproc
 1229              	.LFE5:
 1230              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 1231              		.section	.text.CySysWdtEnable,"ax",%progbits
 1232              		.align	1
 1233              		.global	CySysWdtEnable
 1234              		.code	16
 1235              		.thumb_func
 1236              		.type	CySysWdtEnable, %function
 1237              	CySysWdtEnable:
 1238              	.LFB6:
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
 1239              		.loc 1 1938 0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 1244              		.loc 1 1939 0
 1245 0000 0022     		movs	r2, #0
 1246 0002 014B     		ldr	r3, .L32
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
 1247              		.loc 1 1940 0
 1248              		@ sp needed
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 1249              		.loc 1 1939 0
 1250 0004 1A60     		str	r2, [r3]
 1251              		.loc 1 1940 0
 1252 0006 7047     		bx	lr
 1253              	.L33:
 1254              		.align	2
 1255              	.L32:
 1256 0008 38000340 		.word	1073938488
 1257              		.cfi_endproc
 1258              	.LFE6:
 1259              		.size	CySysWdtEnable, .-CySysWdtEnable
 1260              		.section	.text.CySysWdtDisable,"ax",%progbits
 1261              		.align	1
ARM GAS  e:\temp\ccEpTfL0.s 			page 102


 1262              		.global	CySysWdtDisable
 1263              		.code	16
 1264              		.thumb_func
 1265              		.type	CySysWdtDisable, %function
 1266              	CySysWdtDisable:
 1267              	.LFB7:
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
 1268              		.loc 1 1954 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              		@ link register save eliminated.
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 1273              		.loc 1 1955 0
 1274 0000 014A     		ldr	r2, .L35
 1275 0002 024B     		ldr	r3, .L35+4
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
 1276              		.loc 1 1956 0
 1277              		@ sp needed
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 1278              		.loc 1 1955 0
 1279 0004 1A60     		str	r2, [r3]
 1280              		.loc 1 1956 0
 1281 0006 7047     		bx	lr
 1282              	.L36:
 1283              		.align	2
 1284              	.L35:
 1285 0008 6588EDAC 		.word	-1393719195
 1286 000c 38000340 		.word	1073938488
 1287              		.cfi_endproc
 1288              	.LFE7:
 1289              		.size	CySysWdtDisable, .-CySysWdtDisable
 1290              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 1291              		.align	1
 1292              		.global	CySysWdtSetMatch
 1293              		.code	16
 1294              		.thumb_func
 1295              		.type	CySysWdtSetMatch, %function
 1296              	CySysWdtSetMatch:
 1297              	.LFB8:
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
ARM GAS  e:\temp\ccEpTfL0.s 			page 103


1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
 1298              		.loc 1 1970 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 0
 1301              		@ frame_needed = 0, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
 1303              	.LVL23:
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
 1304              		.loc 1 1972 0
 1305 0000 034A     		ldr	r2, .L38
 1306 0002 80B2     		uxth	r0, r0
 1307              	.LVL24:
 1308 0004 1368     		ldr	r3, [r2]
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
 1309              		.loc 1 1973 0
 1310              		@ sp needed
1972:Generated_Source\PSoC4/CyLFClk.c ****     }
 1311              		.loc 1 1972 0
 1312 0006 1B0C     		lsrs	r3, r3, #16
 1313 0008 1B04     		lsls	r3, r3, #16
 1314 000a 1843     		orrs	r0, r3
 1315 000c 1060     		str	r0, [r2]
 1316              		.loc 1 1973 0
 1317 000e 7047     		bx	lr
 1318              	.L39:
 1319              		.align	2
 1320              	.L38:
 1321 0010 40000340 		.word	1073938496
 1322              		.cfi_endproc
 1323              	.LFE8:
 1324              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 1325              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 1326              		.align	1
 1327              		.global	CySysWdtGetMatch
 1328              		.code	16
 1329              		.thumb_func
 1330              		.type	CySysWdtGetMatch, %function
 1331              	CySysWdtGetMatch:
 1332              	.LFB9:
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  e:\temp\ccEpTfL0.s 			page 104


1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
 1333              		.loc 1 1986 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 0
 1336              		@ frame_needed = 0, uses_anonymous_args = 0
 1337              		@ link register save eliminated.
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 1338              		.loc 1 1987 0
 1339 0000 014B     		ldr	r3, .L41
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
 1340              		.loc 1 1988 0
 1341              		@ sp needed
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 1342              		.loc 1 1987 0
 1343 0002 1868     		ldr	r0, [r3]
 1344 0004 80B2     		uxth	r0, r0
 1345              		.loc 1 1988 0
 1346 0006 7047     		bx	lr
 1347              	.L42:
 1348              		.align	2
 1349              	.L41:
 1350 0008 40000340 		.word	1073938496
 1351              		.cfi_endproc
 1352              	.LFE9:
 1353              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 1354              		.section	.text.CySysWdtGetCount,"ax",%progbits
 1355              		.align	1
 1356              		.global	CySysWdtGetCount
 1357              		.code	16
 1358              		.thumb_func
 1359              		.type	CySysWdtGetCount, %function
 1360              	CySysWdtGetCount:
 1361              	.LFB10:
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
 1362              		.loc 1 2001 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 0, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 1367              		.loc 1 2002 0
ARM GAS  e:\temp\ccEpTfL0.s 			page 105


 1368 0000 014B     		ldr	r3, .L44
2003:Generated_Source\PSoC4/CyLFClk.c ****     }
 1369              		.loc 1 2003 0
 1370              		@ sp needed
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 1371              		.loc 1 2002 0
 1372 0002 1868     		ldr	r0, [r3]
 1373              		.loc 1 2003 0
 1374 0004 7047     		bx	lr
 1375              	.L45:
 1376 0006 C046     		.align	2
 1377              	.L44:
 1378 0008 3C000340 		.word	1073938492
 1379              		.cfi_endproc
 1380              	.LFE10:
 1381              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 1382              		.section	.text.CySysWdtSetIgnoreBits,"ax",%progbits
 1383              		.align	1
 1384              		.global	CySysWdtSetIgnoreBits
 1385              		.code	16
 1386              		.thumb_func
 1387              		.type	CySysWdtSetIgnoreBits, %function
 1388              	CySysWdtSetIgnoreBits:
 1389              	.LFB11:
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
 1390              		.loc 1 2021 0
 1391              		.cfi_startproc
 1392              		@ args = 0, pretend = 0, frame = 0
 1393              		@ frame_needed = 0, uses_anonymous_args = 0
 1394              	.LVL25:
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
 1395              		.loc 1 2023 0
 1396 0000 F021     		movs	r1, #240
2021:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 1397              		.loc 1 2021 0
 1398 0002 10B5     		push	{r4, lr}
 1399              		.cfi_def_cfa_offset 8
 1400              		.cfi_offset 4, -8
 1401              		.cfi_offset 14, -4
ARM GAS  e:\temp\ccEpTfL0.s 			page 106


 1402              		.loc 1 2023 0
 1403 0004 044C     		ldr	r4, .L47
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 1404              		.loc 1 2022 0
 1405 0006 0204     		lsls	r2, r0, #16
 1406              	.LVL26:
 1407              		.loc 1 2023 0
 1408 0008 044B     		ldr	r3, .L47+4
 1409 000a 2068     		ldr	r0, [r4]
 1410 000c 0903     		lsls	r1, r1, #12
 1411 000e 0A40     		ands	r2, r1
 1412              	.LVL27:
 1413 0010 0340     		ands	r3, r0
 1414 0012 1A43     		orrs	r2, r3
 1415 0014 2260     		str	r2, [r4]
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
 1416              		.loc 1 2024 0
 1417              		@ sp needed
 1418 0016 10BD     		pop	{r4, pc}
 1419              	.L48:
 1420              		.align	2
 1421              	.L47:
 1422 0018 40000340 		.word	1073938496
 1423 001c FFFFF0FF 		.word	-983041
 1424              		.cfi_endproc
 1425              	.LFE11:
 1426              		.size	CySysWdtSetIgnoreBits, .-CySysWdtSetIgnoreBits
 1427              		.section	.text.CySysWdtGetIgnoreBits,"ax",%progbits
 1428              		.align	1
 1429              		.global	CySysWdtGetIgnoreBits
 1430              		.code	16
 1431              		.thumb_func
 1432              		.type	CySysWdtGetIgnoreBits, %function
 1433              	CySysWdtGetIgnoreBits:
 1434              	.LFB12:
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
 1435              		.loc 1 2039 0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 0
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 1439              		@ link register save eliminated.
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 1440              		.loc 1 2040 0
ARM GAS  e:\temp\ccEpTfL0.s 			page 107


 1441 0000 024B     		ldr	r3, .L50
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
 1442              		.loc 1 2041 0
 1443              		@ sp needed
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 1444              		.loc 1 2040 0
 1445 0002 1868     		ldr	r0, [r3]
 1446 0004 0003     		lsls	r0, r0, #12
 1447 0006 000F     		lsrs	r0, r0, #28
 1448              		.loc 1 2041 0
 1449 0008 7047     		bx	lr
 1450              	.L51:
 1451 000a C046     		.align	2
 1452              	.L50:
 1453 000c 40000340 		.word	1073938496
 1454              		.cfi_endproc
 1455              	.LFE12:
 1456              		.size	CySysWdtGetIgnoreBits, .-CySysWdtGetIgnoreBits
 1457              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 1458              		.align	1
 1459              		.global	CySysWdtClearInterrupt
 1460              		.code	16
 1461              		.thumb_func
 1462              		.type	CySysWdtClearInterrupt, %function
 1463              	CySysWdtClearInterrupt:
 1464              	.LFB13:
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
 1465              		.loc 1 2056 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 0
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
 1469              		@ link register save eliminated.
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 1470              		.loc 1 2057 0
 1471 0000 0121     		movs	r1, #1
 1472 0002 024A     		ldr	r2, .L53
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
 1473              		.loc 1 2058 0
 1474              		@ sp needed
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 1475              		.loc 1 2057 0
 1476 0004 1368     		ldr	r3, [r2]
 1477 0006 0B43     		orrs	r3, r1
ARM GAS  e:\temp\ccEpTfL0.s 			page 108


 1478 0008 1360     		str	r3, [r2]
 1479              		.loc 1 2058 0
 1480 000a 7047     		bx	lr
 1481              	.L54:
 1482              		.align	2
 1483              	.L53:
 1484 000c 44000340 		.word	1073938500
 1485              		.cfi_endproc
 1486              	.LFE13:
 1487              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 1488              		.section	.text.CySysWdtMaskInterrupt,"ax",%progbits
 1489              		.align	1
 1490              		.global	CySysWdtMaskInterrupt
 1491              		.code	16
 1492              		.thumb_func
 1493              		.type	CySysWdtMaskInterrupt, %function
 1494              	CySysWdtMaskInterrupt:
 1495              	.LFB14:
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
 1496              		.loc 1 2071 0
 1497              		.cfi_startproc
 1498              		@ args = 0, pretend = 0, frame = 0
 1499              		@ frame_needed = 0, uses_anonymous_args = 0
 1500              		@ link register save eliminated.
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 1501              		.loc 1 2072 0
 1502 0000 0121     		movs	r1, #1
 1503 0002 024A     		ldr	r2, .L56
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
 1504              		.loc 1 2073 0
 1505              		@ sp needed
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 1506              		.loc 1 2072 0
 1507 0004 1368     		ldr	r3, [r2]
 1508 0006 8B43     		bics	r3, r1
 1509 0008 1360     		str	r3, [r2]
 1510              		.loc 1 2073 0
 1511 000a 7047     		bx	lr
 1512              	.L57:
 1513              		.align	2
 1514              	.L56:
 1515 000c 4C000340 		.word	1073938508
 1516              		.cfi_endproc
 1517              	.LFE14:
 1518              		.size	CySysWdtMaskInterrupt, .-CySysWdtMaskInterrupt
ARM GAS  e:\temp\ccEpTfL0.s 			page 109


 1519              		.section	.text.CySysWdtUnmaskInterrupt,"ax",%progbits
 1520              		.align	1
 1521              		.global	CySysWdtUnmaskInterrupt
 1522              		.code	16
 1523              		.thumb_func
 1524              		.type	CySysWdtUnmaskInterrupt, %function
 1525              	CySysWdtUnmaskInterrupt:
 1526              	.LFB15:
2074:Generated_Source\PSoC4/CyLFClk.c **** 
2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
 1527              		.loc 1 2086 0
 1528              		.cfi_startproc
 1529              		@ args = 0, pretend = 0, frame = 0
 1530              		@ frame_needed = 0, uses_anonymous_args = 0
 1531              		@ link register save eliminated.
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 1532              		.loc 1 2087 0
 1533 0000 0121     		movs	r1, #1
 1534 0002 024A     		ldr	r2, .L59
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
 1535              		.loc 1 2088 0
 1536              		@ sp needed
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 1537              		.loc 1 2087 0
 1538 0004 1368     		ldr	r3, [r2]
 1539 0006 0B43     		orrs	r3, r1
 1540 0008 1360     		str	r3, [r2]
 1541              		.loc 1 2088 0
 1542 000a 7047     		bx	lr
 1543              	.L60:
 1544              		.align	2
 1545              	.L59:
 1546 000c 4C000340 		.word	1073938508
 1547              		.cfi_endproc
 1548              	.LFE15:
 1549              		.size	CySysWdtUnmaskInterrupt, .-CySysWdtUnmaskInterrupt
 1550              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 1551              		.align	1
 1552              		.global	CySysWdtSetInterruptCallback
 1553              		.code	16
 1554              		.thumb_func
 1555              		.type	CySysWdtSetInterruptCallback, %function
 1556              	CySysWdtSetInterruptCallback:
 1557              	.LFB16:
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  e:\temp\ccEpTfL0.s 			page 110


2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
 1558              		.loc 1 2104 0
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 0
 1561              		@ frame_needed = 0, uses_anonymous_args = 0
 1562              		@ link register save eliminated.
 1563              	.LVL28:
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
 1564              		.loc 1 2107 0
 1565 0000 024B     		ldr	r3, .L62
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
 1566              		.loc 1 2111 0
 1567              		@ sp needed
2107:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 1568              		.loc 1 2107 0
 1569 0002 5A68     		ldr	r2, [r3, #4]
 1570              	.LVL29:
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 1571              		.loc 1 2108 0
 1572 0004 5860     		str	r0, [r3, #4]
 1573              		.loc 1 2111 0
 1574 0006 1000     		movs	r0, r2
 1575              	.LVL30:
 1576 0008 7047     		bx	lr
 1577              	.L63:
 1578 000a C046     		.align	2
 1579              	.L62:
 1580 000c 00000000 		.word	.LANCHOR0
 1581              		.cfi_endproc
 1582              	.LFE16:
 1583              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 1584              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 1585              		.align	1
 1586              		.global	CySysWdtGetInterruptCallback
 1587              		.code	16
 1588              		.thumb_func
 1589              		.type	CySysWdtGetInterruptCallback, %function
 1590              	CySysWdtGetInterruptCallback:
 1591              	.LFB17:
ARM GAS  e:\temp\ccEpTfL0.s 			page 111


2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
 1592              		.loc 1 2125 0
 1593              		.cfi_startproc
 1594              		@ args = 0, pretend = 0, frame = 0
 1595              		@ frame_needed = 0, uses_anonymous_args = 0
 1596              		@ link register save eliminated.
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 1597              		.loc 1 2126 0
 1598 0000 014B     		ldr	r3, .L65
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
 1599              		.loc 1 2127 0
 1600              		@ sp needed
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 1601              		.loc 1 2126 0
 1602 0002 5868     		ldr	r0, [r3, #4]
 1603              		.loc 1 2127 0
 1604 0004 7047     		bx	lr
 1605              	.L66:
 1606 0006 C046     		.align	2
 1607              	.L65:
 1608 0008 00000000 		.word	.LANCHOR0
 1609              		.cfi_endproc
 1610              	.LFE17:
 1611              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 1612              		.section	.text.CySysWdtIsr,"ax",%progbits
 1613              		.align	1
 1614              		.global	CySysWdtIsr
 1615              		.code	16
 1616              		.thumb_func
 1617              		.type	CySysWdtIsr, %function
 1618              	CySysWdtIsr:
 1619              	.LFB18:
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  e:\temp\ccEpTfL0.s 			page 112


2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
 1620              		.loc 1 2149 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 0
 1623              		@ frame_needed = 0, uses_anonymous_args = 0
 1624 0000 10B5     		push	{r4, lr}
 1625              		.cfi_def_cfa_offset 8
 1626              		.cfi_offset 4, -8
 1627              		.cfi_offset 14, -4
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
 1628              		.loc 1 2150 0
 1629 0002 044B     		ldr	r3, .L72
 1630 0004 5B68     		ldr	r3, [r3, #4]
 1631 0006 002B     		cmp	r3, #0
 1632 0008 00D0     		beq	.L68
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
 1633              		.loc 1 2152 0
 1634 000a 9847     		blx	r3
 1635              	.LVL31:
 1636              	.L68:
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
 1637              		.loc 1 2155 0
 1638 000c FFF7FEFF 		bl	CySysWdtClearInterrupt
 1639              	.LVL32:
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
 1640              		.loc 1 2156 0
 1641              		@ sp needed
 1642 0010 10BD     		pop	{r4, pc}
 1643              	.L73:
 1644 0012 C046     		.align	2
 1645              	.L72:
 1646 0014 00000000 		.word	.LANCHOR0
 1647              		.cfi_endproc
 1648              	.LFE18:
 1649              		.size	CySysWdtIsr, .-CySysWdtIsr
 1650              		.bss
 1651              		.align	2
 1652              		.set	.LANCHOR0,. + 0
 1653              		.type	compensateRunningStatus.4785, %object
 1654              		.size	compensateRunningStatus.4785, 4
 1655              	compensateRunningStatus.4785:
 1656 0000 00000000 		.space	4
 1657              		.type	cySysWdtCallback, %object
 1658              		.size	cySysWdtCallback, 4
 1659              	cySysWdtCallback:
ARM GAS  e:\temp\ccEpTfL0.s 			page 113


 1660 0004 00000000 		.space	4
 1661              		.text
 1662              	.Letext0:
 1663              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1664              		.file 3 "Generated_Source\\PSoC4\\CyLFClk.h"
 1665              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 1666              		.section	.debug_info,"",%progbits
 1667              	.Ldebug_info0:
 1668 0000 9D030000 		.4byte	0x39d
 1669 0004 0400     		.2byte	0x4
 1670 0006 00000000 		.4byte	.Ldebug_abbrev0
 1671 000a 04       		.byte	0x4
 1672 000b 01       		.uleb128 0x1
 1673 000c 23020000 		.4byte	.LASF47
 1674 0010 0C       		.byte	0xc
 1675 0011 B4000000 		.4byte	.LASF48
 1676 0015 C2030000 		.4byte	.LASF49
 1677 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1678 001d 00000000 		.4byte	0
 1679 0021 00000000 		.4byte	.Ldebug_line0
 1680 0025 02       		.uleb128 0x2
 1681 0026 01       		.byte	0x1
 1682 0027 06       		.byte	0x6
 1683 0028 B6030000 		.4byte	.LASF0
 1684 002c 02       		.uleb128 0x2
 1685 002d 01       		.byte	0x1
 1686 002e 08       		.byte	0x8
 1687 002f D5000000 		.4byte	.LASF1
 1688 0033 02       		.uleb128 0x2
 1689 0034 02       		.byte	0x2
 1690 0035 05       		.byte	0x5
 1691 0036 96030000 		.4byte	.LASF2
 1692 003a 02       		.uleb128 0x2
 1693 003b 02       		.byte	0x2
 1694 003c 07       		.byte	0x7
 1695 003d 21010000 		.4byte	.LASF3
 1696 0041 02       		.uleb128 0x2
 1697 0042 04       		.byte	0x4
 1698 0043 05       		.byte	0x5
 1699 0044 A0030000 		.4byte	.LASF4
 1700 0048 02       		.uleb128 0x2
 1701 0049 04       		.byte	0x4
 1702 004a 07       		.byte	0x7
 1703 004b 07010000 		.4byte	.LASF5
 1704 004f 02       		.uleb128 0x2
 1705 0050 08       		.byte	0x8
 1706 0051 05       		.byte	0x5
 1707 0052 4F030000 		.4byte	.LASF6
 1708 0056 02       		.uleb128 0x2
 1709 0057 08       		.byte	0x8
 1710 0058 07       		.byte	0x7
 1711 0059 F4010000 		.4byte	.LASF7
 1712 005d 03       		.uleb128 0x3
 1713 005e 04       		.byte	0x4
 1714 005f 05       		.byte	0x5
 1715 0060 696E7400 		.ascii	"int\000"
 1716 0064 02       		.uleb128 0x2
ARM GAS  e:\temp\ccEpTfL0.s 			page 114


 1717 0065 04       		.byte	0x4
 1718 0066 07       		.byte	0x7
 1719 0067 D2010000 		.4byte	.LASF8
 1720 006b 04       		.uleb128 0x4
 1721 006c CB010000 		.4byte	.LASF12
 1722 0070 02       		.byte	0x2
 1723 0071 E601     		.2byte	0x1e6
 1724 0073 48000000 		.4byte	0x48
 1725 0077 02       		.uleb128 0x2
 1726 0078 04       		.byte	0x4
 1727 0079 04       		.byte	0x4
 1728 007a AE000000 		.4byte	.LASF9
 1729 007e 02       		.uleb128 0x2
 1730 007f 08       		.byte	0x8
 1731 0080 04       		.byte	0x4
 1732 0081 4F010000 		.4byte	.LASF10
 1733 0085 02       		.uleb128 0x2
 1734 0086 01       		.byte	0x1
 1735 0087 08       		.byte	0x8
 1736 0088 6A030000 		.4byte	.LASF11
 1737 008c 04       		.uleb128 0x4
 1738 008d 19000000 		.4byte	.LASF13
 1739 0091 02       		.byte	0x2
 1740 0092 8602     		.2byte	0x286
 1741 0094 48000000 		.4byte	0x48
 1742 0098 04       		.uleb128 0x4
 1743 0099 22000000 		.4byte	.LASF14
 1744 009d 02       		.byte	0x2
 1745 009e 9002     		.2byte	0x290
 1746 00a0 A4000000 		.4byte	0xa4
 1747 00a4 05       		.uleb128 0x5
 1748 00a5 6B000000 		.4byte	0x6b
 1749 00a9 06       		.uleb128 0x6
 1750 00aa 04       		.byte	0x4
 1751 00ab AF000000 		.4byte	0xaf
 1752 00af 07       		.uleb128 0x7
 1753 00b0 08       		.uleb128 0x8
 1754 00b1 E9000000 		.4byte	.LASF15
 1755 00b5 03       		.byte	0x3
 1756 00b6 58       		.byte	0x58
 1757 00b7 A9000000 		.4byte	0xa9
 1758 00bb 02       		.uleb128 0x2
 1759 00bc 08       		.byte	0x8
 1760 00bd 04       		.byte	0x4
 1761 00be 66010000 		.4byte	.LASF16
 1762 00c2 02       		.uleb128 0x2
 1763 00c3 04       		.byte	0x4
 1764 00c4 07       		.byte	0x7
 1765 00c5 24030000 		.4byte	.LASF17
 1766 00c9 09       		.uleb128 0x9
 1767 00ca 4A040000 		.4byte	.LASF50
 1768 00ce 01       		.byte	0x1
 1769 00cf 0B01     		.2byte	0x10b
 1770 00d1 8C000000 		.4byte	0x8c
 1771 00d5 01       		.byte	0x1
 1772 00d6 2F010000 		.4byte	0x12f
 1773 00da 0A       		.uleb128 0xa
ARM GAS  e:\temp\ccEpTfL0.s 			page 115


 1774 00db 5D030000 		.4byte	.LASF18
 1775 00df 01       		.byte	0x1
 1776 00e0 0B01     		.2byte	0x10b
 1777 00e2 6B000000 		.4byte	0x6b
 1778 00e6 0A       		.uleb128 0xa
 1779 00e7 DF020000 		.4byte	.LASF19
 1780 00eb 01       		.byte	0x1
 1781 00ec 0B01     		.2byte	0x10b
 1782 00ee 2F010000 		.4byte	0x12f
 1783 00f2 0B       		.uleb128 0xb
 1784 00f3 47000000 		.4byte	.LASF20
 1785 00f7 01       		.byte	0x1
 1786 00f8 0D01     		.2byte	0x10d
 1787 00fa 6B000000 		.4byte	0x6b
 1788 00fe 0B       		.uleb128 0xb
 1789 00ff DF010000 		.4byte	.LASF21
 1790 0103 01       		.byte	0x1
 1791 0104 0E01     		.2byte	0x10e
 1792 0106 6B000000 		.4byte	0x6b
 1793 010a 0B       		.uleb128 0xb
 1794 010b 72010000 		.4byte	.LASF22
 1795 010f 01       		.byte	0x1
 1796 0110 0F01     		.2byte	0x10f
 1797 0112 6B000000 		.4byte	0x6b
 1798 0116 0B       		.uleb128 0xb
 1799 0117 6D000000 		.4byte	.LASF23
 1800 011b 01       		.byte	0x1
 1801 011c 1001     		.2byte	0x110
 1802 011e 6B000000 		.4byte	0x6b
 1803 0122 0B       		.uleb128 0xb
 1804 0123 A9030000 		.4byte	.LASF24
 1805 0127 01       		.byte	0x1
 1806 0128 1101     		.2byte	0x111
 1807 012a 8C000000 		.4byte	0x8c
 1808 012e 00       		.byte	0
 1809 012f 06       		.uleb128 0x6
 1810 0130 04       		.byte	0x4
 1811 0131 6B000000 		.4byte	0x6b
 1812 0135 0C       		.uleb128 0xc
 1813 0136 5C000000 		.4byte	.LASF25
 1814 013a 01       		.byte	0x1
 1815 013b 53       		.byte	0x53
 1816 013c 00000000 		.4byte	.LFB0
 1817 0140 14000000 		.4byte	.LFE0-.LFB0
 1818 0144 01       		.uleb128 0x1
 1819 0145 9C       		.byte	0x9c
 1820 0146 0C       		.uleb128 0xc
 1821 0147 F7000000 		.4byte	.LASF26
 1822 014b 01       		.byte	0x1
 1823 014c 6C       		.byte	0x6c
 1824 014d 00000000 		.4byte	.LFB1
 1825 0151 10000000 		.4byte	.LFE1-.LFB1
 1826 0155 01       		.uleb128 0x1
 1827 0156 9C       		.byte	0x9c
 1828 0157 0C       		.uleb128 0xc
 1829 0158 8F010000 		.4byte	.LASF27
 1830 015c 01       		.byte	0x1
ARM GAS  e:\temp\ccEpTfL0.s 			page 116


 1831 015d A8       		.byte	0xa8
 1832 015e 00000000 		.4byte	.LFB2
 1833 0162 34000000 		.4byte	.LFE2-.LFB2
 1834 0166 01       		.uleb128 0x1
 1835 0167 9C       		.byte	0x9c
 1836 0168 0C       		.uleb128 0xc
 1837 0169 34010000 		.4byte	.LASF28
 1838 016d 01       		.byte	0x1
 1839 016e C9       		.byte	0xc9
 1840 016f 00000000 		.4byte	.LFB3
 1841 0173 28000000 		.4byte	.LFE3-.LFB3
 1842 0177 01       		.uleb128 0x1
 1843 0178 9C       		.byte	0x9c
 1844 0179 0D       		.uleb128 0xd
 1845 017a C9000000 		.4byte	0xc9
 1846 017e 00000000 		.4byte	.LFB4
 1847 0182 E8000000 		.4byte	.LFE4-.LFB4
 1848 0186 01       		.uleb128 0x1
 1849 0187 9C       		.byte	0x9c
 1850 0188 13020000 		.4byte	0x213
 1851 018c 0E       		.uleb128 0xe
 1852 018d DA000000 		.4byte	0xda
 1853 0191 00000000 		.4byte	.LLST0
 1854 0195 0E       		.uleb128 0xe
 1855 0196 E6000000 		.4byte	0xe6
 1856 019a 3A000000 		.4byte	.LLST1
 1857 019e 0F       		.uleb128 0xf
 1858 019f F2000000 		.4byte	0xf2
 1859 01a3 0F       		.uleb128 0xf
 1860 01a4 FE000000 		.4byte	0xfe
 1861 01a8 10       		.uleb128 0x10
 1862 01a9 0A010000 		.4byte	0x10a
 1863 01ad 05       		.uleb128 0x5
 1864 01ae 03       		.byte	0x3
 1865 01af 00000000 		.4byte	compensateRunningStatus.4785
 1866 01b3 11       		.uleb128 0x11
 1867 01b4 16010000 		.4byte	0x116
 1868 01b8 66000000 		.4byte	.LLST2
 1869 01bc 11       		.uleb128 0x11
 1870 01bd 22010000 		.4byte	0x122
 1871 01c1 8A000000 		.4byte	.LLST3
 1872 01c5 12       		.uleb128 0x12
 1873 01c6 4A000000 		.4byte	.LBB4
 1874 01ca 52000000 		.4byte	.LBE4-.LBB4
 1875 01ce 0E       		.uleb128 0xe
 1876 01cf E6000000 		.4byte	0xe6
 1877 01d3 A9000000 		.4byte	.LLST4
 1878 01d7 0E       		.uleb128 0xe
 1879 01d8 DA000000 		.4byte	0xda
 1880 01dc BC000000 		.4byte	.LLST5
 1881 01e0 12       		.uleb128 0x12
 1882 01e1 4A000000 		.4byte	.LBB5
 1883 01e5 52000000 		.4byte	.LBE5-.LBB5
 1884 01e9 11       		.uleb128 0x11
 1885 01ea F2000000 		.4byte	0xf2
 1886 01ee DD000000 		.4byte	.LLST6
 1887 01f2 11       		.uleb128 0x11
ARM GAS  e:\temp\ccEpTfL0.s 			page 117


 1888 01f3 FE000000 		.4byte	0xfe
 1889 01f7 FB000000 		.4byte	.LLST7
 1890 01fb 0F       		.uleb128 0xf
 1891 01fc 16010000 		.4byte	0x116
 1892 0200 0F       		.uleb128 0xf
 1893 0201 22010000 		.4byte	0x122
 1894 0205 10       		.uleb128 0x10
 1895 0206 0A010000 		.4byte	0x10a
 1896 020a 05       		.uleb128 0x5
 1897 020b 03       		.byte	0x3
 1898 020c 00000000 		.4byte	compensateRunningStatus.4785
 1899 0210 00       		.byte	0
 1900 0211 00       		.byte	0
 1901 0212 00       		.byte	0
 1902 0213 13       		.uleb128 0x13
 1903 0214 00000000 		.4byte	.LASF31
 1904 0218 01       		.byte	0x1
 1905 0219 7E07     		.2byte	0x77e
 1906 021b 6B000000 		.4byte	0x6b
 1907 021f 00000000 		.4byte	.LFB5
 1908 0223 18000000 		.4byte	.LFE5-.LFB5
 1909 0227 01       		.uleb128 0x1
 1910 0228 9C       		.byte	0x9c
 1911 0229 14       		.uleb128 0x14
 1912 022a AB010000 		.4byte	.LASF29
 1913 022e 01       		.byte	0x1
 1914 022f 9107     		.2byte	0x791
 1915 0231 00000000 		.4byte	.LFB6
 1916 0235 0C000000 		.4byte	.LFE6-.LFB6
 1917 0239 01       		.uleb128 0x1
 1918 023a 9C       		.byte	0x9c
 1919 023b 14       		.uleb128 0x14
 1920 023c 56010000 		.4byte	.LASF30
 1921 0240 01       		.byte	0x1
 1922 0241 A107     		.2byte	0x7a1
 1923 0243 00000000 		.4byte	.LFB7
 1924 0247 10000000 		.4byte	.LFE7-.LFB7
 1925 024b 01       		.uleb128 0x1
 1926 024c 9C       		.byte	0x9c
 1927 024d 15       		.uleb128 0x15
 1928 024e 28000000 		.4byte	.LASF34
 1929 0252 01       		.byte	0x1
 1930 0253 B107     		.2byte	0x7b1
 1931 0255 00000000 		.4byte	.LFB8
 1932 0259 14000000 		.4byte	.LFE8-.LFB8
 1933 025d 01       		.uleb128 0x1
 1934 025e 9C       		.byte	0x9c
 1935 025f 74020000 		.4byte	0x274
 1936 0263 16       		.uleb128 0x16
 1937 0264 E3000000 		.4byte	.LASF36
 1938 0268 01       		.byte	0x1
 1939 0269 B107     		.2byte	0x7b1
 1940 026b 6B000000 		.4byte	0x6b
 1941 026f 24010000 		.4byte	.LLST8
 1942 0273 00       		.byte	0
 1943 0274 13       		.uleb128 0x13
 1944 0275 6F030000 		.4byte	.LASF32
ARM GAS  e:\temp\ccEpTfL0.s 			page 118


 1945 0279 01       		.byte	0x1
 1946 027a C107     		.2byte	0x7c1
 1947 027c 6B000000 		.4byte	0x6b
 1948 0280 00000000 		.4byte	.LFB9
 1949 0284 0C000000 		.4byte	.LFE9-.LFB9
 1950 0288 01       		.uleb128 0x1
 1951 0289 9C       		.byte	0x9c
 1952 028a 13       		.uleb128 0x13
 1953 028b BA010000 		.4byte	.LASF33
 1954 028f 01       		.byte	0x1
 1955 0290 D007     		.2byte	0x7d0
 1956 0292 6B000000 		.4byte	0x6b
 1957 0296 00000000 		.4byte	.LFB10
 1958 029a 0C000000 		.4byte	.LFE10-.LFB10
 1959 029e 01       		.uleb128 0x1
 1960 029f 9C       		.byte	0x9c
 1961 02a0 15       		.uleb128 0x15
 1962 02a1 80030000 		.4byte	.LASF35
 1963 02a5 01       		.byte	0x1
 1964 02a6 E407     		.2byte	0x7e4
 1965 02a8 00000000 		.4byte	.LFB11
 1966 02ac 20000000 		.4byte	.LFE11-.LFB11
 1967 02b0 01       		.uleb128 0x1
 1968 02b1 9C       		.byte	0x9c
 1969 02b2 C7020000 		.4byte	0x2c7
 1970 02b6 16       		.uleb128 0x16
 1971 02b7 19010000 		.4byte	.LASF37
 1972 02bb 01       		.byte	0x1
 1973 02bc E407     		.2byte	0x7e4
 1974 02be 6B000000 		.4byte	0x6b
 1975 02c2 5A010000 		.4byte	.LLST9
 1976 02c6 00       		.byte	0
 1977 02c7 13       		.uleb128 0x13
 1978 02c8 39030000 		.4byte	.LASF38
 1979 02cc 01       		.byte	0x1
 1980 02cd F607     		.2byte	0x7f6
 1981 02cf 6B000000 		.4byte	0x6b
 1982 02d3 00000000 		.4byte	.LFB12
 1983 02d7 10000000 		.4byte	.LFE12-.LFB12
 1984 02db 01       		.uleb128 0x1
 1985 02dc 9C       		.byte	0x9c
 1986 02dd 14       		.uleb128 0x14
 1987 02de 86000000 		.4byte	.LASF39
 1988 02e2 01       		.byte	0x1
 1989 02e3 0708     		.2byte	0x807
 1990 02e5 00000000 		.4byte	.LFB13
 1991 02e9 10000000 		.4byte	.LFE13-.LFB13
 1992 02ed 01       		.uleb128 0x1
 1993 02ee 9C       		.byte	0x9c
 1994 02ef 14       		.uleb128 0x14
 1995 02f0 0E030000 		.4byte	.LASF40
 1996 02f4 01       		.byte	0x1
 1997 02f5 1608     		.2byte	0x816
 1998 02f7 00000000 		.4byte	.LFB14
 1999 02fb 10000000 		.4byte	.LFE14-.LFB14
 2000 02ff 01       		.uleb128 0x1
 2001 0300 9C       		.byte	0x9c
ARM GAS  e:\temp\ccEpTfL0.s 			page 119


 2002 0301 14       		.uleb128 0x14
 2003 0302 0B020000 		.4byte	.LASF41
 2004 0306 01       		.byte	0x1
 2005 0307 2508     		.2byte	0x825
 2006 0309 00000000 		.4byte	.LFB15
 2007 030d 10000000 		.4byte	.LFE15-.LFB15
 2008 0311 01       		.uleb128 0x1
 2009 0312 9C       		.byte	0x9c
 2010 0313 17       		.uleb128 0x17
 2011 0314 F1020000 		.4byte	.LASF51
 2012 0318 01       		.byte	0x1
 2013 0319 3708     		.2byte	0x837
 2014 031b B0000000 		.4byte	0xb0
 2015 031f 00000000 		.4byte	.LFB16
 2016 0323 10000000 		.4byte	.LFE16-.LFB16
 2017 0327 01       		.uleb128 0x1
 2018 0328 9C       		.byte	0x9c
 2019 0329 4E030000 		.4byte	0x34e
 2020 032d 16       		.uleb128 0x16
 2021 032e 60040000 		.4byte	.LASF42
 2022 0332 01       		.byte	0x1
 2023 0333 3708     		.2byte	0x837
 2024 0335 B0000000 		.4byte	0xb0
 2025 0339 92010000 		.4byte	.LLST10
 2026 033d 18       		.uleb128 0x18
 2027 033e 79000000 		.4byte	.LASF45
 2028 0342 01       		.byte	0x1
 2029 0343 3908     		.2byte	0x839
 2030 0345 B0000000 		.4byte	0xb0
 2031 0349 B4010000 		.4byte	.LLST11
 2032 034d 00       		.byte	0
 2033 034e 13       		.uleb128 0x13
 2034 034f 2D040000 		.4byte	.LASF43
 2035 0353 01       		.byte	0x1
 2036 0354 4C08     		.2byte	0x84c
 2037 0356 B0000000 		.4byte	0xb0
 2038 035a 00000000 		.4byte	.LFB17
 2039 035e 0C000000 		.4byte	.LFE17-.LFB17
 2040 0362 01       		.uleb128 0x1
 2041 0363 9C       		.byte	0x9c
 2042 0364 19       		.uleb128 0x19
 2043 0365 2D030000 		.4byte	.LASF44
 2044 0369 01       		.byte	0x1
 2045 036a 6408     		.2byte	0x864
 2046 036c 00000000 		.4byte	.LFB18
 2047 0370 18000000 		.4byte	.LFE18-.LFB18
 2048 0374 01       		.uleb128 0x1
 2049 0375 9C       		.byte	0x9c
 2050 0376 84030000 		.4byte	0x384
 2051 037a 1A       		.uleb128 0x1a
 2052 037b 10000000 		.4byte	.LVL32
 2053 037f DD020000 		.4byte	0x2dd
 2054 0383 00       		.byte	0
 2055 0384 1B       		.uleb128 0x1b
 2056 0385 9D000000 		.4byte	.LASF46
 2057 0389 01       		.byte	0x1
 2058 038a 46       		.byte	0x46
ARM GAS  e:\temp\ccEpTfL0.s 			page 120


 2059 038b B0000000 		.4byte	0xb0
 2060 038f 05       		.uleb128 0x5
 2061 0390 03       		.byte	0x3
 2062 0391 04000000 		.4byte	cySysWdtCallback
 2063 0395 1C       		.uleb128 0x1c
 2064 0396 39000000 		.4byte	.LASF52
 2065 039a 04       		.byte	0x4
 2066 039b D4       		.byte	0xd4
 2067 039c 6B000000 		.4byte	0x6b
 2068 03a0 00       		.byte	0
 2069              		.section	.debug_abbrev,"",%progbits
 2070              	.Ldebug_abbrev0:
 2071 0000 01       		.uleb128 0x1
 2072 0001 11       		.uleb128 0x11
 2073 0002 01       		.byte	0x1
 2074 0003 25       		.uleb128 0x25
 2075 0004 0E       		.uleb128 0xe
 2076 0005 13       		.uleb128 0x13
 2077 0006 0B       		.uleb128 0xb
 2078 0007 03       		.uleb128 0x3
 2079 0008 0E       		.uleb128 0xe
 2080 0009 1B       		.uleb128 0x1b
 2081 000a 0E       		.uleb128 0xe
 2082 000b 55       		.uleb128 0x55
 2083 000c 17       		.uleb128 0x17
 2084 000d 11       		.uleb128 0x11
 2085 000e 01       		.uleb128 0x1
 2086 000f 10       		.uleb128 0x10
 2087 0010 17       		.uleb128 0x17
 2088 0011 00       		.byte	0
 2089 0012 00       		.byte	0
 2090 0013 02       		.uleb128 0x2
 2091 0014 24       		.uleb128 0x24
 2092 0015 00       		.byte	0
 2093 0016 0B       		.uleb128 0xb
 2094 0017 0B       		.uleb128 0xb
 2095 0018 3E       		.uleb128 0x3e
 2096 0019 0B       		.uleb128 0xb
 2097 001a 03       		.uleb128 0x3
 2098 001b 0E       		.uleb128 0xe
 2099 001c 00       		.byte	0
 2100 001d 00       		.byte	0
 2101 001e 03       		.uleb128 0x3
 2102 001f 24       		.uleb128 0x24
 2103 0020 00       		.byte	0
 2104 0021 0B       		.uleb128 0xb
 2105 0022 0B       		.uleb128 0xb
 2106 0023 3E       		.uleb128 0x3e
 2107 0024 0B       		.uleb128 0xb
 2108 0025 03       		.uleb128 0x3
 2109 0026 08       		.uleb128 0x8
 2110 0027 00       		.byte	0
 2111 0028 00       		.byte	0
 2112 0029 04       		.uleb128 0x4
 2113 002a 16       		.uleb128 0x16
 2114 002b 00       		.byte	0
 2115 002c 03       		.uleb128 0x3
ARM GAS  e:\temp\ccEpTfL0.s 			page 121


 2116 002d 0E       		.uleb128 0xe
 2117 002e 3A       		.uleb128 0x3a
 2118 002f 0B       		.uleb128 0xb
 2119 0030 3B       		.uleb128 0x3b
 2120 0031 05       		.uleb128 0x5
 2121 0032 49       		.uleb128 0x49
 2122 0033 13       		.uleb128 0x13
 2123 0034 00       		.byte	0
 2124 0035 00       		.byte	0
 2125 0036 05       		.uleb128 0x5
 2126 0037 35       		.uleb128 0x35
 2127 0038 00       		.byte	0
 2128 0039 49       		.uleb128 0x49
 2129 003a 13       		.uleb128 0x13
 2130 003b 00       		.byte	0
 2131 003c 00       		.byte	0
 2132 003d 06       		.uleb128 0x6
 2133 003e 0F       		.uleb128 0xf
 2134 003f 00       		.byte	0
 2135 0040 0B       		.uleb128 0xb
 2136 0041 0B       		.uleb128 0xb
 2137 0042 49       		.uleb128 0x49
 2138 0043 13       		.uleb128 0x13
 2139 0044 00       		.byte	0
 2140 0045 00       		.byte	0
 2141 0046 07       		.uleb128 0x7
 2142 0047 15       		.uleb128 0x15
 2143 0048 00       		.byte	0
 2144 0049 27       		.uleb128 0x27
 2145 004a 19       		.uleb128 0x19
 2146 004b 00       		.byte	0
 2147 004c 00       		.byte	0
 2148 004d 08       		.uleb128 0x8
 2149 004e 16       		.uleb128 0x16
 2150 004f 00       		.byte	0
 2151 0050 03       		.uleb128 0x3
 2152 0051 0E       		.uleb128 0xe
 2153 0052 3A       		.uleb128 0x3a
 2154 0053 0B       		.uleb128 0xb
 2155 0054 3B       		.uleb128 0x3b
 2156 0055 0B       		.uleb128 0xb
 2157 0056 49       		.uleb128 0x49
 2158 0057 13       		.uleb128 0x13
 2159 0058 00       		.byte	0
 2160 0059 00       		.byte	0
 2161 005a 09       		.uleb128 0x9
 2162 005b 2E       		.uleb128 0x2e
 2163 005c 01       		.byte	0x1
 2164 005d 3F       		.uleb128 0x3f
 2165 005e 19       		.uleb128 0x19
 2166 005f 03       		.uleb128 0x3
 2167 0060 0E       		.uleb128 0xe
 2168 0061 3A       		.uleb128 0x3a
 2169 0062 0B       		.uleb128 0xb
 2170 0063 3B       		.uleb128 0x3b
 2171 0064 05       		.uleb128 0x5
 2172 0065 27       		.uleb128 0x27
ARM GAS  e:\temp\ccEpTfL0.s 			page 122


 2173 0066 19       		.uleb128 0x19
 2174 0067 49       		.uleb128 0x49
 2175 0068 13       		.uleb128 0x13
 2176 0069 20       		.uleb128 0x20
 2177 006a 0B       		.uleb128 0xb
 2178 006b 01       		.uleb128 0x1
 2179 006c 13       		.uleb128 0x13
 2180 006d 00       		.byte	0
 2181 006e 00       		.byte	0
 2182 006f 0A       		.uleb128 0xa
 2183 0070 05       		.uleb128 0x5
 2184 0071 00       		.byte	0
 2185 0072 03       		.uleb128 0x3
 2186 0073 0E       		.uleb128 0xe
 2187 0074 3A       		.uleb128 0x3a
 2188 0075 0B       		.uleb128 0xb
 2189 0076 3B       		.uleb128 0x3b
 2190 0077 05       		.uleb128 0x5
 2191 0078 49       		.uleb128 0x49
 2192 0079 13       		.uleb128 0x13
 2193 007a 00       		.byte	0
 2194 007b 00       		.byte	0
 2195 007c 0B       		.uleb128 0xb
 2196 007d 34       		.uleb128 0x34
 2197 007e 00       		.byte	0
 2198 007f 03       		.uleb128 0x3
 2199 0080 0E       		.uleb128 0xe
 2200 0081 3A       		.uleb128 0x3a
 2201 0082 0B       		.uleb128 0xb
 2202 0083 3B       		.uleb128 0x3b
 2203 0084 05       		.uleb128 0x5
 2204 0085 49       		.uleb128 0x49
 2205 0086 13       		.uleb128 0x13
 2206 0087 00       		.byte	0
 2207 0088 00       		.byte	0
 2208 0089 0C       		.uleb128 0xc
 2209 008a 2E       		.uleb128 0x2e
 2210 008b 00       		.byte	0
 2211 008c 3F       		.uleb128 0x3f
 2212 008d 19       		.uleb128 0x19
 2213 008e 03       		.uleb128 0x3
 2214 008f 0E       		.uleb128 0xe
 2215 0090 3A       		.uleb128 0x3a
 2216 0091 0B       		.uleb128 0xb
 2217 0092 3B       		.uleb128 0x3b
 2218 0093 0B       		.uleb128 0xb
 2219 0094 27       		.uleb128 0x27
 2220 0095 19       		.uleb128 0x19
 2221 0096 11       		.uleb128 0x11
 2222 0097 01       		.uleb128 0x1
 2223 0098 12       		.uleb128 0x12
 2224 0099 06       		.uleb128 0x6
 2225 009a 40       		.uleb128 0x40
 2226 009b 18       		.uleb128 0x18
 2227 009c 9742     		.uleb128 0x2117
 2228 009e 19       		.uleb128 0x19
 2229 009f 00       		.byte	0
ARM GAS  e:\temp\ccEpTfL0.s 			page 123


 2230 00a0 00       		.byte	0
 2231 00a1 0D       		.uleb128 0xd
 2232 00a2 2E       		.uleb128 0x2e
 2233 00a3 01       		.byte	0x1
 2234 00a4 31       		.uleb128 0x31
 2235 00a5 13       		.uleb128 0x13
 2236 00a6 11       		.uleb128 0x11
 2237 00a7 01       		.uleb128 0x1
 2238 00a8 12       		.uleb128 0x12
 2239 00a9 06       		.uleb128 0x6
 2240 00aa 40       		.uleb128 0x40
 2241 00ab 18       		.uleb128 0x18
 2242 00ac 9642     		.uleb128 0x2116
 2243 00ae 19       		.uleb128 0x19
 2244 00af 01       		.uleb128 0x1
 2245 00b0 13       		.uleb128 0x13
 2246 00b1 00       		.byte	0
 2247 00b2 00       		.byte	0
 2248 00b3 0E       		.uleb128 0xe
 2249 00b4 05       		.uleb128 0x5
 2250 00b5 00       		.byte	0
 2251 00b6 31       		.uleb128 0x31
 2252 00b7 13       		.uleb128 0x13
 2253 00b8 02       		.uleb128 0x2
 2254 00b9 17       		.uleb128 0x17
 2255 00ba 00       		.byte	0
 2256 00bb 00       		.byte	0
 2257 00bc 0F       		.uleb128 0xf
 2258 00bd 34       		.uleb128 0x34
 2259 00be 00       		.byte	0
 2260 00bf 31       		.uleb128 0x31
 2261 00c0 13       		.uleb128 0x13
 2262 00c1 00       		.byte	0
 2263 00c2 00       		.byte	0
 2264 00c3 10       		.uleb128 0x10
 2265 00c4 34       		.uleb128 0x34
 2266 00c5 00       		.byte	0
 2267 00c6 31       		.uleb128 0x31
 2268 00c7 13       		.uleb128 0x13
 2269 00c8 02       		.uleb128 0x2
 2270 00c9 18       		.uleb128 0x18
 2271 00ca 00       		.byte	0
 2272 00cb 00       		.byte	0
 2273 00cc 11       		.uleb128 0x11
 2274 00cd 34       		.uleb128 0x34
 2275 00ce 00       		.byte	0
 2276 00cf 31       		.uleb128 0x31
 2277 00d0 13       		.uleb128 0x13
 2278 00d1 02       		.uleb128 0x2
 2279 00d2 17       		.uleb128 0x17
 2280 00d3 00       		.byte	0
 2281 00d4 00       		.byte	0
 2282 00d5 12       		.uleb128 0x12
 2283 00d6 0B       		.uleb128 0xb
 2284 00d7 01       		.byte	0x1
 2285 00d8 11       		.uleb128 0x11
 2286 00d9 01       		.uleb128 0x1
ARM GAS  e:\temp\ccEpTfL0.s 			page 124


 2287 00da 12       		.uleb128 0x12
 2288 00db 06       		.uleb128 0x6
 2289 00dc 00       		.byte	0
 2290 00dd 00       		.byte	0
 2291 00de 13       		.uleb128 0x13
 2292 00df 2E       		.uleb128 0x2e
 2293 00e0 00       		.byte	0
 2294 00e1 3F       		.uleb128 0x3f
 2295 00e2 19       		.uleb128 0x19
 2296 00e3 03       		.uleb128 0x3
 2297 00e4 0E       		.uleb128 0xe
 2298 00e5 3A       		.uleb128 0x3a
 2299 00e6 0B       		.uleb128 0xb
 2300 00e7 3B       		.uleb128 0x3b
 2301 00e8 05       		.uleb128 0x5
 2302 00e9 27       		.uleb128 0x27
 2303 00ea 19       		.uleb128 0x19
 2304 00eb 49       		.uleb128 0x49
 2305 00ec 13       		.uleb128 0x13
 2306 00ed 11       		.uleb128 0x11
 2307 00ee 01       		.uleb128 0x1
 2308 00ef 12       		.uleb128 0x12
 2309 00f0 06       		.uleb128 0x6
 2310 00f1 40       		.uleb128 0x40
 2311 00f2 18       		.uleb128 0x18
 2312 00f3 9742     		.uleb128 0x2117
 2313 00f5 19       		.uleb128 0x19
 2314 00f6 00       		.byte	0
 2315 00f7 00       		.byte	0
 2316 00f8 14       		.uleb128 0x14
 2317 00f9 2E       		.uleb128 0x2e
 2318 00fa 00       		.byte	0
 2319 00fb 3F       		.uleb128 0x3f
 2320 00fc 19       		.uleb128 0x19
 2321 00fd 03       		.uleb128 0x3
 2322 00fe 0E       		.uleb128 0xe
 2323 00ff 3A       		.uleb128 0x3a
 2324 0100 0B       		.uleb128 0xb
 2325 0101 3B       		.uleb128 0x3b
 2326 0102 05       		.uleb128 0x5
 2327 0103 27       		.uleb128 0x27
 2328 0104 19       		.uleb128 0x19
 2329 0105 11       		.uleb128 0x11
 2330 0106 01       		.uleb128 0x1
 2331 0107 12       		.uleb128 0x12
 2332 0108 06       		.uleb128 0x6
 2333 0109 40       		.uleb128 0x40
 2334 010a 18       		.uleb128 0x18
 2335 010b 9742     		.uleb128 0x2117
 2336 010d 19       		.uleb128 0x19
 2337 010e 00       		.byte	0
 2338 010f 00       		.byte	0
 2339 0110 15       		.uleb128 0x15
 2340 0111 2E       		.uleb128 0x2e
 2341 0112 01       		.byte	0x1
 2342 0113 3F       		.uleb128 0x3f
 2343 0114 19       		.uleb128 0x19
ARM GAS  e:\temp\ccEpTfL0.s 			page 125


 2344 0115 03       		.uleb128 0x3
 2345 0116 0E       		.uleb128 0xe
 2346 0117 3A       		.uleb128 0x3a
 2347 0118 0B       		.uleb128 0xb
 2348 0119 3B       		.uleb128 0x3b
 2349 011a 05       		.uleb128 0x5
 2350 011b 27       		.uleb128 0x27
 2351 011c 19       		.uleb128 0x19
 2352 011d 11       		.uleb128 0x11
 2353 011e 01       		.uleb128 0x1
 2354 011f 12       		.uleb128 0x12
 2355 0120 06       		.uleb128 0x6
 2356 0121 40       		.uleb128 0x40
 2357 0122 18       		.uleb128 0x18
 2358 0123 9742     		.uleb128 0x2117
 2359 0125 19       		.uleb128 0x19
 2360 0126 01       		.uleb128 0x1
 2361 0127 13       		.uleb128 0x13
 2362 0128 00       		.byte	0
 2363 0129 00       		.byte	0
 2364 012a 16       		.uleb128 0x16
 2365 012b 05       		.uleb128 0x5
 2366 012c 00       		.byte	0
 2367 012d 03       		.uleb128 0x3
 2368 012e 0E       		.uleb128 0xe
 2369 012f 3A       		.uleb128 0x3a
 2370 0130 0B       		.uleb128 0xb
 2371 0131 3B       		.uleb128 0x3b
 2372 0132 05       		.uleb128 0x5
 2373 0133 49       		.uleb128 0x49
 2374 0134 13       		.uleb128 0x13
 2375 0135 02       		.uleb128 0x2
 2376 0136 17       		.uleb128 0x17
 2377 0137 00       		.byte	0
 2378 0138 00       		.byte	0
 2379 0139 17       		.uleb128 0x17
 2380 013a 2E       		.uleb128 0x2e
 2381 013b 01       		.byte	0x1
 2382 013c 3F       		.uleb128 0x3f
 2383 013d 19       		.uleb128 0x19
 2384 013e 03       		.uleb128 0x3
 2385 013f 0E       		.uleb128 0xe
 2386 0140 3A       		.uleb128 0x3a
 2387 0141 0B       		.uleb128 0xb
 2388 0142 3B       		.uleb128 0x3b
 2389 0143 05       		.uleb128 0x5
 2390 0144 27       		.uleb128 0x27
 2391 0145 19       		.uleb128 0x19
 2392 0146 49       		.uleb128 0x49
 2393 0147 13       		.uleb128 0x13
 2394 0148 11       		.uleb128 0x11
 2395 0149 01       		.uleb128 0x1
 2396 014a 12       		.uleb128 0x12
 2397 014b 06       		.uleb128 0x6
 2398 014c 40       		.uleb128 0x40
 2399 014d 18       		.uleb128 0x18
 2400 014e 9742     		.uleb128 0x2117
ARM GAS  e:\temp\ccEpTfL0.s 			page 126


 2401 0150 19       		.uleb128 0x19
 2402 0151 01       		.uleb128 0x1
 2403 0152 13       		.uleb128 0x13
 2404 0153 00       		.byte	0
 2405 0154 00       		.byte	0
 2406 0155 18       		.uleb128 0x18
 2407 0156 34       		.uleb128 0x34
 2408 0157 00       		.byte	0
 2409 0158 03       		.uleb128 0x3
 2410 0159 0E       		.uleb128 0xe
 2411 015a 3A       		.uleb128 0x3a
 2412 015b 0B       		.uleb128 0xb
 2413 015c 3B       		.uleb128 0x3b
 2414 015d 05       		.uleb128 0x5
 2415 015e 49       		.uleb128 0x49
 2416 015f 13       		.uleb128 0x13
 2417 0160 02       		.uleb128 0x2
 2418 0161 17       		.uleb128 0x17
 2419 0162 00       		.byte	0
 2420 0163 00       		.byte	0
 2421 0164 19       		.uleb128 0x19
 2422 0165 2E       		.uleb128 0x2e
 2423 0166 01       		.byte	0x1
 2424 0167 3F       		.uleb128 0x3f
 2425 0168 19       		.uleb128 0x19
 2426 0169 03       		.uleb128 0x3
 2427 016a 0E       		.uleb128 0xe
 2428 016b 3A       		.uleb128 0x3a
 2429 016c 0B       		.uleb128 0xb
 2430 016d 3B       		.uleb128 0x3b
 2431 016e 05       		.uleb128 0x5
 2432 016f 27       		.uleb128 0x27
 2433 0170 19       		.uleb128 0x19
 2434 0171 11       		.uleb128 0x11
 2435 0172 01       		.uleb128 0x1
 2436 0173 12       		.uleb128 0x12
 2437 0174 06       		.uleb128 0x6
 2438 0175 40       		.uleb128 0x40
 2439 0176 18       		.uleb128 0x18
 2440 0177 9642     		.uleb128 0x2116
 2441 0179 19       		.uleb128 0x19
 2442 017a 01       		.uleb128 0x1
 2443 017b 13       		.uleb128 0x13
 2444 017c 00       		.byte	0
 2445 017d 00       		.byte	0
 2446 017e 1A       		.uleb128 0x1a
 2447 017f 898201   		.uleb128 0x4109
 2448 0182 00       		.byte	0
 2449 0183 11       		.uleb128 0x11
 2450 0184 01       		.uleb128 0x1
 2451 0185 31       		.uleb128 0x31
 2452 0186 13       		.uleb128 0x13
 2453 0187 00       		.byte	0
 2454 0188 00       		.byte	0
 2455 0189 1B       		.uleb128 0x1b
 2456 018a 34       		.uleb128 0x34
 2457 018b 00       		.byte	0
ARM GAS  e:\temp\ccEpTfL0.s 			page 127


 2458 018c 03       		.uleb128 0x3
 2459 018d 0E       		.uleb128 0xe
 2460 018e 3A       		.uleb128 0x3a
 2461 018f 0B       		.uleb128 0xb
 2462 0190 3B       		.uleb128 0x3b
 2463 0191 0B       		.uleb128 0xb
 2464 0192 49       		.uleb128 0x49
 2465 0193 13       		.uleb128 0x13
 2466 0194 02       		.uleb128 0x2
 2467 0195 18       		.uleb128 0x18
 2468 0196 00       		.byte	0
 2469 0197 00       		.byte	0
 2470 0198 1C       		.uleb128 0x1c
 2471 0199 34       		.uleb128 0x34
 2472 019a 00       		.byte	0
 2473 019b 03       		.uleb128 0x3
 2474 019c 0E       		.uleb128 0xe
 2475 019d 3A       		.uleb128 0x3a
 2476 019e 0B       		.uleb128 0xb
 2477 019f 3B       		.uleb128 0x3b
 2478 01a0 0B       		.uleb128 0xb
 2479 01a1 49       		.uleb128 0x49
 2480 01a2 13       		.uleb128 0x13
 2481 01a3 3F       		.uleb128 0x3f
 2482 01a4 19       		.uleb128 0x19
 2483 01a5 3C       		.uleb128 0x3c
 2484 01a6 19       		.uleb128 0x19
 2485 01a7 00       		.byte	0
 2486 01a8 00       		.byte	0
 2487 01a9 00       		.byte	0
 2488              		.section	.debug_loc,"",%progbits
 2489              	.Ldebug_loc0:
 2490              	.LLST0:
 2491 0000 00000000 		.4byte	.LVL0
 2492 0004 58000000 		.4byte	.LVL6
 2493 0008 0100     		.2byte	0x1
 2494 000a 50       		.byte	0x50
 2495 000b 58000000 		.4byte	.LVL6
 2496 000f 9C000000 		.4byte	.LVL19
 2497 0013 0400     		.2byte	0x4
 2498 0015 F3       		.byte	0xf3
 2499 0016 01       		.uleb128 0x1
 2500 0017 50       		.byte	0x50
 2501 0018 9F       		.byte	0x9f
 2502 0019 9C000000 		.4byte	.LVL19
 2503 001d AA000000 		.4byte	.LVL21
 2504 0021 0100     		.2byte	0x1
 2505 0023 50       		.byte	0x50
 2506 0024 AA000000 		.4byte	.LVL21
 2507 0028 E8000000 		.4byte	.LFE4
 2508 002c 0400     		.2byte	0x4
 2509 002e F3       		.byte	0xf3
 2510 002f 01       		.uleb128 0x1
 2511 0030 50       		.byte	0x50
 2512 0031 9F       		.byte	0x9f
 2513 0032 00000000 		.4byte	0
 2514 0036 00000000 		.4byte	0
ARM GAS  e:\temp\ccEpTfL0.s 			page 128


 2515              	.LLST1:
 2516 003a 00000000 		.4byte	.LVL0
 2517 003e 06000000 		.4byte	.LVL1
 2518 0042 0100     		.2byte	0x1
 2519 0044 51       		.byte	0x51
 2520 0045 06000000 		.4byte	.LVL1
 2521 0049 AC000000 		.4byte	.LVL22
 2522 004d 0100     		.2byte	0x1
 2523 004f 57       		.byte	0x57
 2524 0050 AC000000 		.4byte	.LVL22
 2525 0054 E8000000 		.4byte	.LFE4
 2526 0058 0400     		.2byte	0x4
 2527 005a F3       		.byte	0xf3
 2528 005b 01       		.uleb128 0x1
 2529 005c 51       		.byte	0x51
 2530 005d 9F       		.byte	0x9f
 2531 005e 00000000 		.4byte	0
 2532 0062 00000000 		.4byte	0
 2533              	.LLST2:
 2534 0066 0C000000 		.4byte	.LVL2
 2535 006a 10000000 		.4byte	.LVL3
 2536 006e 0700     		.2byte	0x7
 2537 0070 72       		.byte	0x72
 2538 0071 00       		.sleb128 0
 2539 0072 0A       		.byte	0xa
 2540 0073 0F0F     		.2byte	0xf0f
 2541 0075 1A       		.byte	0x1a
 2542 0076 9F       		.byte	0x9f
 2543 0077 10000000 		.4byte	.LVL3
 2544 007b 18000000 		.4byte	.LVL4
 2545 007f 0100     		.2byte	0x1
 2546 0081 52       		.byte	0x52
 2547 0082 00000000 		.4byte	0
 2548 0086 00000000 		.4byte	0
 2549              	.LLST3:
 2550 008a A8000000 		.4byte	.LVL20
 2551 008e AA000000 		.4byte	.LVL21
 2552 0092 0200     		.2byte	0x2
 2553 0094 37       		.byte	0x37
 2554 0095 9F       		.byte	0x9f
 2555 0096 AA000000 		.4byte	.LVL21
 2556 009a E8000000 		.4byte	.LFE4
 2557 009e 0100     		.2byte	0x1
 2558 00a0 53       		.byte	0x53
 2559 00a1 00000000 		.4byte	0
 2560 00a5 00000000 		.4byte	0
 2561              	.LLST4:
 2562 00a9 4A000000 		.4byte	.LVL5
 2563 00ad 9A000000 		.4byte	.LVL18
 2564 00b1 0100     		.2byte	0x1
 2565 00b3 57       		.byte	0x57
 2566 00b4 00000000 		.4byte	0
 2567 00b8 00000000 		.4byte	0
 2568              	.LLST5:
 2569 00bc 4A000000 		.4byte	.LVL5
 2570 00c0 58000000 		.4byte	.LVL6
 2571 00c4 0100     		.2byte	0x1
ARM GAS  e:\temp\ccEpTfL0.s 			page 129


 2572 00c6 50       		.byte	0x50
 2573 00c7 58000000 		.4byte	.LVL6
 2574 00cb 9A000000 		.4byte	.LVL18
 2575 00cf 0400     		.2byte	0x4
 2576 00d1 F3       		.byte	0xf3
 2577 00d2 01       		.uleb128 0x1
 2578 00d3 50       		.byte	0x50
 2579 00d4 9F       		.byte	0x9f
 2580 00d5 00000000 		.4byte	0
 2581 00d9 00000000 		.4byte	0
 2582              	.LLST6:
 2583 00dd 84000000 		.4byte	.LVL14
 2584 00e1 86000000 		.4byte	.LVL15
 2585 00e5 0100     		.2byte	0x1
 2586 00e7 50       		.byte	0x50
 2587 00e8 92000000 		.4byte	.LVL17
 2588 00ec 9A000000 		.4byte	.LVL18
 2589 00f0 0100     		.2byte	0x1
 2590 00f2 50       		.byte	0x50
 2591 00f3 00000000 		.4byte	0
 2592 00f7 00000000 		.4byte	0
 2593              	.LLST7:
 2594 00fb 60000000 		.4byte	.LVL8
 2595 00ff 64000000 		.4byte	.LVL9
 2596 0103 0100     		.2byte	0x1
 2597 0105 50       		.byte	0x50
 2598 0106 64000000 		.4byte	.LVL9
 2599 010a 7C000000 		.4byte	.LVL12
 2600 010e 0100     		.2byte	0x1
 2601 0110 55       		.byte	0x55
 2602 0111 86000000 		.4byte	.LVL15
 2603 0115 92000000 		.4byte	.LVL17
 2604 0119 0100     		.2byte	0x1
 2605 011b 55       		.byte	0x55
 2606 011c 00000000 		.4byte	0
 2607 0120 00000000 		.4byte	0
 2608              	.LLST8:
 2609 0124 00000000 		.4byte	.LVL23
 2610 0128 00000000 		.4byte	.LVL23
 2611 012c 0100     		.2byte	0x1
 2612 012e 50       		.byte	0x50
 2613 012f 00000000 		.4byte	.LVL23
 2614 0133 04000000 		.4byte	.LVL24
 2615 0137 0700     		.2byte	0x7
 2616 0139 70       		.byte	0x70
 2617 013a 00       		.sleb128 0
 2618 013b 0A       		.byte	0xa
 2619 013c FFFF     		.2byte	0xffff
 2620 013e 1A       		.byte	0x1a
 2621 013f 9F       		.byte	0x9f
 2622 0140 04000000 		.4byte	.LVL24
 2623 0144 14000000 		.4byte	.LFE8
 2624 0148 0800     		.2byte	0x8
 2625 014a F3       		.byte	0xf3
 2626 014b 01       		.uleb128 0x1
 2627 014c 50       		.byte	0x50
 2628 014d 0A       		.byte	0xa
ARM GAS  e:\temp\ccEpTfL0.s 			page 130


 2629 014e FFFF     		.2byte	0xffff
 2630 0150 1A       		.byte	0x1a
 2631 0151 9F       		.byte	0x9f
 2632 0152 00000000 		.4byte	0
 2633 0156 00000000 		.4byte	0
 2634              	.LLST9:
 2635 015a 00000000 		.4byte	.LVL25
 2636 015e 08000000 		.4byte	.LVL26
 2637 0162 0100     		.2byte	0x1
 2638 0164 50       		.byte	0x50
 2639 0165 08000000 		.4byte	.LVL26
 2640 0169 10000000 		.4byte	.LVL27
 2641 016d 0700     		.2byte	0x7
 2642 016f 72       		.byte	0x72
 2643 0170 00       		.sleb128 0
 2644 0171 4E       		.byte	0x4e
 2645 0172 3F       		.byte	0x3f
 2646 0173 24       		.byte	0x24
 2647 0174 1A       		.byte	0x1a
 2648 0175 9F       		.byte	0x9f
 2649 0176 10000000 		.4byte	.LVL27
 2650 017a 20000000 		.4byte	.LFE11
 2651 017e 0A00     		.2byte	0xa
 2652 0180 F3       		.byte	0xf3
 2653 0181 01       		.uleb128 0x1
 2654 0182 50       		.byte	0x50
 2655 0183 40       		.byte	0x40
 2656 0184 24       		.byte	0x24
 2657 0185 4E       		.byte	0x4e
 2658 0186 3F       		.byte	0x3f
 2659 0187 24       		.byte	0x24
 2660 0188 1A       		.byte	0x1a
 2661 0189 9F       		.byte	0x9f
 2662 018a 00000000 		.4byte	0
 2663 018e 00000000 		.4byte	0
 2664              	.LLST10:
 2665 0192 00000000 		.4byte	.LVL28
 2666 0196 08000000 		.4byte	.LVL30
 2667 019a 0100     		.2byte	0x1
 2668 019c 50       		.byte	0x50
 2669 019d 08000000 		.4byte	.LVL30
 2670 01a1 10000000 		.4byte	.LFE16
 2671 01a5 0500     		.2byte	0x5
 2672 01a7 03       		.byte	0x3
 2673 01a8 04000000 		.4byte	cySysWdtCallback
 2674 01ac 00000000 		.4byte	0
 2675 01b0 00000000 		.4byte	0
 2676              	.LLST11:
 2677 01b4 00000000 		.4byte	.LVL28
 2678 01b8 04000000 		.4byte	.LVL29
 2679 01bc 0200     		.2byte	0x2
 2680 01be 30       		.byte	0x30
 2681 01bf 9F       		.byte	0x9f
 2682 01c0 04000000 		.4byte	.LVL29
 2683 01c4 10000000 		.4byte	.LFE16
 2684 01c8 0100     		.2byte	0x1
 2685 01ca 52       		.byte	0x52
ARM GAS  e:\temp\ccEpTfL0.s 			page 131


 2686 01cb 00000000 		.4byte	0
 2687 01cf 00000000 		.4byte	0
 2688              		.section	.debug_aranges,"",%progbits
 2689 0000 AC000000 		.4byte	0xac
 2690 0004 0200     		.2byte	0x2
 2691 0006 00000000 		.4byte	.Ldebug_info0
 2692 000a 04       		.byte	0x4
 2693 000b 00       		.byte	0
 2694 000c 0000     		.2byte	0
 2695 000e 0000     		.2byte	0
 2696 0010 00000000 		.4byte	.LFB0
 2697 0014 14000000 		.4byte	.LFE0-.LFB0
 2698 0018 00000000 		.4byte	.LFB1
 2699 001c 10000000 		.4byte	.LFE1-.LFB1
 2700 0020 00000000 		.4byte	.LFB2
 2701 0024 34000000 		.4byte	.LFE2-.LFB2
 2702 0028 00000000 		.4byte	.LFB3
 2703 002c 28000000 		.4byte	.LFE3-.LFB3
 2704 0030 00000000 		.4byte	.LFB4
 2705 0034 E8000000 		.4byte	.LFE4-.LFB4
 2706 0038 00000000 		.4byte	.LFB5
 2707 003c 18000000 		.4byte	.LFE5-.LFB5
 2708 0040 00000000 		.4byte	.LFB6
 2709 0044 0C000000 		.4byte	.LFE6-.LFB6
 2710 0048 00000000 		.4byte	.LFB7
 2711 004c 10000000 		.4byte	.LFE7-.LFB7
 2712 0050 00000000 		.4byte	.LFB8
 2713 0054 14000000 		.4byte	.LFE8-.LFB8
 2714 0058 00000000 		.4byte	.LFB9
 2715 005c 0C000000 		.4byte	.LFE9-.LFB9
 2716 0060 00000000 		.4byte	.LFB10
 2717 0064 0C000000 		.4byte	.LFE10-.LFB10
 2718 0068 00000000 		.4byte	.LFB11
 2719 006c 20000000 		.4byte	.LFE11-.LFB11
 2720 0070 00000000 		.4byte	.LFB12
 2721 0074 10000000 		.4byte	.LFE12-.LFB12
 2722 0078 00000000 		.4byte	.LFB13
 2723 007c 10000000 		.4byte	.LFE13-.LFB13
 2724 0080 00000000 		.4byte	.LFB14
 2725 0084 10000000 		.4byte	.LFE14-.LFB14
 2726 0088 00000000 		.4byte	.LFB15
 2727 008c 10000000 		.4byte	.LFE15-.LFB15
 2728 0090 00000000 		.4byte	.LFB16
 2729 0094 10000000 		.4byte	.LFE16-.LFB16
 2730 0098 00000000 		.4byte	.LFB17
 2731 009c 0C000000 		.4byte	.LFE17-.LFB17
 2732 00a0 00000000 		.4byte	.LFB18
 2733 00a4 18000000 		.4byte	.LFE18-.LFB18
 2734 00a8 00000000 		.4byte	0
 2735 00ac 00000000 		.4byte	0
 2736              		.section	.debug_ranges,"",%progbits
 2737              	.Ldebug_ranges0:
 2738 0000 00000000 		.4byte	.LFB0
 2739 0004 14000000 		.4byte	.LFE0
 2740 0008 00000000 		.4byte	.LFB1
 2741 000c 10000000 		.4byte	.LFE1
 2742 0010 00000000 		.4byte	.LFB2
ARM GAS  e:\temp\ccEpTfL0.s 			page 132


 2743 0014 34000000 		.4byte	.LFE2
 2744 0018 00000000 		.4byte	.LFB3
 2745 001c 28000000 		.4byte	.LFE3
 2746 0020 00000000 		.4byte	.LFB4
 2747 0024 E8000000 		.4byte	.LFE4
 2748 0028 00000000 		.4byte	.LFB5
 2749 002c 18000000 		.4byte	.LFE5
 2750 0030 00000000 		.4byte	.LFB6
 2751 0034 0C000000 		.4byte	.LFE6
 2752 0038 00000000 		.4byte	.LFB7
 2753 003c 10000000 		.4byte	.LFE7
 2754 0040 00000000 		.4byte	.LFB8
 2755 0044 14000000 		.4byte	.LFE8
 2756 0048 00000000 		.4byte	.LFB9
 2757 004c 0C000000 		.4byte	.LFE9
 2758 0050 00000000 		.4byte	.LFB10
 2759 0054 0C000000 		.4byte	.LFE10
 2760 0058 00000000 		.4byte	.LFB11
 2761 005c 20000000 		.4byte	.LFE11
 2762 0060 00000000 		.4byte	.LFB12
 2763 0064 10000000 		.4byte	.LFE12
 2764 0068 00000000 		.4byte	.LFB13
 2765 006c 10000000 		.4byte	.LFE13
 2766 0070 00000000 		.4byte	.LFB14
 2767 0074 10000000 		.4byte	.LFE14
 2768 0078 00000000 		.4byte	.LFB15
 2769 007c 10000000 		.4byte	.LFE15
 2770 0080 00000000 		.4byte	.LFB16
 2771 0084 10000000 		.4byte	.LFE16
 2772 0088 00000000 		.4byte	.LFB17
 2773 008c 0C000000 		.4byte	.LFE17
 2774 0090 00000000 		.4byte	.LFB18
 2775 0094 18000000 		.4byte	.LFE18
 2776 0098 00000000 		.4byte	0
 2777 009c 00000000 		.4byte	0
 2778              		.section	.debug_line,"",%progbits
 2779              	.Ldebug_line0:
 2780 0000 22020000 		.section	.debug_str,"MS",%progbits,1
 2780      02005C00 
 2780      00000201 
 2780      FB0E0D00 
 2780      01010101 
 2781              	.LASF31:
 2782 0000 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 2782      73576474 
 2782      47657445 
 2782      6E61626C 
 2782      65645374 
 2783              	.LASF13:
 2784 0019 63797374 		.ascii	"cystatus\000"
 2784      61747573 
 2784      00
 2785              	.LASF14:
 2786 0022 72656733 		.ascii	"reg32\000"
 2786      3200
 2787              	.LASF34:
 2788 0028 43795379 		.ascii	"CySysWdtSetMatch\000"
ARM GAS  e:\temp\ccEpTfL0.s 			page 133


 2788      73576474 
 2788      5365744D 
 2788      61746368 
 2788      00
 2789              	.LASF52:
 2790 0039 63796465 		.ascii	"cydelayFreqHz\000"
 2790      6C617946 
 2790      72657148 
 2790      7A00
 2791              	.LASF20:
 2792 0047 696C6F43 		.ascii	"iloCompensatedCycles\000"
 2792      6F6D7065 
 2792      6E736174 
 2792      65644379 
 2792      636C6573 
 2793              	.LASF25:
 2794 005c 43795379 		.ascii	"CySysClkIloStart\000"
 2794      73436C6B 
 2794      496C6F53 
 2794      74617274 
 2794      00
 2795              	.LASF23:
 2796 006d 63686563 		.ascii	"checkStatus\000"
 2796      6B537461 
 2796      74757300 
 2797              	.LASF45:
 2798 0079 70726576 		.ascii	"prevCallback\000"
 2798      43616C6C 
 2798      6261636B 
 2798      00
 2799              	.LASF39:
 2800 0086 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 2800      73576474 
 2800      436C6561 
 2800      72496E74 
 2800      65727275 
 2801              	.LASF46:
 2802 009d 63795379 		.ascii	"cySysWdtCallback\000"
 2802      73576474 
 2802      43616C6C 
 2802      6261636B 
 2802      00
 2803              	.LASF9:
 2804 00ae 666C6F61 		.ascii	"float\000"
 2804      7400
 2805              	.LASF48:
 2806 00b4 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 2806      72617465 
 2806      645F536F 
 2806      75726365 
 2806      5C50536F 
 2807              	.LASF1:
 2808 00d5 756E7369 		.ascii	"unsigned char\000"
 2808      676E6564 
 2808      20636861 
 2808      7200
 2809              	.LASF36:
ARM GAS  e:\temp\ccEpTfL0.s 			page 134


 2810 00e3 6D617463 		.ascii	"match\000"
 2810      6800
 2811              	.LASF15:
 2812 00e9 63795764 		.ascii	"cyWdtCallback\000"
 2812      7443616C 
 2812      6C626163 
 2812      6B00
 2813              	.LASF26:
 2814 00f7 43795379 		.ascii	"CySysClkIloStop\000"
 2814      73436C6B 
 2814      496C6F53 
 2814      746F7000 
 2815              	.LASF5:
 2816 0107 6C6F6E67 		.ascii	"long unsigned int\000"
 2816      20756E73 
 2816      69676E65 
 2816      6420696E 
 2816      7400
 2817              	.LASF37:
 2818 0119 62697473 		.ascii	"bitsNum\000"
 2818      4E756D00 
 2819              	.LASF3:
 2820 0121 73686F72 		.ascii	"short unsigned int\000"
 2820      7420756E 
 2820      7369676E 
 2820      65642069 
 2820      6E7400
 2821              	.LASF28:
 2822 0134 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 2822      73436C6B 
 2822      496C6F53 
 2822      746F704D 
 2822      65617375 
 2823              	.LASF10:
 2824 014f 646F7562 		.ascii	"double\000"
 2824      6C6500
 2825              	.LASF30:
 2826 0156 43795379 		.ascii	"CySysWdtDisable\000"
 2826      73576474 
 2826      44697361 
 2826      626C6500 
 2827              	.LASF16:
 2828 0166 6C6F6E67 		.ascii	"long double\000"
 2828      20646F75 
 2828      626C6500 
 2829              	.LASF22:
 2830 0172 636F6D70 		.ascii	"compensateRunningStatus.4785\000"
 2830      656E7361 
 2830      74655275 
 2830      6E6E696E 
 2830      67537461 
 2831              	.LASF27:
 2832 018f 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 2832      73436C6B 
 2832      496C6F53 
 2832      74617274 
 2832      4D656173 
ARM GAS  e:\temp\ccEpTfL0.s 			page 135


 2833              	.LASF29:
 2834 01ab 43795379 		.ascii	"CySysWdtEnable\000"
 2834      73576474 
 2834      456E6162 
 2834      6C6500
 2835              	.LASF33:
 2836 01ba 43795379 		.ascii	"CySysWdtGetCount\000"
 2836      73576474 
 2836      47657443 
 2836      6F756E74 
 2836      00
 2837              	.LASF12:
 2838 01cb 75696E74 		.ascii	"uint32\000"
 2838      333200
 2839              	.LASF8:
 2840 01d2 756E7369 		.ascii	"unsigned int\000"
 2840      676E6564 
 2840      20696E74 
 2840      00
 2841              	.LASF21:
 2842 01df 64657369 		.ascii	"desiredDelayInCounts\000"
 2842      72656444 
 2842      656C6179 
 2842      496E436F 
 2842      756E7473 
 2843              	.LASF7:
 2844 01f4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2844      206C6F6E 
 2844      6720756E 
 2844      7369676E 
 2844      65642069 
 2845              	.LASF41:
 2846 020b 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 2846      73576474 
 2846      556E6D61 
 2846      736B496E 
 2846      74657272 
 2847              	.LASF47:
 2848 0223 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2848      43313120 
 2848      352E342E 
 2848      31203230 
 2848      31363036 
 2849 0256 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2849      20726576 
 2849      6973696F 
 2849      6E203233 
 2849      37373135 
 2850 0289 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects -finline-fu"
 2850      66756E63 
 2850      74696F6E 
 2850      2D736563 
 2850      74696F6E 
 2851 02bc 6E637469 		.ascii	"nctions -flto -fno-strict-aliasing\000"
 2851      6F6E7320 
 2851      2D666C74 
 2851      6F202D66 
ARM GAS  e:\temp\ccEpTfL0.s 			page 136


 2851      6E6F2D73 
 2852              	.LASF19:
 2853 02df 636F6D70 		.ascii	"compensatedCycles\000"
 2853      656E7361 
 2853      74656443 
 2853      79636C65 
 2853      7300
 2854              	.LASF51:
 2855 02f1 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 2855      73576474 
 2855      53657449 
 2855      6E746572 
 2855      72757074 
 2856              	.LASF40:
 2857 030e 43795379 		.ascii	"CySysWdtMaskInterrupt\000"
 2857      73576474 
 2857      4D61736B 
 2857      496E7465 
 2857      72727570 
 2858              	.LASF17:
 2859 0324 73697A65 		.ascii	"sizetype\000"
 2859      74797065 
 2859      00
 2860              	.LASF44:
 2861 032d 43795379 		.ascii	"CySysWdtIsr\000"
 2861      73576474 
 2861      49737200 
 2862              	.LASF38:
 2863 0339 43795379 		.ascii	"CySysWdtGetIgnoreBits\000"
 2863      73576474 
 2863      47657449 
 2863      676E6F72 
 2863      65426974 
 2864              	.LASF6:
 2865 034f 6C6F6E67 		.ascii	"long long int\000"
 2865      206C6F6E 
 2865      6720696E 
 2865      7400
 2866              	.LASF18:
 2867 035d 64657369 		.ascii	"desiredDelay\000"
 2867      72656444 
 2867      656C6179 
 2867      00
 2868              	.LASF11:
 2869 036a 63686172 		.ascii	"char\000"
 2869      00
 2870              	.LASF32:
 2871 036f 43795379 		.ascii	"CySysWdtGetMatch\000"
 2871      73576474 
 2871      4765744D 
 2871      61746368 
 2871      00
 2872              	.LASF35:
 2873 0380 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 2873      73576474 
 2873      53657449 
 2873      676E6F72 
ARM GAS  e:\temp\ccEpTfL0.s 			page 137


 2873      65426974 
 2874              	.LASF2:
 2875 0396 73686F72 		.ascii	"short int\000"
 2875      7420696E 
 2875      7400
 2876              	.LASF4:
 2877 03a0 6C6F6E67 		.ascii	"long int\000"
 2877      20696E74 
 2877      00
 2878              	.LASF24:
 2879 03a9 72657475 		.ascii	"returnStatus\000"
 2879      726E5374 
 2879      61747573 
 2879      00
 2880              	.LASF0:
 2881 03b6 7369676E 		.ascii	"signed char\000"
 2881      65642063 
 2881      68617200 
 2882              	.LASF49:
 2883 03c2 433A5C55 		.ascii	"C:\\Users\\Admin\\Desktop\\_FIRMWARE\\DBARLite\\CYP"
 2883      73657273 
 2883      5C41646D 
 2883      696E5C44 
 2883      65736B74 
 2884 03ef 44353232 		.ascii	"D5225\\CYPD5225-96BZXI_notebook\\CYPD5225-96BZXI_no"
 2884      355C4359 
 2884      50443532 
 2884      32352D39 
 2884      36425A58 
 2885 0420 7465626F 		.ascii	"tebook.cydsn\000"
 2885      6F6B2E63 
 2885      7964736E 
 2885      00
 2886              	.LASF43:
 2887 042d 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 2887      73576474 
 2887      47657449 
 2887      6E746572 
 2887      72757074 
 2888              	.LASF50:
 2889 044a 43795379 		.ascii	"CySysClkIloCompensate\000"
 2889      73436C6B 
 2889      496C6F43 
 2889      6F6D7065 
 2889      6E736174 
 2890              	.LASF42:
 2891 0460 66756E63 		.ascii	"function\000"
 2891      74696F6E 
 2891      00
 2892              		.comm	__gnu_lto_v1,1,1
 2893              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
